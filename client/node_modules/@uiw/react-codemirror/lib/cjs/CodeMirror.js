"use strict";

var _interopRequireWildcard3 = require("@babel/runtime/helpers/interopRequireWildcard");

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;

var _interopRequireWildcard2 = _interopRequireDefault(require("@babel/runtime/helpers/interopRequireWildcard"));

var _typeof2 = _interopRequireDefault(require("@babel/runtime/helpers/typeof"));

var _regenerator = _interopRequireDefault(require("@babel/runtime/regenerator"));

var _asyncToGenerator2 = _interopRequireDefault(require("@babel/runtime/helpers/asyncToGenerator"));

var _classCallCheck2 = _interopRequireDefault(require("@babel/runtime/helpers/classCallCheck"));

var _createClass2 = _interopRequireDefault(require("@babel/runtime/helpers/createClass"));

var _inherits2 = _interopRequireDefault(require("@babel/runtime/helpers/inherits"));

var _createSuper2 = _interopRequireDefault(require("@babel/runtime/helpers/createSuper"));

var _codemirror = _interopRequireDefault(require("codemirror"));

require("codemirror/mode/meta");

var _react = _interopRequireWildcard3(require("react"));

var _propTypes = _interopRequireDefault(require("prop-types"));

var ReactCodeMirror = /*#__PURE__*/function (_Component) {
  (0, _inherits2.default)(ReactCodeMirror, _Component);

  var _super = (0, _createSuper2.default)(ReactCodeMirror);

  function ReactCodeMirror(props) {
    var _this;

    (0, _classCallCheck2.default)(this, ReactCodeMirror);
    _this = _super.call(this, props);
    _this.codemirror = null;
    _this.editor = null;
    return _this;
  }

  (0, _createClass2.default)(ReactCodeMirror, [{
    key: "componentDidMount",
    value: function componentDidMount() {
      this.renderCodeMirror();
    }
  }, {
    key: "renderCodeMirror",
    value: function renderCodeMirror() {
      var _this2 = this;

      // 生成codemirror实例
      this.editor = _codemirror.default.fromTextArea(this.textarea, this.props.options); // 获取CodeMirror用于获取其中的一些常量

      this.codemirror = _codemirror.default; // 事件处理映射

      var eventDict = this.getEventHandleFromProps();
      Object.keys(eventDict).forEach(function (event) {
        _this2.editor.on(eventDict[event], _this2.props[event]);
      });
      var _this$props = this.props,
          value = _this$props.value,
          width = _this$props.width,
          height = _this$props.height; // 初始化值

      this.editor.setValue(value || '');

      if (width || height) {
        // 设置尺寸
        this.editor.setSize(width, height);
      }
    }
  }, {
    key: "componentDidUpdate",
    value: function () {
      var _componentDidUpdate = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee(prevProps) {
        var val, value, width, height;
        return _regenerator.default.wrap(function _callee$(_context) {
          while (1) {
            switch (_context.prev = _context.next) {
              case 0:
                val = this.editor.getValue();
                value = this.props.value;

                if (value !== undefined && value !== prevProps.value && value !== val) {
                  this.editor.setValue(value);
                }

                width = prevProps.width, height = prevProps.height;
                _context.next = 6;
                return this.setOptions(this.props.options);

              case 6:
                if (width !== this.props.width || height !== this.props.height) {
                  this.editor.setSize(this.props.width, this.props.height);
                }

              case 7:
              case "end":
                return _context.stop();
            }
          }
        }, _callee, this);
      }));

      function componentDidUpdate(_x) {
        return _componentDidUpdate.apply(this, arguments);
      }

      return componentDidUpdate;
    }() // http://codemirror.net/doc/manual.html#config

  }, {
    key: "setOptions",
    value: function () {
      var _setOptions = (0, _asyncToGenerator2.default)( /*#__PURE__*/_regenerator.default.mark(function _callee2(options) {
        var _this3 = this;

        var mode;
        return _regenerator.default.wrap(function _callee2$(_context2) {
          while (1) {
            switch (_context2.prev = _context2.next) {
              case 0:
                if (!((0, _typeof2.default)(options) === 'object')) {
                  _context2.next = 7;
                  break;
                }

                mode = _codemirror.default.findModeByName(options.mode);

                if (!(mode && mode.mode)) {
                  _context2.next = 5;
                  break;
                }

                _context2.next = 5;
                return Promise.resolve("codemirror/mode/".concat(mode.mode, "/").concat(mode.mode, ".js")).then(function (s) {
                  return (0, _interopRequireWildcard2.default)(require(s));
                });

              case 5:
                if (mode) {
                  options.mode = mode.mime;
                }

                Object.keys(options).forEach(function (name) {
                  if (options[name] && JSON.stringify(options[name])) {
                    _this3.editor.setOption(name, options[name]);
                  }
                });

              case 7:
              case "end":
                return _context2.stop();
            }
          }
        }, _callee2);
      }));

      function setOptions(_x2) {
        return _setOptions.apply(this, arguments);
      }

      return setOptions;
    }()
  }, {
    key: "componentWillUnmount",
    value: function componentWillUnmount() {
      if (this.editor) {
        this.editor.toTextArea();
      }
    } // 将props中所有的事件处理函数映射并保存

  }, {
    key: "getEventHandleFromProps",
    value: function getEventHandleFromProps() {
      var propNames = Object.keys(this.props);
      var eventHandle = propNames.filter(function (prop) {
        return /^on+/.test(prop);
      });
      var eventDict = {};
      eventHandle.forEach(function (ele) {
        var name = ele.slice(2);
        eventDict[ele] = name.replace(name[0], name[0].toLowerCase());
      });
      return eventDict;
    }
  }, {
    key: "render",
    value: function render() {
      var _this4 = this;

      return /*#__PURE__*/_react.default.createElement("textarea", {
        ref: function ref(instance) {
          _this4.textarea = instance;
        }
      });
    }
  }]);
  return ReactCodeMirror;
}(_react.Component);

exports.default = ReactCodeMirror;
ReactCodeMirror.defaultProps = {
  value: '',
  options: {},
  width: '100%',
  height: '100%'
};
ReactCodeMirror.propTypes = {
  value: _propTypes.default.string,
  options: _propTypes.default.object,
  width: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number]),
  height: _propTypes.default.oneOfType([_propTypes.default.string, _propTypes.default.number])
};
module.exports = exports.default; 
//# sourceMappingURL=CodeMirror.js.map