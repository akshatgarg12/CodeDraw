import _extends from "@babel/runtime/helpers/esm/extends";
import _objectSpread from "@babel/runtime/helpers/esm/objectSpread2";
import _objectWithoutProperties from "@babel/runtime/helpers/esm/objectWithoutProperties";
import _classCallCheck from "@babel/runtime/helpers/esm/classCallCheck";
import _createClass from "@babel/runtime/helpers/esm/createClass";
import _inherits from "@babel/runtime/helpers/esm/inherits";
import _createSuper from "@babel/runtime/helpers/esm/createSuper";
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import CodeMirror from './CodeMirror';
import './codemirror.css';
import './index.css';
var defaultOptions = {
  tabSize: 2,
  autoCloseBrackets: true,
  matchBrackets: true,
  showCursorWhenSelecting: true,
  // 显示行号
  lineNumbers: true,
  fullScreen: true
};

var ReactCodeMirror = /*#__PURE__*/function (_Component) {
  _inherits(ReactCodeMirror, _Component);

  var _super = _createSuper(ReactCodeMirror);

  function ReactCodeMirror() {
    var _this;

    _classCallCheck(this, ReactCodeMirror);

    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    _this = _super.call.apply(_super, [this].concat(args));

    _this.getInstance = function (instance) {
      if (instance) {
        _this.codemirror = instance.codemirror;
        _this.editor = instance.editor;
      }
    };

    return _this;
  }

  _createClass(ReactCodeMirror, [{
    key: "render",
    value: function render() {
      var _this$props = this.props,
          options = _this$props.options,
          otherProps = _objectWithoutProperties(_this$props, ["options"]);

      return /*#__PURE__*/React.createElement(CodeMirror, _extends({}, otherProps, {
        ref: this.getInstance,
        options: _objectSpread(_objectSpread({}, defaultOptions), options)
      }));
    }
  }]);

  return ReactCodeMirror;
}(Component);

export { ReactCodeMirror as default };
ReactCodeMirror.defaultProps = {
  value: '',
  options: {}
};
ReactCodeMirror.propTypes = {
  value: PropTypes.string,
  options: PropTypes.object
}; 
//# sourceMappingURL=index.js.map