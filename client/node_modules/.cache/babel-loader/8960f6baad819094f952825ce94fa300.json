{"ast":null,"code":"var _jsxFileName = \"/Users/akshatgarg/Documents/codedraw/src/Components/TextArea.jsx\";\nimport React from 'react';\nimport { Editor, EditorState, RichUtils } from 'draft-js';\nimport 'draft-js/dist/Draft.css';\nexport default class MyEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editorState: EditorState.createEmpty()\n    };\n\n    this.onChange = editorState => this.setState({\n      editorState\n    });\n\n    this.handleKeyCommand = this.handleKeyCommand.bind(this);\n  }\n\n  handleKeyCommand(command, editorState) {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      this.onChange(newState);\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"myEditor\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      onClick: this._onBoldClick.bind(this),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 8\n      }\n    }, \"Bold\"), /*#__PURE__*/React.createElement(Editor, {\n      editorState: this.state.editorState,\n      handleKeyCommand: this.handleKeyCommand,\n      onChange: this.onChange,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }));\n  }\n\n} // export default function MyEditor() {\n//   const [editorState, setEditorState] = React.useState(\n//     () => EditorState.createEmpty(),\n//   );\n//   function _onBoldClick(){\n//     onChange(RichUtils.toggleInlineStyle(editorState, 'BOLD'));\n//   }\n//   const onChange = (editorState) => setEditorState(editorState);\n//   function handleKeyCommand(command, editorState) {\n//     const newState = RichUtils.handleKeyCommand(editorState, command);\n//     if (newState) {\n//       onChange(newState);\n//       return 'handled';\n//     }\n//     return 'not-handled';\n//   }\n//   return <div className=\"myEditor\">\n//     <button onClick={_onBoldClick}>Bold</button>\n//         <Editor\n//           editorState={editorState}\n//           handleKeyCommand={handleKeyCommand}\n//           onChange={onChange}\n//         />\n//   </div>\n// }","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw/src/Components/TextArea.jsx"],"names":["React","Editor","EditorState","RichUtils","MyEditor","Component","constructor","props","state","editorState","createEmpty","onChange","setState","handleKeyCommand","bind","command","newState","render","_onBoldClick"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,MAAR,EAAgBC,WAAhB,EAA4BC,SAA5B,QAA4C,UAA5C;AACA,OAAO,yBAAP;AAEA,eAAe,MAAMC,QAAN,SAAuBJ,KAAK,CAACK,SAA7B,CAAuC;AACpDC,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AAACC,MAAAA,WAAW,EAAEP,WAAW,CAACQ,WAAZ;AAAd,KAAb;;AACA,SAAKC,QAAL,GAAgBF,WAAW,IAAI,KAAKG,QAAL,CAAc;AAACH,MAAAA;AAAD,KAAd,CAA/B;;AACA,SAAKI,gBAAL,GAAwB,KAAKA,gBAAL,CAAsBC,IAAtB,CAA2B,IAA3B,CAAxB;AACD;;AAEDD,EAAAA,gBAAgB,CAACE,OAAD,EAAUN,WAAV,EAAuB;AACrC,UAAMO,QAAQ,GAAGb,SAAS,CAACU,gBAAV,CAA2BJ,WAA3B,EAAwCM,OAAxC,CAAjB;;AAEA,QAAIC,QAAJ,EAAc;AACZ,WAAKL,QAAL,CAAcK,QAAd;AACA,aAAO,SAAP;AACD;;AAED,WAAO,aAAP;AACD;;AAEDC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACC;AAAQ,MAAA,OAAO,EAAE,KAAKC,YAAL,CAAkBJ,IAAlB,CAAuB,IAAvB,CAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADD,eAEA,oBAAC,MAAD;AACE,MAAA,WAAW,EAAE,KAAKN,KAAL,CAAWC,WAD1B;AAEE,MAAA,gBAAgB,EAAE,KAAKI,gBAFzB;AAGE,MAAA,QAAQ,EAAE,KAAKF,QAHjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFA,CADF;AAUD;;AA9BmD,C,CAiCtD;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React from 'react'\nimport {Editor, EditorState,RichUtils} from 'draft-js';\nimport 'draft-js/dist/Draft.css';\n\nexport default class MyEditor extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {editorState: EditorState.createEmpty()};\n    this.onChange = editorState => this.setState({editorState});\n    this.handleKeyCommand = this.handleKeyCommand.bind(this);\n  }\n\n  handleKeyCommand(command, editorState) {\n    const newState = RichUtils.handleKeyCommand(editorState, command);\n\n    if (newState) {\n      this.onChange(newState);\n      return 'handled';\n    }\n\n    return 'not-handled';\n  }\n\n  render() {\n    return (\n      <div className=\"myEditor\">\n       <button onClick={this._onBoldClick.bind(this)}>Bold</button>\n      <Editor\n        editorState={this.state.editorState}\n        handleKeyCommand={this.handleKeyCommand}\n        onChange={this.onChange}\n      />\n      </div>\n    );\n  }\n}\n\n// export default function MyEditor() {\n//   const [editorState, setEditorState] = React.useState(\n//     () => EditorState.createEmpty(),\n//   );\n//   function _onBoldClick(){\n//     onChange(RichUtils.toggleInlineStyle(editorState, 'BOLD'));\n//   }\n\n//   const onChange = (editorState) => setEditorState(editorState);\n  \n//   function handleKeyCommand(command, editorState) {\n//     const newState = RichUtils.handleKeyCommand(editorState, command);\n//     if (newState) {\n//       onChange(newState);\n//       return 'handled';\n//     }\n//     return 'not-handled';\n//   }\n\n//   return <div className=\"myEditor\">\n//     <button onClick={_onBoldClick}>Bold</button>\n//         <Editor\n//           editorState={editorState}\n//           handleKeyCommand={handleKeyCommand}\n//           onChange={onChange}\n//         />\n//   </div>\n// }"]},"metadata":{},"sourceType":"module"}