{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Stylus mode created by Dmitry Kiselyov http://git.io/AaRB\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"stylus\", function (config) {\n    var indentUnit = config.indentUnit,\n        indentUnitString = '',\n        tagKeywords = keySet(tagKeywords_),\n        tagVariablesRegexp = /^(a|b|i|s|col|em)$/i,\n        propertyKeywords = keySet(propertyKeywords_),\n        nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_),\n        valueKeywords = keySet(valueKeywords_),\n        colorKeywords = keySet(colorKeywords_),\n        documentTypes = keySet(documentTypes_),\n        documentTypesRegexp = wordRegexp(documentTypes_),\n        mediaFeatures = keySet(mediaFeatures_),\n        mediaTypes = keySet(mediaTypes_),\n        fontProperties = keySet(fontProperties_),\n        operatorsRegexp = /^\\s*([.]{2,3}|&&|\\|\\||\\*\\*|[?!=:]?=|[-+*\\/%<>]=?|\\?:|\\~)/,\n        wordOperatorKeywordsRegexp = wordRegexp(wordOperatorKeywords_),\n        blockKeywords = keySet(blockKeywords_),\n        vendorPrefixesRegexp = new RegExp(/^\\-(moz|ms|o|webkit)-/i),\n        commonAtoms = keySet(commonAtoms_),\n        firstWordMatch = \"\",\n        states = {},\n        ch,\n        style,\n        type,\n        override;\n\n    while (indentUnitString.length < indentUnit) indentUnitString += ' ';\n    /**\n     * Tokenizers\n     */\n\n\n    function tokenBase(stream, state) {\n      firstWordMatch = stream.string.match(/(^[\\w-]+\\s*=\\s*$)|(^\\s*[\\w-]+\\s*=\\s*[\\w-])|(^\\s*(\\.|#|@|\\$|\\&|\\[|\\d|\\+|::?|\\{|\\>|~|\\/)?\\s*[\\w-]*([a-z0-9-]|\\*|\\/\\*)(\\(|,)?)/);\n      state.context.line.firstWord = firstWordMatch ? firstWordMatch[0].replace(/^\\s*/, \"\") : \"\";\n      state.context.line.indent = stream.indentation();\n      ch = stream.peek(); // Line comment\n\n      if (stream.match(\"//\")) {\n        stream.skipToEnd();\n        return [\"comment\", \"comment\"];\n      } // Block comment\n\n\n      if (stream.match(\"/*\")) {\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      } // String\n\n\n      if (ch == \"\\\"\" || ch == \"'\") {\n        stream.next();\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      } // Def\n\n\n      if (ch == \"@\") {\n        stream.next();\n        stream.eatWhile(/[\\w\\\\-]/);\n        return [\"def\", stream.current()];\n      } // ID selector or Hex color\n\n\n      if (ch == \"#\") {\n        stream.next(); // Hex color\n\n        if (stream.match(/^[0-9a-f]{3}([0-9a-f]([0-9a-f]{2}){0,2})?\\b(?!-)/i)) {\n          return [\"atom\", \"atom\"];\n        } // ID selector\n\n\n        if (stream.match(/^[a-z][\\w-]*/i)) {\n          return [\"builtin\", \"hash\"];\n        }\n      } // Vendor prefixes\n\n\n      if (stream.match(vendorPrefixesRegexp)) {\n        return [\"meta\", \"vendor-prefixes\"];\n      } // Numbers\n\n\n      if (stream.match(/^-?[0-9]?\\.?[0-9]/)) {\n        stream.eatWhile(/[a-z%]/i);\n        return [\"number\", \"unit\"];\n      } // !important|optional\n\n\n      if (ch == \"!\") {\n        stream.next();\n        return [stream.match(/^(important|optional)/i) ? \"keyword\" : \"operator\", \"important\"];\n      } // Class\n\n\n      if (ch == \".\" && stream.match(/^\\.[a-z][\\w-]*/i)) {\n        return [\"qualifier\", \"qualifier\"];\n      } // url url-prefix domain regexp\n\n\n      if (stream.match(documentTypesRegexp)) {\n        if (stream.peek() == \"(\") state.tokenize = tokenParenthesized;\n        return [\"property\", \"word\"];\n      } // Mixins / Functions\n\n\n      if (stream.match(/^[a-z][\\w-]*\\(/i)) {\n        stream.backUp(1);\n        return [\"keyword\", \"mixin\"];\n      } // Block mixins\n\n\n      if (stream.match(/^(\\+|-)[a-z][\\w-]*\\(/i)) {\n        stream.backUp(1);\n        return [\"keyword\", \"block-mixin\"];\n      } // Parent Reference BEM naming\n\n\n      if (stream.string.match(/^\\s*&/) && stream.match(/^[-_]+[a-z][\\w-]*/)) {\n        return [\"qualifier\", \"qualifier\"];\n      } // / Root Reference & Parent Reference\n\n\n      if (stream.match(/^(\\/|&)(-|_|:|\\.|#|[a-z])/)) {\n        stream.backUp(1);\n        return [\"variable-3\", \"reference\"];\n      }\n\n      if (stream.match(/^&{1}\\s*$/)) {\n        return [\"variable-3\", \"reference\"];\n      } // Word operator\n\n\n      if (stream.match(wordOperatorKeywordsRegexp)) {\n        return [\"operator\", \"operator\"];\n      } // Word\n\n\n      if (stream.match(/^\\$?[-_]*[a-z0-9]+[\\w-]*/i)) {\n        // Variable\n        if (stream.match(/^(\\.|\\[)[\\w-\\'\\\"\\]]+/i, false)) {\n          if (!wordIsTag(stream.current())) {\n            stream.match(/\\./);\n            return [\"variable-2\", \"variable-name\"];\n          }\n        }\n\n        return [\"variable-2\", \"word\"];\n      } // Operators\n\n\n      if (stream.match(operatorsRegexp)) {\n        return [\"operator\", stream.current()];\n      } // Delimiters\n\n\n      if (/[:;,{}\\[\\]\\(\\)]/.test(ch)) {\n        stream.next();\n        return [null, ch];\n      } // Non-detected items\n\n\n      stream.next();\n      return [null, null];\n    }\n    /**\n     * Token comment\n     */\n\n\n    function tokenCComment(stream, state) {\n      var maybeEnd = false,\n          ch;\n\n      while ((ch = stream.next()) != null) {\n        if (maybeEnd && ch == \"/\") {\n          state.tokenize = null;\n          break;\n        }\n\n        maybeEnd = ch == \"*\";\n      }\n\n      return [\"comment\", \"comment\"];\n    }\n    /**\n     * Token string\n     */\n\n\n    function tokenString(quote) {\n      return function (stream, state) {\n        var escaped = false,\n            ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && !escaped) {\n            if (quote == \")\") stream.backUp(1);\n            break;\n          }\n\n          escaped = !escaped && ch == \"\\\\\";\n        }\n\n        if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n        return [\"string\", \"string\"];\n      };\n    }\n    /**\n     * Token parenthesized\n     */\n\n\n    function tokenParenthesized(stream, state) {\n      stream.next(); // Must be \"(\"\n\n      if (!stream.match(/\\s*[\\\"\\')]/, false)) state.tokenize = tokenString(\")\");else state.tokenize = null;\n      return [null, \"(\"];\n    }\n    /**\n     * Context management\n     */\n\n\n    function Context(type, indent, prev, line) {\n      this.type = type;\n      this.indent = indent;\n      this.prev = prev;\n      this.line = line || {\n        firstWord: \"\",\n        indent: 0\n      };\n    }\n\n    function pushContext(state, stream, type, indent) {\n      indent = indent >= 0 ? indent : indentUnit;\n      state.context = new Context(type, stream.indentation() + indent, state.context);\n      return type;\n    }\n\n    function popContext(state, currentIndent) {\n      var contextIndent = state.context.indent - indentUnit;\n      currentIndent = currentIndent || false;\n      state.context = state.context.prev;\n      if (currentIndent) state.context.indent = contextIndent;\n      return state.context.type;\n    }\n\n    function pass(type, stream, state) {\n      return states[state.context.type](type, stream, state);\n    }\n\n    function popAndPass(type, stream, state, n) {\n      for (var i = n || 1; i > 0; i--) state.context = state.context.prev;\n\n      return pass(type, stream, state);\n    }\n    /**\n     * Parser\n     */\n\n\n    function wordIsTag(word) {\n      return word.toLowerCase() in tagKeywords;\n    }\n\n    function wordIsProperty(word) {\n      word = word.toLowerCase();\n      return word in propertyKeywords || word in fontProperties;\n    }\n\n    function wordIsBlock(word) {\n      return word.toLowerCase() in blockKeywords;\n    }\n\n    function wordIsVendorPrefix(word) {\n      return word.toLowerCase().match(vendorPrefixesRegexp);\n    }\n\n    function wordAsValue(word) {\n      var wordLC = word.toLowerCase();\n      var override = \"variable-2\";\n      if (wordIsTag(word)) override = \"tag\";else if (wordIsBlock(word)) override = \"block-keyword\";else if (wordIsProperty(word)) override = \"property\";else if (wordLC in valueKeywords || wordLC in commonAtoms) override = \"atom\";else if (wordLC == \"return\" || wordLC in colorKeywords) override = \"keyword\"; // Font family\n      else if (word.match(/^[A-Z]/)) override = \"string\";\n      return override;\n    }\n\n    function typeIsBlock(type, stream) {\n      return endOfLine(stream) && (type == \"{\" || type == \"]\" || type == \"hash\" || type == \"qualifier\") || type == \"block-mixin\";\n    }\n\n    function typeIsInterpolation(type, stream) {\n      return type == \"{\" && stream.match(/^\\s*\\$?[\\w-]+/i, false);\n    }\n\n    function typeIsPseudo(type, stream) {\n      return type == \":\" && stream.match(/^[a-z-]+/, false);\n    }\n\n    function startOfLine(stream) {\n      return stream.sol() || stream.string.match(new RegExp(\"^\\\\s*\" + escapeRegExp(stream.current())));\n    }\n\n    function endOfLine(stream) {\n      return stream.eol() || stream.match(/^\\s*$/, false);\n    }\n\n    function firstWordOfLine(line) {\n      var re = /^\\s*[-_]*[a-z0-9]+[\\w-]*/i;\n      var result = typeof line == \"string\" ? line.match(re) : line.string.match(re);\n      return result ? result[0].replace(/^\\s*/, \"\") : \"\";\n    }\n    /**\n     * Block\n     */\n\n\n    states.block = function (type, stream, state) {\n      if (type == \"comment\" && startOfLine(stream) || type == \",\" && endOfLine(stream) || type == \"mixin\") {\n        return pushContext(state, stream, \"block\", 0);\n      }\n\n      if (typeIsInterpolation(type, stream)) {\n        return pushContext(state, stream, \"interpolation\");\n      }\n\n      if (endOfLine(stream) && type == \"]\") {\n        if (!/^\\s*(\\.|#|:|\\[|\\*|&)/.test(stream.string) && !wordIsTag(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n      }\n\n      if (typeIsBlock(type, stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n\n      if (type == \"}\" && endOfLine(stream)) {\n        return pushContext(state, stream, \"block\", 0);\n      }\n\n      if (type == \"variable-name\") {\n        if (stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/) || wordIsBlock(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"variableName\");\n        } else {\n          return pushContext(state, stream, \"variableName\", 0);\n        }\n      }\n\n      if (type == \"=\") {\n        if (!endOfLine(stream) && !wordIsBlock(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n\n        return pushContext(state, stream, \"block\");\n      }\n\n      if (type == \"*\") {\n        if (endOfLine(stream) || stream.match(/\\s*(,|\\.|#|\\[|:|{)/, false)) {\n          override = \"tag\";\n          return pushContext(state, stream, \"block\");\n        }\n      }\n\n      if (typeIsPseudo(type, stream)) {\n        return pushContext(state, stream, \"pseudo\");\n      }\n\n      if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n        return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n      }\n\n      if (/@(-(moz|ms|o|webkit)-)?keyframes$/.test(type)) {\n        return pushContext(state, stream, \"keyframes\");\n      }\n\n      if (/@extends?/.test(type)) {\n        return pushContext(state, stream, \"extend\", 0);\n      }\n\n      if (type && type.charAt(0) == \"@\") {\n        // Property Lookup\n        if (stream.indentation() > 0 && wordIsProperty(stream.current().slice(1))) {\n          override = \"variable-2\";\n          return \"block\";\n        }\n\n        if (/(@import|@require|@charset)/.test(type)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n\n        return pushContext(state, stream, \"block\");\n      }\n\n      if (type == \"reference\" && endOfLine(stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n\n      if (type == \"(\") {\n        return pushContext(state, stream, \"parens\");\n      }\n\n      if (type == \"vendor-prefixes\") {\n        return pushContext(state, stream, \"vendorPrefixes\");\n      }\n\n      if (type == \"word\") {\n        var word = stream.current();\n        override = wordAsValue(word);\n\n        if (override == \"property\") {\n          if (startOfLine(stream)) {\n            return pushContext(state, stream, \"block\", 0);\n          } else {\n            override = \"atom\";\n            return \"block\";\n          }\n        }\n\n        if (override == \"tag\") {\n          // tag is a css value\n          if (/embed|menu|pre|progress|sub|table/.test(word)) {\n            if (wordIsProperty(firstWordOfLine(stream))) {\n              override = \"atom\";\n              return \"block\";\n            }\n          } // tag is an attribute\n\n\n          if (stream.string.match(new RegExp(\"\\\\[\\\\s*\" + word + \"|\" + word + \"\\\\s*\\\\]\"))) {\n            override = \"atom\";\n            return \"block\";\n          } // tag is a variable\n\n\n          if (tagVariablesRegexp.test(word)) {\n            if (startOfLine(stream) && stream.string.match(/=/) || !startOfLine(stream) && !stream.string.match(/^(\\s*\\.|#|\\&|\\[|\\/|>|\\*)/) && !wordIsTag(firstWordOfLine(stream))) {\n              override = \"variable-2\";\n              if (wordIsBlock(firstWordOfLine(stream))) return \"block\";\n              return pushContext(state, stream, \"block\", 0);\n            }\n          }\n\n          if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        }\n\n        if (override == \"block-keyword\") {\n          override = \"keyword\"; // Postfix conditionals\n\n          if (stream.current(/(if|unless)/) && !startOfLine(stream)) {\n            return \"block\";\n          }\n\n          return pushContext(state, stream, \"block\");\n        }\n\n        if (word == \"return\") return pushContext(state, stream, \"block\", 0); // Placeholder selector\n\n        if (override == \"variable-2\" && stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/)) {\n          return pushContext(state, stream, \"block\");\n        }\n      }\n\n      return state.context.type;\n    };\n    /**\n     * Parens\n     */\n\n\n    states.parens = function (type, stream, state) {\n      if (type == \"(\") return pushContext(state, stream, \"parens\");\n\n      if (type == \")\") {\n        if (state.context.prev.type == \"parens\") {\n          return popContext(state);\n        }\n\n        if (stream.string.match(/^[a-z][\\w-]*\\(/i) && endOfLine(stream) || wordIsBlock(firstWordOfLine(stream)) || /(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(firstWordOfLine(stream)) || !stream.string.match(/^-?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) && wordIsTag(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"block\");\n        }\n\n        if (stream.string.match(/^[\\$-]?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) || stream.string.match(/^\\s*(\\(|\\)|[0-9])/) || stream.string.match(/^\\s+[a-z][\\w-]*\\(/i) || stream.string.match(/^\\s+[\\$-]?[a-z]/i)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");else return pushContext(state, stream, \"block\", 0);\n      }\n\n      if (type && type.charAt(0) == \"@\" && wordIsProperty(stream.current().slice(1))) {\n        override = \"variable-2\";\n      }\n\n      if (type == \"word\") {\n        var word = stream.current();\n        override = wordAsValue(word);\n\n        if (override == \"tag\" && tagVariablesRegexp.test(word)) {\n          override = \"variable-2\";\n        }\n\n        if (override == \"property\" || word == \"to\") override = \"atom\";\n      }\n\n      if (type == \"variable-name\") {\n        return pushContext(state, stream, \"variableName\");\n      }\n\n      if (typeIsPseudo(type, stream)) {\n        return pushContext(state, stream, \"pseudo\");\n      }\n\n      return state.context.type;\n    };\n    /**\n     * Vendor prefixes\n     */\n\n\n    states.vendorPrefixes = function (type, stream, state) {\n      if (type == \"word\") {\n        override = \"property\";\n        return pushContext(state, stream, \"block\", 0);\n      }\n\n      return popContext(state);\n    };\n    /**\n     * Pseudo\n     */\n\n\n    states.pseudo = function (type, stream, state) {\n      if (!wordIsProperty(firstWordOfLine(stream.string))) {\n        stream.match(/^[a-z-]+/);\n        override = \"variable-3\";\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        return popContext(state);\n      }\n\n      return popAndPass(type, stream, state);\n    };\n    /**\n     * atBlock\n     */\n\n\n    states.atBlock = function (type, stream, state) {\n      if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\n\n      if (typeIsBlock(type, stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n\n      if (typeIsInterpolation(type, stream)) {\n        return pushContext(state, stream, \"interpolation\");\n      }\n\n      if (type == \"word\") {\n        var word = stream.current().toLowerCase();\n        if (/^(only|not|and|or)$/.test(word)) override = \"keyword\";else if (documentTypes.hasOwnProperty(word)) override = \"tag\";else if (mediaTypes.hasOwnProperty(word)) override = \"attribute\";else if (mediaFeatures.hasOwnProperty(word)) override = \"property\";else if (nonStandardPropertyKeywords.hasOwnProperty(word)) override = \"string-2\";else override = wordAsValue(stream.current());\n\n        if (override == \"tag\" && endOfLine(stream)) {\n          return pushContext(state, stream, \"block\");\n        }\n      }\n\n      if (type == \"operator\" && /^(not|and|or)$/.test(stream.current())) {\n        override = \"keyword\";\n      }\n\n      return state.context.type;\n    };\n\n    states.atBlock_parens = function (type, stream, state) {\n      if (type == \"{\" || type == \"}\") return state.context.type;\n\n      if (type == \")\") {\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");else return pushContext(state, stream, \"atBlock\");\n      }\n\n      if (type == \"word\") {\n        var word = stream.current().toLowerCase();\n        override = wordAsValue(word);\n        if (/^(max|min)/.test(word)) override = \"property\";\n\n        if (override == \"tag\") {\n          tagVariablesRegexp.test(word) ? override = \"variable-2\" : override = \"atom\";\n        }\n\n        return state.context.type;\n      }\n\n      return states.atBlock(type, stream, state);\n    };\n    /**\n     * Keyframes\n     */\n\n\n    states.keyframes = function (type, stream, state) {\n      if (stream.indentation() == \"0\" && (type == \"}\" && startOfLine(stream) || type == \"]\" || type == \"hash\" || type == \"qualifier\" || wordIsTag(stream.current()))) {\n        return popAndPass(type, stream, state);\n      }\n\n      if (type == \"{\") return pushContext(state, stream, \"keyframes\");\n\n      if (type == \"}\") {\n        if (startOfLine(stream)) return popContext(state, true);else return pushContext(state, stream, \"keyframes\");\n      }\n\n      if (type == \"unit\" && /^[0-9]+\\%$/.test(stream.current())) {\n        return pushContext(state, stream, \"keyframes\");\n      }\n\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n\n        if (override == \"block-keyword\") {\n          override = \"keyword\";\n          return pushContext(state, stream, \"keyframes\");\n        }\n      }\n\n      if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n        return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n      }\n\n      if (type == \"mixin\") {\n        return pushContext(state, stream, \"block\", 0);\n      }\n\n      return state.context.type;\n    };\n    /**\n     * Interpolation\n     */\n\n\n    states.interpolation = function (type, stream, state) {\n      if (type == \"{\") popContext(state) && pushContext(state, stream, \"block\");\n\n      if (type == \"}\") {\n        if (stream.string.match(/^\\s*(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/i) || stream.string.match(/^\\s*[a-z]/i) && wordIsTag(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"block\");\n        }\n\n        if (!stream.string.match(/^(\\{|\\s*\\&)/) || stream.match(/\\s*[\\w-]/, false)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n\n        return pushContext(state, stream, \"block\");\n      }\n\n      if (type == \"variable-name\") {\n        return pushContext(state, stream, \"variableName\", 0);\n      }\n\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        if (override == \"tag\") override = \"atom\";\n      }\n\n      return state.context.type;\n    };\n    /**\n     * Extend/s\n     */\n\n\n    states.extend = function (type, stream, state) {\n      if (type == \"[\" || type == \"=\") return \"extend\";\n      if (type == \"]\") return popContext(state);\n\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        return \"extend\";\n      }\n\n      return popContext(state);\n    };\n    /**\n     * Variable name\n     */\n\n\n    states.variableName = function (type, stream, state) {\n      if (type == \"string\" || type == \"[\" || type == \"]\" || stream.current().match(/^(\\.|\\$)/)) {\n        if (stream.current().match(/^\\.[\\w-]+/i)) override = \"variable-2\";\n        return \"variableName\";\n      }\n\n      return popAndPass(type, stream, state);\n    };\n\n    return {\n      startState: function (base) {\n        return {\n          tokenize: null,\n          state: \"block\",\n          context: new Context(\"block\", base || 0, null)\n        };\n      },\n      token: function (stream, state) {\n        if (!state.tokenize && stream.eatSpace()) return null;\n        style = (state.tokenize || tokenBase)(stream, state);\n\n        if (style && typeof style == \"object\") {\n          type = style[1];\n          style = style[0];\n        }\n\n        override = style;\n        state.state = states[state.state](type, stream, state);\n        return override;\n      },\n      indent: function (state, textAfter, line) {\n        var cx = state.context,\n            ch = textAfter && textAfter.charAt(0),\n            indent = cx.indent,\n            lineFirstWord = firstWordOfLine(textAfter),\n            lineIndent = line.match(/^\\s*/)[0].replace(/\\t/g, indentUnitString).length,\n            prevLineFirstWord = state.context.prev ? state.context.prev.line.firstWord : \"\",\n            prevLineIndent = state.context.prev ? state.context.prev.line.indent : lineIndent;\n\n        if (cx.prev && (ch == \"}\" && (cx.type == \"block\" || cx.type == \"atBlock\" || cx.type == \"keyframes\") || ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") || ch == \"{\" && cx.type == \"at\")) {\n          indent = cx.indent - indentUnit;\n        } else if (!/(\\})/.test(ch)) {\n          if (/@|\\$|\\d/.test(ch) || /^\\{/.test(textAfter) || /^\\s*\\/(\\/|\\*)/.test(textAfter) || /^\\s*\\/\\*/.test(prevLineFirstWord) || /^\\s*[\\w-\\.\\[\\]\\'\\\"]+\\s*(\\?|:|\\+)?=/i.test(textAfter) || /^(\\+|-)?[a-z][\\w-]*\\(/i.test(textAfter) || /^return/.test(textAfter) || wordIsBlock(lineFirstWord)) {\n            indent = lineIndent;\n          } else if (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(ch) || wordIsTag(lineFirstWord)) {\n            if (/\\,\\s*$/.test(prevLineFirstWord)) {\n              indent = prevLineIndent;\n            } else if (/^\\s+/.test(line) && (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(prevLineFirstWord) || wordIsTag(prevLineFirstWord))) {\n              indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + indentUnit;\n            } else {\n              indent = lineIndent;\n            }\n          } else if (!/,\\s*$/.test(line) && (wordIsVendorPrefix(lineFirstWord) || wordIsProperty(lineFirstWord))) {\n            if (wordIsBlock(prevLineFirstWord)) {\n              indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + indentUnit;\n            } else if (/^\\{/.test(prevLineFirstWord)) {\n              indent = lineIndent <= prevLineIndent ? lineIndent : prevLineIndent + indentUnit;\n            } else if (wordIsVendorPrefix(prevLineFirstWord) || wordIsProperty(prevLineFirstWord)) {\n              indent = lineIndent >= prevLineIndent ? prevLineIndent : lineIndent;\n            } else if (/^(\\.|#|:|\\[|\\*|&|@|\\+|\\-|>|~|\\/)/.test(prevLineFirstWord) || /=\\s*$/.test(prevLineFirstWord) || wordIsTag(prevLineFirstWord) || /^\\$[\\w-\\.\\[\\]\\'\\\"]/.test(prevLineFirstWord)) {\n              indent = prevLineIndent + indentUnit;\n            } else {\n              indent = lineIndent;\n            }\n          }\n        }\n\n        return indent;\n      },\n      electricChars: \"}\",\n      lineComment: \"//\",\n      fold: \"indent\"\n    };\n  }); // developer.mozilla.org/en-US/docs/Web/HTML/Element\n\n  var tagKeywords_ = [\"a\", \"abbr\", \"address\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"bdi\", \"bdo\", \"bgsound\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"cite\", \"code\", \"col\", \"colgroup\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"img\", \"input\", \"ins\", \"kbd\", \"keygen\", \"label\", \"legend\", \"li\", \"link\", \"main\", \"map\", \"mark\", \"marquee\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"nav\", \"nobr\", \"noframes\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"pre\", \"progress\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"small\", \"source\", \"span\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"tr\", \"track\", \"u\", \"ul\", \"var\", \"video\"]; // github.com/codemirror/CodeMirror/blob/master/mode/css/css.js\n\n  var documentTypes_ = [\"domain\", \"regexp\", \"url\", \"url-prefix\"];\n  var mediaTypes_ = [\"all\", \"aural\", \"braille\", \"handheld\", \"print\", \"projection\", \"screen\", \"tty\", \"tv\", \"embossed\"];\n  var mediaFeatures_ = [\"width\", \"min-width\", \"max-width\", \"height\", \"min-height\", \"max-height\", \"device-width\", \"min-device-width\", \"max-device-width\", \"device-height\", \"min-device-height\", \"max-device-height\", \"aspect-ratio\", \"min-aspect-ratio\", \"max-aspect-ratio\", \"device-aspect-ratio\", \"min-device-aspect-ratio\", \"max-device-aspect-ratio\", \"color\", \"min-color\", \"max-color\", \"color-index\", \"min-color-index\", \"max-color-index\", \"monochrome\", \"min-monochrome\", \"max-monochrome\", \"resolution\", \"min-resolution\", \"max-resolution\", \"scan\", \"grid\"];\n  var propertyKeywords_ = [\"align-content\", \"align-items\", \"align-self\", \"alignment-adjust\", \"alignment-baseline\", \"anchor-point\", \"animation\", \"animation-delay\", \"animation-direction\", \"animation-duration\", \"animation-fill-mode\", \"animation-iteration-count\", \"animation-name\", \"animation-play-state\", \"animation-timing-function\", \"appearance\", \"azimuth\", \"backface-visibility\", \"background\", \"background-attachment\", \"background-clip\", \"background-color\", \"background-image\", \"background-origin\", \"background-position\", \"background-repeat\", \"background-size\", \"baseline-shift\", \"binding\", \"bleed\", \"bookmark-label\", \"bookmark-level\", \"bookmark-state\", \"bookmark-target\", \"border\", \"border-bottom\", \"border-bottom-color\", \"border-bottom-left-radius\", \"border-bottom-right-radius\", \"border-bottom-style\", \"border-bottom-width\", \"border-collapse\", \"border-color\", \"border-image\", \"border-image-outset\", \"border-image-repeat\", \"border-image-slice\", \"border-image-source\", \"border-image-width\", \"border-left\", \"border-left-color\", \"border-left-style\", \"border-left-width\", \"border-radius\", \"border-right\", \"border-right-color\", \"border-right-style\", \"border-right-width\", \"border-spacing\", \"border-style\", \"border-top\", \"border-top-color\", \"border-top-left-radius\", \"border-top-right-radius\", \"border-top-style\", \"border-top-width\", \"border-width\", \"bottom\", \"box-decoration-break\", \"box-shadow\", \"box-sizing\", \"break-after\", \"break-before\", \"break-inside\", \"caption-side\", \"clear\", \"clip\", \"color\", \"color-profile\", \"column-count\", \"column-fill\", \"column-gap\", \"column-rule\", \"column-rule-color\", \"column-rule-style\", \"column-rule-width\", \"column-span\", \"column-width\", \"columns\", \"content\", \"counter-increment\", \"counter-reset\", \"crop\", \"cue\", \"cue-after\", \"cue-before\", \"cursor\", \"direction\", \"display\", \"dominant-baseline\", \"drop-initial-after-adjust\", \"drop-initial-after-align\", \"drop-initial-before-adjust\", \"drop-initial-before-align\", \"drop-initial-size\", \"drop-initial-value\", \"elevation\", \"empty-cells\", \"fit\", \"fit-position\", \"flex\", \"flex-basis\", \"flex-direction\", \"flex-flow\", \"flex-grow\", \"flex-shrink\", \"flex-wrap\", \"float\", \"float-offset\", \"flow-from\", \"flow-into\", \"font\", \"font-feature-settings\", \"font-family\", \"font-kerning\", \"font-language-override\", \"font-size\", \"font-size-adjust\", \"font-stretch\", \"font-style\", \"font-synthesis\", \"font-variant\", \"font-variant-alternates\", \"font-variant-caps\", \"font-variant-east-asian\", \"font-variant-ligatures\", \"font-variant-numeric\", \"font-variant-position\", \"font-weight\", \"grid\", \"grid-area\", \"grid-auto-columns\", \"grid-auto-flow\", \"grid-auto-position\", \"grid-auto-rows\", \"grid-column\", \"grid-column-end\", \"grid-column-start\", \"grid-row\", \"grid-row-end\", \"grid-row-start\", \"grid-template\", \"grid-template-areas\", \"grid-template-columns\", \"grid-template-rows\", \"hanging-punctuation\", \"height\", \"hyphens\", \"icon\", \"image-orientation\", \"image-rendering\", \"image-resolution\", \"inline-box-align\", \"justify-content\", \"left\", \"letter-spacing\", \"line-break\", \"line-height\", \"line-stacking\", \"line-stacking-ruby\", \"line-stacking-shift\", \"line-stacking-strategy\", \"list-style\", \"list-style-image\", \"list-style-position\", \"list-style-type\", \"margin\", \"margin-bottom\", \"margin-left\", \"margin-right\", \"margin-top\", \"marker-offset\", \"marks\", \"marquee-direction\", \"marquee-loop\", \"marquee-play-count\", \"marquee-speed\", \"marquee-style\", \"max-height\", \"max-width\", \"min-height\", \"min-width\", \"move-to\", \"nav-down\", \"nav-index\", \"nav-left\", \"nav-right\", \"nav-up\", \"object-fit\", \"object-position\", \"opacity\", \"order\", \"orphans\", \"outline\", \"outline-color\", \"outline-offset\", \"outline-style\", \"outline-width\", \"overflow\", \"overflow-style\", \"overflow-wrap\", \"overflow-x\", \"overflow-y\", \"padding\", \"padding-bottom\", \"padding-left\", \"padding-right\", \"padding-top\", \"page\", \"page-break-after\", \"page-break-before\", \"page-break-inside\", \"page-policy\", \"pause\", \"pause-after\", \"pause-before\", \"perspective\", \"perspective-origin\", \"pitch\", \"pitch-range\", \"play-during\", \"position\", \"presentation-level\", \"punctuation-trim\", \"quotes\", \"region-break-after\", \"region-break-before\", \"region-break-inside\", \"region-fragment\", \"rendering-intent\", \"resize\", \"rest\", \"rest-after\", \"rest-before\", \"richness\", \"right\", \"rotation\", \"rotation-point\", \"ruby-align\", \"ruby-overhang\", \"ruby-position\", \"ruby-span\", \"shape-image-threshold\", \"shape-inside\", \"shape-margin\", \"shape-outside\", \"size\", \"speak\", \"speak-as\", \"speak-header\", \"speak-numeral\", \"speak-punctuation\", \"speech-rate\", \"stress\", \"string-set\", \"tab-size\", \"table-layout\", \"target\", \"target-name\", \"target-new\", \"target-position\", \"text-align\", \"text-align-last\", \"text-decoration\", \"text-decoration-color\", \"text-decoration-line\", \"text-decoration-skip\", \"text-decoration-style\", \"text-emphasis\", \"text-emphasis-color\", \"text-emphasis-position\", \"text-emphasis-style\", \"text-height\", \"text-indent\", \"text-justify\", \"text-outline\", \"text-overflow\", \"text-shadow\", \"text-size-adjust\", \"text-space-collapse\", \"text-transform\", \"text-underline-position\", \"text-wrap\", \"top\", \"transform\", \"transform-origin\", \"transform-style\", \"transition\", \"transition-delay\", \"transition-duration\", \"transition-property\", \"transition-timing-function\", \"unicode-bidi\", \"vertical-align\", \"visibility\", \"voice-balance\", \"voice-duration\", \"voice-family\", \"voice-pitch\", \"voice-range\", \"voice-rate\", \"voice-stress\", \"voice-volume\", \"volume\", \"white-space\", \"widows\", \"width\", \"will-change\", \"word-break\", \"word-spacing\", \"word-wrap\", \"z-index\", \"clip-path\", \"clip-rule\", \"mask\", \"enable-background\", \"filter\", \"flood-color\", \"flood-opacity\", \"lighting-color\", \"stop-color\", \"stop-opacity\", \"pointer-events\", \"color-interpolation\", \"color-interpolation-filters\", \"color-rendering\", \"fill\", \"fill-opacity\", \"fill-rule\", \"image-rendering\", \"marker\", \"marker-end\", \"marker-mid\", \"marker-start\", \"shape-rendering\", \"stroke\", \"stroke-dasharray\", \"stroke-dashoffset\", \"stroke-linecap\", \"stroke-linejoin\", \"stroke-miterlimit\", \"stroke-opacity\", \"stroke-width\", \"text-rendering\", \"baseline-shift\", \"dominant-baseline\", \"glyph-orientation-horizontal\", \"glyph-orientation-vertical\", \"text-anchor\", \"writing-mode\", \"font-smoothing\", \"osx-font-smoothing\"];\n  var nonStandardPropertyKeywords_ = [\"scrollbar-arrow-color\", \"scrollbar-base-color\", \"scrollbar-dark-shadow-color\", \"scrollbar-face-color\", \"scrollbar-highlight-color\", \"scrollbar-shadow-color\", \"scrollbar-3d-light-color\", \"scrollbar-track-color\", \"shape-inside\", \"searchfield-cancel-button\", \"searchfield-decoration\", \"searchfield-results-button\", \"searchfield-results-decoration\", \"zoom\"];\n  var fontProperties_ = [\"font-family\", \"src\", \"unicode-range\", \"font-variant\", \"font-feature-settings\", \"font-stretch\", \"font-weight\", \"font-style\"];\n  var colorKeywords_ = [\"aliceblue\", \"antiquewhite\", \"aqua\", \"aquamarine\", \"azure\", \"beige\", \"bisque\", \"black\", \"blanchedalmond\", \"blue\", \"blueviolet\", \"brown\", \"burlywood\", \"cadetblue\", \"chartreuse\", \"chocolate\", \"coral\", \"cornflowerblue\", \"cornsilk\", \"crimson\", \"cyan\", \"darkblue\", \"darkcyan\", \"darkgoldenrod\", \"darkgray\", \"darkgreen\", \"darkkhaki\", \"darkmagenta\", \"darkolivegreen\", \"darkorange\", \"darkorchid\", \"darkred\", \"darksalmon\", \"darkseagreen\", \"darkslateblue\", \"darkslategray\", \"darkturquoise\", \"darkviolet\", \"deeppink\", \"deepskyblue\", \"dimgray\", \"dodgerblue\", \"firebrick\", \"floralwhite\", \"forestgreen\", \"fuchsia\", \"gainsboro\", \"ghostwhite\", \"gold\", \"goldenrod\", \"gray\", \"grey\", \"green\", \"greenyellow\", \"honeydew\", \"hotpink\", \"indianred\", \"indigo\", \"ivory\", \"khaki\", \"lavender\", \"lavenderblush\", \"lawngreen\", \"lemonchiffon\", \"lightblue\", \"lightcoral\", \"lightcyan\", \"lightgoldenrodyellow\", \"lightgray\", \"lightgreen\", \"lightpink\", \"lightsalmon\", \"lightseagreen\", \"lightskyblue\", \"lightslategray\", \"lightsteelblue\", \"lightyellow\", \"lime\", \"limegreen\", \"linen\", \"magenta\", \"maroon\", \"mediumaquamarine\", \"mediumblue\", \"mediumorchid\", \"mediumpurple\", \"mediumseagreen\", \"mediumslateblue\", \"mediumspringgreen\", \"mediumturquoise\", \"mediumvioletred\", \"midnightblue\", \"mintcream\", \"mistyrose\", \"moccasin\", \"navajowhite\", \"navy\", \"oldlace\", \"olive\", \"olivedrab\", \"orange\", \"orangered\", \"orchid\", \"palegoldenrod\", \"palegreen\", \"paleturquoise\", \"palevioletred\", \"papayawhip\", \"peachpuff\", \"peru\", \"pink\", \"plum\", \"powderblue\", \"purple\", \"rebeccapurple\", \"red\", \"rosybrown\", \"royalblue\", \"saddlebrown\", \"salmon\", \"sandybrown\", \"seagreen\", \"seashell\", \"sienna\", \"silver\", \"skyblue\", \"slateblue\", \"slategray\", \"snow\", \"springgreen\", \"steelblue\", \"tan\", \"teal\", \"thistle\", \"tomato\", \"turquoise\", \"violet\", \"wheat\", \"white\", \"whitesmoke\", \"yellow\", \"yellowgreen\"];\n  var valueKeywords_ = [\"above\", \"absolute\", \"activeborder\", \"additive\", \"activecaption\", \"afar\", \"after-white-space\", \"ahead\", \"alias\", \"all\", \"all-scroll\", \"alphabetic\", \"alternate\", \"always\", \"amharic\", \"amharic-abegede\", \"antialiased\", \"appworkspace\", \"arabic-indic\", \"armenian\", \"asterisks\", \"attr\", \"auto\", \"avoid\", \"avoid-column\", \"avoid-page\", \"avoid-region\", \"background\", \"backwards\", \"baseline\", \"below\", \"bidi-override\", \"binary\", \"bengali\", \"blink\", \"block\", \"block-axis\", \"bold\", \"bolder\", \"border\", \"border-box\", \"both\", \"bottom\", \"break\", \"break-all\", \"break-word\", \"bullets\", \"button\", \"button-bevel\", \"buttonface\", \"buttonhighlight\", \"buttonshadow\", \"buttontext\", \"calc\", \"cambodian\", \"capitalize\", \"caps-lock-indicator\", \"caption\", \"captiontext\", \"caret\", \"cell\", \"center\", \"checkbox\", \"circle\", \"cjk-decimal\", \"cjk-earthly-branch\", \"cjk-heavenly-stem\", \"cjk-ideographic\", \"clear\", \"clip\", \"close-quote\", \"col-resize\", \"collapse\", \"column\", \"compact\", \"condensed\", \"contain\", \"content\", \"contents\", \"content-box\", \"context-menu\", \"continuous\", \"copy\", \"counter\", \"counters\", \"cover\", \"crop\", \"cross\", \"crosshair\", \"currentcolor\", \"cursive\", \"cyclic\", \"dashed\", \"decimal\", \"decimal-leading-zero\", \"default\", \"default-button\", \"destination-atop\", \"destination-in\", \"destination-out\", \"destination-over\", \"devanagari\", \"disc\", \"discard\", \"disclosure-closed\", \"disclosure-open\", \"document\", \"dot-dash\", \"dot-dot-dash\", \"dotted\", \"double\", \"down\", \"e-resize\", \"ease\", \"ease-in\", \"ease-in-out\", \"ease-out\", \"element\", \"ellipse\", \"ellipsis\", \"embed\", \"end\", \"ethiopic\", \"ethiopic-abegede\", \"ethiopic-abegede-am-et\", \"ethiopic-abegede-gez\", \"ethiopic-abegede-ti-er\", \"ethiopic-abegede-ti-et\", \"ethiopic-halehame-aa-er\", \"ethiopic-halehame-aa-et\", \"ethiopic-halehame-am-et\", \"ethiopic-halehame-gez\", \"ethiopic-halehame-om-et\", \"ethiopic-halehame-sid-et\", \"ethiopic-halehame-so-et\", \"ethiopic-halehame-ti-er\", \"ethiopic-halehame-ti-et\", \"ethiopic-halehame-tig\", \"ethiopic-numeric\", \"ew-resize\", \"expanded\", \"extends\", \"extra-condensed\", \"extra-expanded\", \"fantasy\", \"fast\", \"fill\", \"fixed\", \"flat\", \"flex\", \"footnotes\", \"forwards\", \"from\", \"geometricPrecision\", \"georgian\", \"graytext\", \"groove\", \"gujarati\", \"gurmukhi\", \"hand\", \"hangul\", \"hangul-consonant\", \"hebrew\", \"help\", \"hidden\", \"hide\", \"higher\", \"highlight\", \"highlighttext\", \"hiragana\", \"hiragana-iroha\", \"horizontal\", \"hsl\", \"hsla\", \"icon\", \"ignore\", \"inactiveborder\", \"inactivecaption\", \"inactivecaptiontext\", \"infinite\", \"infobackground\", \"infotext\", \"inherit\", \"initial\", \"inline\", \"inline-axis\", \"inline-block\", \"inline-flex\", \"inline-table\", \"inset\", \"inside\", \"intrinsic\", \"invert\", \"italic\", \"japanese-formal\", \"japanese-informal\", \"justify\", \"kannada\", \"katakana\", \"katakana-iroha\", \"keep-all\", \"khmer\", \"korean-hangul-formal\", \"korean-hanja-formal\", \"korean-hanja-informal\", \"landscape\", \"lao\", \"large\", \"larger\", \"left\", \"level\", \"lighter\", \"line-through\", \"linear\", \"linear-gradient\", \"lines\", \"list-item\", \"listbox\", \"listitem\", \"local\", \"logical\", \"loud\", \"lower\", \"lower-alpha\", \"lower-armenian\", \"lower-greek\", \"lower-hexadecimal\", \"lower-latin\", \"lower-norwegian\", \"lower-roman\", \"lowercase\", \"ltr\", \"malayalam\", \"match\", \"matrix\", \"matrix3d\", \"media-controls-background\", \"media-current-time-display\", \"media-fullscreen-button\", \"media-mute-button\", \"media-play-button\", \"media-return-to-realtime-button\", \"media-rewind-button\", \"media-seek-back-button\", \"media-seek-forward-button\", \"media-slider\", \"media-sliderthumb\", \"media-time-remaining-display\", \"media-volume-slider\", \"media-volume-slider-container\", \"media-volume-sliderthumb\", \"medium\", \"menu\", \"menulist\", \"menulist-button\", \"menulist-text\", \"menulist-textfield\", \"menutext\", \"message-box\", \"middle\", \"min-intrinsic\", \"mix\", \"mongolian\", \"monospace\", \"move\", \"multiple\", \"myanmar\", \"n-resize\", \"narrower\", \"ne-resize\", \"nesw-resize\", \"no-close-quote\", \"no-drop\", \"no-open-quote\", \"no-repeat\", \"none\", \"normal\", \"not-allowed\", \"nowrap\", \"ns-resize\", \"numbers\", \"numeric\", \"nw-resize\", \"nwse-resize\", \"oblique\", \"octal\", \"open-quote\", \"optimizeLegibility\", \"optimizeSpeed\", \"oriya\", \"oromo\", \"outset\", \"outside\", \"outside-shape\", \"overlay\", \"overline\", \"padding\", \"padding-box\", \"painted\", \"page\", \"paused\", \"persian\", \"perspective\", \"plus-darker\", \"plus-lighter\", \"pointer\", \"polygon\", \"portrait\", \"pre\", \"pre-line\", \"pre-wrap\", \"preserve-3d\", \"progress\", \"push-button\", \"radial-gradient\", \"radio\", \"read-only\", \"read-write\", \"read-write-plaintext-only\", \"rectangle\", \"region\", \"relative\", \"repeat\", \"repeating-linear-gradient\", \"repeating-radial-gradient\", \"repeat-x\", \"repeat-y\", \"reset\", \"reverse\", \"rgb\", \"rgba\", \"ridge\", \"right\", \"rotate\", \"rotate3d\", \"rotateX\", \"rotateY\", \"rotateZ\", \"round\", \"row-resize\", \"rtl\", \"run-in\", \"running\", \"s-resize\", \"sans-serif\", \"scale\", \"scale3d\", \"scaleX\", \"scaleY\", \"scaleZ\", \"scroll\", \"scrollbar\", \"scroll-position\", \"se-resize\", \"searchfield\", \"searchfield-cancel-button\", \"searchfield-decoration\", \"searchfield-results-button\", \"searchfield-results-decoration\", \"semi-condensed\", \"semi-expanded\", \"separate\", \"serif\", \"show\", \"sidama\", \"simp-chinese-formal\", \"simp-chinese-informal\", \"single\", \"skew\", \"skewX\", \"skewY\", \"skip-white-space\", \"slide\", \"slider-horizontal\", \"slider-vertical\", \"sliderthumb-horizontal\", \"sliderthumb-vertical\", \"slow\", \"small\", \"small-caps\", \"small-caption\", \"smaller\", \"solid\", \"somali\", \"source-atop\", \"source-in\", \"source-out\", \"source-over\", \"space\", \"spell-out\", \"square\", \"square-button\", \"start\", \"static\", \"status-bar\", \"stretch\", \"stroke\", \"sub\", \"subpixel-antialiased\", \"super\", \"sw-resize\", \"symbolic\", \"symbols\", \"table\", \"table-caption\", \"table-cell\", \"table-column\", \"table-column-group\", \"table-footer-group\", \"table-header-group\", \"table-row\", \"table-row-group\", \"tamil\", \"telugu\", \"text\", \"text-bottom\", \"text-top\", \"textarea\", \"textfield\", \"thai\", \"thick\", \"thin\", \"threeddarkshadow\", \"threedface\", \"threedhighlight\", \"threedlightshadow\", \"threedshadow\", \"tibetan\", \"tigre\", \"tigrinya-er\", \"tigrinya-er-abegede\", \"tigrinya-et\", \"tigrinya-et-abegede\", \"to\", \"top\", \"trad-chinese-formal\", \"trad-chinese-informal\", \"translate\", \"translate3d\", \"translateX\", \"translateY\", \"translateZ\", \"transparent\", \"ultra-condensed\", \"ultra-expanded\", \"underline\", \"up\", \"upper-alpha\", \"upper-armenian\", \"upper-greek\", \"upper-hexadecimal\", \"upper-latin\", \"upper-norwegian\", \"upper-roman\", \"uppercase\", \"urdu\", \"url\", \"var\", \"vertical\", \"vertical-text\", \"visible\", \"visibleFill\", \"visiblePainted\", \"visibleStroke\", \"visual\", \"w-resize\", \"wait\", \"wave\", \"wider\", \"window\", \"windowframe\", \"windowtext\", \"words\", \"x-large\", \"x-small\", \"xor\", \"xx-large\", \"xx-small\", \"bicubic\", \"optimizespeed\", \"grayscale\", \"row\", \"row-reverse\", \"wrap\", \"wrap-reverse\", \"column-reverse\", \"flex-start\", \"flex-end\", \"space-between\", \"space-around\", \"unset\"];\n  var wordOperatorKeywords_ = [\"in\", \"and\", \"or\", \"not\", \"is not\", \"is a\", \"is\", \"isnt\", \"defined\", \"if unless\"],\n      blockKeywords_ = [\"for\", \"if\", \"else\", \"unless\", \"from\", \"to\"],\n      commonAtoms_ = [\"null\", \"true\", \"false\", \"href\", \"title\", \"type\", \"not-allowed\", \"readonly\", \"disabled\"],\n      commonDef_ = [\"@font-face\", \"@keyframes\", \"@media\", \"@viewport\", \"@page\", \"@host\", \"@supports\", \"@block\", \"@css\"];\n  var hintWords = tagKeywords_.concat(documentTypes_, mediaTypes_, mediaFeatures_, propertyKeywords_, nonStandardPropertyKeywords_, colorKeywords_, valueKeywords_, fontProperties_, wordOperatorKeywords_, blockKeywords_, commonAtoms_, commonDef_);\n\n  function wordRegexp(words) {\n    words = words.sort(function (a, b) {\n      return b > a;\n    });\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  function keySet(array) {\n    var keys = {};\n\n    for (var i = 0; i < array.length; ++i) keys[array[i]] = true;\n\n    return keys;\n  }\n\n  function escapeRegExp(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n  }\n\n  CodeMirror.registerHelper(\"hintWords\", \"stylus\", hintWords);\n  CodeMirror.defineMIME(\"text/x-styl\", \"stylus\");\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw/node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/stylus/stylus.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","indentUnit","indentUnitString","tagKeywords","keySet","tagKeywords_","tagVariablesRegexp","propertyKeywords","propertyKeywords_","nonStandardPropertyKeywords","nonStandardPropertyKeywords_","valueKeywords","valueKeywords_","colorKeywords","colorKeywords_","documentTypes","documentTypes_","documentTypesRegexp","wordRegexp","mediaFeatures","mediaFeatures_","mediaTypes","mediaTypes_","fontProperties","fontProperties_","operatorsRegexp","wordOperatorKeywordsRegexp","wordOperatorKeywords_","blockKeywords","blockKeywords_","vendorPrefixesRegexp","RegExp","commonAtoms","commonAtoms_","firstWordMatch","states","ch","style","type","override","length","tokenBase","stream","state","string","match","context","line","firstWord","replace","indent","indentation","peek","skipToEnd","tokenize","tokenCComment","next","tokenString","eatWhile","current","tokenParenthesized","backUp","wordIsTag","test","maybeEnd","quote","escaped","Context","prev","pushContext","popContext","currentIndent","contextIndent","pass","popAndPass","n","i","word","toLowerCase","wordIsProperty","wordIsBlock","wordIsVendorPrefix","wordAsValue","wordLC","typeIsBlock","endOfLine","typeIsInterpolation","typeIsPseudo","startOfLine","sol","escapeRegExp","eol","firstWordOfLine","re","result","block","charAt","slice","parens","vendorPrefixes","pseudo","atBlock","hasOwnProperty","atBlock_parens","keyframes","interpolation","extend","variableName","startState","base","token","eatSpace","textAfter","cx","lineFirstWord","lineIndent","prevLineFirstWord","prevLineIndent","electricChars","lineComment","fold","commonDef_","hintWords","concat","words","sort","a","b","join","array","keys","text","registerHelper","defineMIME"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Stylus mode created by Dmitry Kiselyov http://git.io/AaRB\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"stylus\", function(config) {\n    var indentUnit = config.indentUnit,\n        indentUnitString = '',\n        tagKeywords = keySet(tagKeywords_),\n        tagVariablesRegexp = /^(a|b|i|s|col|em)$/i,\n        propertyKeywords = keySet(propertyKeywords_),\n        nonStandardPropertyKeywords = keySet(nonStandardPropertyKeywords_),\n        valueKeywords = keySet(valueKeywords_),\n        colorKeywords = keySet(colorKeywords_),\n        documentTypes = keySet(documentTypes_),\n        documentTypesRegexp = wordRegexp(documentTypes_),\n        mediaFeatures = keySet(mediaFeatures_),\n        mediaTypes = keySet(mediaTypes_),\n        fontProperties = keySet(fontProperties_),\n        operatorsRegexp = /^\\s*([.]{2,3}|&&|\\|\\||\\*\\*|[?!=:]?=|[-+*\\/%<>]=?|\\?:|\\~)/,\n        wordOperatorKeywordsRegexp = wordRegexp(wordOperatorKeywords_),\n        blockKeywords = keySet(blockKeywords_),\n        vendorPrefixesRegexp = new RegExp(/^\\-(moz|ms|o|webkit)-/i),\n        commonAtoms = keySet(commonAtoms_),\n        firstWordMatch = \"\",\n        states = {},\n        ch,\n        style,\n        type,\n        override;\n\n    while (indentUnitString.length < indentUnit) indentUnitString += ' ';\n\n    /**\n     * Tokenizers\n     */\n    function tokenBase(stream, state) {\n      firstWordMatch = stream.string.match(/(^[\\w-]+\\s*=\\s*$)|(^\\s*[\\w-]+\\s*=\\s*[\\w-])|(^\\s*(\\.|#|@|\\$|\\&|\\[|\\d|\\+|::?|\\{|\\>|~|\\/)?\\s*[\\w-]*([a-z0-9-]|\\*|\\/\\*)(\\(|,)?)/);\n      state.context.line.firstWord = firstWordMatch ? firstWordMatch[0].replace(/^\\s*/, \"\") : \"\";\n      state.context.line.indent = stream.indentation();\n      ch = stream.peek();\n\n      // Line comment\n      if (stream.match(\"//\")) {\n        stream.skipToEnd();\n        return [\"comment\", \"comment\"];\n      }\n      // Block comment\n      if (stream.match(\"/*\")) {\n        state.tokenize = tokenCComment;\n        return tokenCComment(stream, state);\n      }\n      // String\n      if (ch == \"\\\"\" || ch == \"'\") {\n        stream.next();\n        state.tokenize = tokenString(ch);\n        return state.tokenize(stream, state);\n      }\n      // Def\n      if (ch == \"@\") {\n        stream.next();\n        stream.eatWhile(/[\\w\\\\-]/);\n        return [\"def\", stream.current()];\n      }\n      // ID selector or Hex color\n      if (ch == \"#\") {\n        stream.next();\n        // Hex color\n        if (stream.match(/^[0-9a-f]{3}([0-9a-f]([0-9a-f]{2}){0,2})?\\b(?!-)/i)) {\n          return [\"atom\", \"atom\"];\n        }\n        // ID selector\n        if (stream.match(/^[a-z][\\w-]*/i)) {\n          return [\"builtin\", \"hash\"];\n        }\n      }\n      // Vendor prefixes\n      if (stream.match(vendorPrefixesRegexp)) {\n        return [\"meta\", \"vendor-prefixes\"];\n      }\n      // Numbers\n      if (stream.match(/^-?[0-9]?\\.?[0-9]/)) {\n        stream.eatWhile(/[a-z%]/i);\n        return [\"number\", \"unit\"];\n      }\n      // !important|optional\n      if (ch == \"!\") {\n        stream.next();\n        return [stream.match(/^(important|optional)/i) ? \"keyword\": \"operator\", \"important\"];\n      }\n      // Class\n      if (ch == \".\" && stream.match(/^\\.[a-z][\\w-]*/i)) {\n        return [\"qualifier\", \"qualifier\"];\n      }\n      // url url-prefix domain regexp\n      if (stream.match(documentTypesRegexp)) {\n        if (stream.peek() == \"(\") state.tokenize = tokenParenthesized;\n        return [\"property\", \"word\"];\n      }\n      // Mixins / Functions\n      if (stream.match(/^[a-z][\\w-]*\\(/i)) {\n        stream.backUp(1);\n        return [\"keyword\", \"mixin\"];\n      }\n      // Block mixins\n      if (stream.match(/^(\\+|-)[a-z][\\w-]*\\(/i)) {\n        stream.backUp(1);\n        return [\"keyword\", \"block-mixin\"];\n      }\n      // Parent Reference BEM naming\n      if (stream.string.match(/^\\s*&/) && stream.match(/^[-_]+[a-z][\\w-]*/)) {\n        return [\"qualifier\", \"qualifier\"];\n      }\n      // / Root Reference & Parent Reference\n      if (stream.match(/^(\\/|&)(-|_|:|\\.|#|[a-z])/)) {\n        stream.backUp(1);\n        return [\"variable-3\", \"reference\"];\n      }\n      if (stream.match(/^&{1}\\s*$/)) {\n        return [\"variable-3\", \"reference\"];\n      }\n      // Word operator\n      if (stream.match(wordOperatorKeywordsRegexp)) {\n        return [\"operator\", \"operator\"];\n      }\n      // Word\n      if (stream.match(/^\\$?[-_]*[a-z0-9]+[\\w-]*/i)) {\n        // Variable\n        if (stream.match(/^(\\.|\\[)[\\w-\\'\\\"\\]]+/i, false)) {\n          if (!wordIsTag(stream.current())) {\n            stream.match(/\\./);\n            return [\"variable-2\", \"variable-name\"];\n          }\n        }\n        return [\"variable-2\", \"word\"];\n      }\n      // Operators\n      if (stream.match(operatorsRegexp)) {\n        return [\"operator\", stream.current()];\n      }\n      // Delimiters\n      if (/[:;,{}\\[\\]\\(\\)]/.test(ch)) {\n        stream.next();\n        return [null, ch];\n      }\n      // Non-detected items\n      stream.next();\n      return [null, null];\n    }\n\n    /**\n     * Token comment\n     */\n    function tokenCComment(stream, state) {\n      var maybeEnd = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (maybeEnd && ch == \"/\") {\n          state.tokenize = null;\n          break;\n        }\n        maybeEnd = (ch == \"*\");\n      }\n      return [\"comment\", \"comment\"];\n    }\n\n    /**\n     * Token string\n     */\n    function tokenString(quote) {\n      return function(stream, state) {\n        var escaped = false, ch;\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && !escaped) {\n            if (quote == \")\") stream.backUp(1);\n            break;\n          }\n          escaped = !escaped && ch == \"\\\\\";\n        }\n        if (ch == quote || !escaped && quote != \")\") state.tokenize = null;\n        return [\"string\", \"string\"];\n      };\n    }\n\n    /**\n     * Token parenthesized\n     */\n    function tokenParenthesized(stream, state) {\n      stream.next(); // Must be \"(\"\n      if (!stream.match(/\\s*[\\\"\\')]/, false))\n        state.tokenize = tokenString(\")\");\n      else\n        state.tokenize = null;\n      return [null, \"(\"];\n    }\n\n    /**\n     * Context management\n     */\n    function Context(type, indent, prev, line) {\n      this.type = type;\n      this.indent = indent;\n      this.prev = prev;\n      this.line = line || {firstWord: \"\", indent: 0};\n    }\n\n    function pushContext(state, stream, type, indent) {\n      indent = indent >= 0 ? indent : indentUnit;\n      state.context = new Context(type, stream.indentation() + indent, state.context);\n      return type;\n    }\n\n    function popContext(state, currentIndent) {\n      var contextIndent = state.context.indent - indentUnit;\n      currentIndent = currentIndent || false;\n      state.context = state.context.prev;\n      if (currentIndent) state.context.indent = contextIndent;\n      return state.context.type;\n    }\n\n    function pass(type, stream, state) {\n      return states[state.context.type](type, stream, state);\n    }\n\n    function popAndPass(type, stream, state, n) {\n      for (var i = n || 1; i > 0; i--)\n        state.context = state.context.prev;\n      return pass(type, stream, state);\n    }\n\n\n    /**\n     * Parser\n     */\n    function wordIsTag(word) {\n      return word.toLowerCase() in tagKeywords;\n    }\n\n    function wordIsProperty(word) {\n      word = word.toLowerCase();\n      return word in propertyKeywords || word in fontProperties;\n    }\n\n    function wordIsBlock(word) {\n      return word.toLowerCase() in blockKeywords;\n    }\n\n    function wordIsVendorPrefix(word) {\n      return word.toLowerCase().match(vendorPrefixesRegexp);\n    }\n\n    function wordAsValue(word) {\n      var wordLC = word.toLowerCase();\n      var override = \"variable-2\";\n      if (wordIsTag(word)) override = \"tag\";\n      else if (wordIsBlock(word)) override = \"block-keyword\";\n      else if (wordIsProperty(word)) override = \"property\";\n      else if (wordLC in valueKeywords || wordLC in commonAtoms) override = \"atom\";\n      else if (wordLC == \"return\" || wordLC in colorKeywords) override = \"keyword\";\n\n      // Font family\n      else if (word.match(/^[A-Z]/)) override = \"string\";\n      return override;\n    }\n\n    function typeIsBlock(type, stream) {\n      return ((endOfLine(stream) && (type == \"{\" || type == \"]\" || type == \"hash\" || type == \"qualifier\")) || type == \"block-mixin\");\n    }\n\n    function typeIsInterpolation(type, stream) {\n      return type == \"{\" && stream.match(/^\\s*\\$?[\\w-]+/i, false);\n    }\n\n    function typeIsPseudo(type, stream) {\n      return type == \":\" && stream.match(/^[a-z-]+/, false);\n    }\n\n    function startOfLine(stream) {\n      return stream.sol() || stream.string.match(new RegExp(\"^\\\\s*\" + escapeRegExp(stream.current())));\n    }\n\n    function endOfLine(stream) {\n      return stream.eol() || stream.match(/^\\s*$/, false);\n    }\n\n    function firstWordOfLine(line) {\n      var re = /^\\s*[-_]*[a-z0-9]+[\\w-]*/i;\n      var result = typeof line == \"string\" ? line.match(re) : line.string.match(re);\n      return result ? result[0].replace(/^\\s*/, \"\") : \"\";\n    }\n\n\n    /**\n     * Block\n     */\n    states.block = function(type, stream, state) {\n      if ((type == \"comment\" && startOfLine(stream)) ||\n          (type == \",\" && endOfLine(stream)) ||\n          type == \"mixin\") {\n        return pushContext(state, stream, \"block\", 0);\n      }\n      if (typeIsInterpolation(type, stream)) {\n        return pushContext(state, stream, \"interpolation\");\n      }\n      if (endOfLine(stream) && type == \"]\") {\n        if (!/^\\s*(\\.|#|:|\\[|\\*|&)/.test(stream.string) && !wordIsTag(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n      }\n      if (typeIsBlock(type, stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"}\" && endOfLine(stream)) {\n        return pushContext(state, stream, \"block\", 0);\n      }\n      if (type == \"variable-name\") {\n        if (stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/) || wordIsBlock(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"variableName\");\n        }\n        else {\n          return pushContext(state, stream, \"variableName\", 0);\n        }\n      }\n      if (type == \"=\") {\n        if (!endOfLine(stream) && !wordIsBlock(firstWordOfLine(stream))) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"*\") {\n        if (endOfLine(stream) || stream.match(/\\s*(,|\\.|#|\\[|:|{)/,false)) {\n          override = \"tag\";\n          return pushContext(state, stream, \"block\");\n        }\n      }\n      if (typeIsPseudo(type, stream)) {\n        return pushContext(state, stream, \"pseudo\");\n      }\n      if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n        return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n      }\n      if (/@(-(moz|ms|o|webkit)-)?keyframes$/.test(type)) {\n        return pushContext(state, stream, \"keyframes\");\n      }\n      if (/@extends?/.test(type)) {\n        return pushContext(state, stream, \"extend\", 0);\n      }\n      if (type && type.charAt(0) == \"@\") {\n\n        // Property Lookup\n        if (stream.indentation() > 0 && wordIsProperty(stream.current().slice(1))) {\n          override = \"variable-2\";\n          return \"block\";\n        }\n        if (/(@import|@require|@charset)/.test(type)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"reference\" && endOfLine(stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"(\") {\n        return pushContext(state, stream, \"parens\");\n      }\n\n      if (type == \"vendor-prefixes\") {\n        return pushContext(state, stream, \"vendorPrefixes\");\n      }\n      if (type == \"word\") {\n        var word = stream.current();\n        override = wordAsValue(word);\n\n        if (override == \"property\") {\n          if (startOfLine(stream)) {\n            return pushContext(state, stream, \"block\", 0);\n          } else {\n            override = \"atom\";\n            return \"block\";\n          }\n        }\n\n        if (override == \"tag\") {\n\n          // tag is a css value\n          if (/embed|menu|pre|progress|sub|table/.test(word)) {\n            if (wordIsProperty(firstWordOfLine(stream))) {\n              override = \"atom\";\n              return \"block\";\n            }\n          }\n\n          // tag is an attribute\n          if (stream.string.match(new RegExp(\"\\\\[\\\\s*\" + word + \"|\" + word +\"\\\\s*\\\\]\"))) {\n            override = \"atom\";\n            return \"block\";\n          }\n\n          // tag is a variable\n          if (tagVariablesRegexp.test(word)) {\n            if ((startOfLine(stream) && stream.string.match(/=/)) ||\n                (!startOfLine(stream) &&\n                 !stream.string.match(/^(\\s*\\.|#|\\&|\\[|\\/|>|\\*)/) &&\n                 !wordIsTag(firstWordOfLine(stream)))) {\n              override = \"variable-2\";\n              if (wordIsBlock(firstWordOfLine(stream)))  return \"block\";\n              return pushContext(state, stream, \"block\", 0);\n            }\n          }\n\n          if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        }\n        if (override == \"block-keyword\") {\n          override = \"keyword\";\n\n          // Postfix conditionals\n          if (stream.current(/(if|unless)/) && !startOfLine(stream)) {\n            return \"block\";\n          }\n          return pushContext(state, stream, \"block\");\n        }\n        if (word == \"return\") return pushContext(state, stream, \"block\", 0);\n\n        // Placeholder selector\n        if (override == \"variable-2\" && stream.string.match(/^\\s?\\$[\\w-\\.\\[\\]\\'\\\"]+$/)) {\n          return pushContext(state, stream, \"block\");\n        }\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Parens\n     */\n    states.parens = function(type, stream, state) {\n      if (type == \"(\") return pushContext(state, stream, \"parens\");\n      if (type == \")\") {\n        if (state.context.prev.type == \"parens\") {\n          return popContext(state);\n        }\n        if ((stream.string.match(/^[a-z][\\w-]*\\(/i) && endOfLine(stream)) ||\n            wordIsBlock(firstWordOfLine(stream)) ||\n            /(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(firstWordOfLine(stream)) ||\n            (!stream.string.match(/^-?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) &&\n             wordIsTag(firstWordOfLine(stream)))) {\n          return pushContext(state, stream, \"block\");\n        }\n        if (stream.string.match(/^[\\$-]?[a-z][\\w-\\.\\[\\]\\'\\\"]*\\s*=/) ||\n            stream.string.match(/^\\s*(\\(|\\)|[0-9])/) ||\n            stream.string.match(/^\\s+[a-z][\\w-]*\\(/i) ||\n            stream.string.match(/^\\s+[\\$-]?[a-z]/i)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        else return pushContext(state, stream, \"block\", 0);\n      }\n      if (type && type.charAt(0) == \"@\" && wordIsProperty(stream.current().slice(1))) {\n        override = \"variable-2\";\n      }\n      if (type == \"word\") {\n        var word = stream.current();\n        override = wordAsValue(word);\n        if (override == \"tag\" && tagVariablesRegexp.test(word)) {\n          override = \"variable-2\";\n        }\n        if (override == \"property\" || word == \"to\") override = \"atom\";\n      }\n      if (type == \"variable-name\") {\n        return pushContext(state, stream, \"variableName\");\n      }\n      if (typeIsPseudo(type, stream)) {\n        return pushContext(state, stream, \"pseudo\");\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Vendor prefixes\n     */\n    states.vendorPrefixes = function(type, stream, state) {\n      if (type == \"word\") {\n        override = \"property\";\n        return pushContext(state, stream, \"block\", 0);\n      }\n      return popContext(state);\n    };\n\n\n    /**\n     * Pseudo\n     */\n    states.pseudo = function(type, stream, state) {\n      if (!wordIsProperty(firstWordOfLine(stream.string))) {\n        stream.match(/^[a-z-]+/);\n        override = \"variable-3\";\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        return popContext(state);\n      }\n      return popAndPass(type, stream, state);\n    };\n\n\n    /**\n     * atBlock\n     */\n    states.atBlock = function(type, stream, state) {\n      if (type == \"(\") return pushContext(state, stream, \"atBlock_parens\");\n      if (typeIsBlock(type, stream)) {\n        return pushContext(state, stream, \"block\");\n      }\n      if (typeIsInterpolation(type, stream)) {\n        return pushContext(state, stream, \"interpolation\");\n      }\n      if (type == \"word\") {\n        var word = stream.current().toLowerCase();\n        if (/^(only|not|and|or)$/.test(word))\n          override = \"keyword\";\n        else if (documentTypes.hasOwnProperty(word))\n          override = \"tag\";\n        else if (mediaTypes.hasOwnProperty(word))\n          override = \"attribute\";\n        else if (mediaFeatures.hasOwnProperty(word))\n          override = \"property\";\n        else if (nonStandardPropertyKeywords.hasOwnProperty(word))\n          override = \"string-2\";\n        else override = wordAsValue(stream.current());\n        if (override == \"tag\" && endOfLine(stream)) {\n          return pushContext(state, stream, \"block\");\n        }\n      }\n      if (type == \"operator\" && /^(not|and|or)$/.test(stream.current())) {\n        override = \"keyword\";\n      }\n      return state.context.type;\n    };\n\n    states.atBlock_parens = function(type, stream, state) {\n      if (type == \"{\" || type == \"}\") return state.context.type;\n      if (type == \")\") {\n        if (endOfLine(stream)) return pushContext(state, stream, \"block\");\n        else return pushContext(state, stream, \"atBlock\");\n      }\n      if (type == \"word\") {\n        var word = stream.current().toLowerCase();\n        override = wordAsValue(word);\n        if (/^(max|min)/.test(word)) override = \"property\";\n        if (override == \"tag\") {\n          tagVariablesRegexp.test(word) ? override = \"variable-2\" : override = \"atom\";\n        }\n        return state.context.type;\n      }\n      return states.atBlock(type, stream, state);\n    };\n\n\n    /**\n     * Keyframes\n     */\n    states.keyframes = function(type, stream, state) {\n      if (stream.indentation() == \"0\" && ((type == \"}\" && startOfLine(stream)) || type == \"]\" || type == \"hash\"\n                                          || type == \"qualifier\" || wordIsTag(stream.current()))) {\n        return popAndPass(type, stream, state);\n      }\n      if (type == \"{\") return pushContext(state, stream, \"keyframes\");\n      if (type == \"}\") {\n        if (startOfLine(stream)) return popContext(state, true);\n        else return pushContext(state, stream, \"keyframes\");\n      }\n      if (type == \"unit\" && /^[0-9]+\\%$/.test(stream.current())) {\n        return pushContext(state, stream, \"keyframes\");\n      }\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        if (override == \"block-keyword\") {\n          override = \"keyword\";\n          return pushContext(state, stream, \"keyframes\");\n        }\n      }\n      if (/@(font-face|media|supports|(-moz-)?document)/.test(type)) {\n        return pushContext(state, stream, endOfLine(stream) ? \"block\" : \"atBlock\");\n      }\n      if (type == \"mixin\") {\n        return pushContext(state, stream, \"block\", 0);\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Interpolation\n     */\n    states.interpolation = function(type, stream, state) {\n      if (type == \"{\") popContext(state) && pushContext(state, stream, \"block\");\n      if (type == \"}\") {\n        if (stream.string.match(/^\\s*(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/i) ||\n            (stream.string.match(/^\\s*[a-z]/i) && wordIsTag(firstWordOfLine(stream)))) {\n          return pushContext(state, stream, \"block\");\n        }\n        if (!stream.string.match(/^(\\{|\\s*\\&)/) ||\n            stream.match(/\\s*[\\w-]/,false)) {\n          return pushContext(state, stream, \"block\", 0);\n        }\n        return pushContext(state, stream, \"block\");\n      }\n      if (type == \"variable-name\") {\n        return pushContext(state, stream, \"variableName\", 0);\n      }\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        if (override == \"tag\") override = \"atom\";\n      }\n      return state.context.type;\n    };\n\n\n    /**\n     * Extend/s\n     */\n    states.extend = function(type, stream, state) {\n      if (type == \"[\" || type == \"=\") return \"extend\";\n      if (type == \"]\") return popContext(state);\n      if (type == \"word\") {\n        override = wordAsValue(stream.current());\n        return \"extend\";\n      }\n      return popContext(state);\n    };\n\n\n    /**\n     * Variable name\n     */\n    states.variableName = function(type, stream, state) {\n      if (type == \"string\" || type == \"[\" || type == \"]\" || stream.current().match(/^(\\.|\\$)/)) {\n        if (stream.current().match(/^\\.[\\w-]+/i)) override = \"variable-2\";\n        return \"variableName\";\n      }\n      return popAndPass(type, stream, state);\n    };\n\n\n    return {\n      startState: function(base) {\n        return {\n          tokenize: null,\n          state: \"block\",\n          context: new Context(\"block\", base || 0, null)\n        };\n      },\n      token: function(stream, state) {\n        if (!state.tokenize && stream.eatSpace()) return null;\n        style = (state.tokenize || tokenBase)(stream, state);\n        if (style && typeof style == \"object\") {\n          type = style[1];\n          style = style[0];\n        }\n        override = style;\n        state.state = states[state.state](type, stream, state);\n        return override;\n      },\n      indent: function(state, textAfter, line) {\n\n        var cx = state.context,\n            ch = textAfter && textAfter.charAt(0),\n            indent = cx.indent,\n            lineFirstWord = firstWordOfLine(textAfter),\n            lineIndent = line.match(/^\\s*/)[0].replace(/\\t/g, indentUnitString).length,\n            prevLineFirstWord = state.context.prev ? state.context.prev.line.firstWord : \"\",\n            prevLineIndent = state.context.prev ? state.context.prev.line.indent : lineIndent;\n\n        if (cx.prev &&\n            (ch == \"}\" && (cx.type == \"block\" || cx.type == \"atBlock\" || cx.type == \"keyframes\") ||\n             ch == \")\" && (cx.type == \"parens\" || cx.type == \"atBlock_parens\") ||\n             ch == \"{\" && (cx.type == \"at\"))) {\n          indent = cx.indent - indentUnit;\n        } else if (!(/(\\})/.test(ch))) {\n          if (/@|\\$|\\d/.test(ch) ||\n              /^\\{/.test(textAfter) ||\n/^\\s*\\/(\\/|\\*)/.test(textAfter) ||\n              /^\\s*\\/\\*/.test(prevLineFirstWord) ||\n              /^\\s*[\\w-\\.\\[\\]\\'\\\"]+\\s*(\\?|:|\\+)?=/i.test(textAfter) ||\n/^(\\+|-)?[a-z][\\w-]*\\(/i.test(textAfter) ||\n/^return/.test(textAfter) ||\n              wordIsBlock(lineFirstWord)) {\n            indent = lineIndent;\n          } else if (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(ch) || wordIsTag(lineFirstWord)) {\n            if (/\\,\\s*$/.test(prevLineFirstWord)) {\n              indent = prevLineIndent;\n            } else if (/^\\s+/.test(line) && (/(\\.|#|:|\\[|\\*|&|>|~|\\+|\\/)/.test(prevLineFirstWord) || wordIsTag(prevLineFirstWord))) {\n              indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + indentUnit;\n            } else {\n              indent = lineIndent;\n            }\n          } else if (!/,\\s*$/.test(line) && (wordIsVendorPrefix(lineFirstWord) || wordIsProperty(lineFirstWord))) {\n            if (wordIsBlock(prevLineFirstWord)) {\n              indent = lineIndent <= prevLineIndent ? prevLineIndent : prevLineIndent + indentUnit;\n            } else if (/^\\{/.test(prevLineFirstWord)) {\n              indent = lineIndent <= prevLineIndent ? lineIndent : prevLineIndent + indentUnit;\n            } else if (wordIsVendorPrefix(prevLineFirstWord) || wordIsProperty(prevLineFirstWord)) {\n              indent = lineIndent >= prevLineIndent ? prevLineIndent : lineIndent;\n            } else if (/^(\\.|#|:|\\[|\\*|&|@|\\+|\\-|>|~|\\/)/.test(prevLineFirstWord) ||\n                      /=\\s*$/.test(prevLineFirstWord) ||\n                      wordIsTag(prevLineFirstWord) ||\n                      /^\\$[\\w-\\.\\[\\]\\'\\\"]/.test(prevLineFirstWord)) {\n              indent = prevLineIndent + indentUnit;\n            } else {\n              indent = lineIndent;\n            }\n          }\n        }\n        return indent;\n      },\n      electricChars: \"}\",\n      lineComment: \"//\",\n      fold: \"indent\"\n    };\n  });\n\n  // developer.mozilla.org/en-US/docs/Web/HTML/Element\n  var tagKeywords_ = [\"a\",\"abbr\",\"address\",\"area\",\"article\",\"aside\",\"audio\", \"b\", \"base\",\"bdi\", \"bdo\",\"bgsound\",\"blockquote\",\"body\",\"br\",\"button\",\"canvas\",\"caption\",\"cite\", \"code\",\"col\",\"colgroup\",\"data\",\"datalist\",\"dd\",\"del\",\"details\",\"dfn\",\"div\", \"dl\",\"dt\",\"em\",\"embed\",\"fieldset\",\"figcaption\",\"figure\",\"footer\",\"form\",\"h1\", \"h2\",\"h3\",\"h4\",\"h5\",\"h6\",\"head\",\"header\",\"hgroup\",\"hr\",\"html\",\"i\",\"iframe\", \"img\",\"input\",\"ins\",\"kbd\",\"keygen\",\"label\",\"legend\",\"li\",\"link\",\"main\",\"map\", \"mark\",\"marquee\",\"menu\",\"menuitem\",\"meta\",\"meter\",\"nav\",\"nobr\",\"noframes\", \"noscript\",\"object\",\"ol\",\"optgroup\",\"option\",\"output\",\"p\",\"param\",\"pre\", \"progress\",\"q\",\"rp\",\"rt\",\"ruby\",\"s\",\"samp\",\"script\",\"section\",\"select\", \"small\",\"source\",\"span\",\"strong\",\"style\",\"sub\",\"summary\",\"sup\",\"table\",\"tbody\",\"td\",\"textarea\",\"tfoot\",\"th\",\"thead\",\"time\",\"tr\",\"track\", \"u\",\"ul\",\"var\",\"video\"];\n\n  // github.com/codemirror/CodeMirror/blob/master/mode/css/css.js\n  var documentTypes_ = [\"domain\", \"regexp\", \"url\", \"url-prefix\"];\n  var mediaTypes_ = [\"all\",\"aural\",\"braille\",\"handheld\",\"print\",\"projection\",\"screen\",\"tty\",\"tv\",\"embossed\"];\n  var mediaFeatures_ = [\"width\",\"min-width\",\"max-width\",\"height\",\"min-height\",\"max-height\",\"device-width\",\"min-device-width\",\"max-device-width\",\"device-height\",\"min-device-height\",\"max-device-height\",\"aspect-ratio\",\"min-aspect-ratio\",\"max-aspect-ratio\",\"device-aspect-ratio\",\"min-device-aspect-ratio\",\"max-device-aspect-ratio\",\"color\",\"min-color\",\"max-color\",\"color-index\",\"min-color-index\",\"max-color-index\",\"monochrome\",\"min-monochrome\",\"max-monochrome\",\"resolution\",\"min-resolution\",\"max-resolution\",\"scan\",\"grid\"];\n  var propertyKeywords_ = [\"align-content\",\"align-items\",\"align-self\",\"alignment-adjust\",\"alignment-baseline\",\"anchor-point\",\"animation\",\"animation-delay\",\"animation-direction\",\"animation-duration\",\"animation-fill-mode\",\"animation-iteration-count\",\"animation-name\",\"animation-play-state\",\"animation-timing-function\",\"appearance\",\"azimuth\",\"backface-visibility\",\"background\",\"background-attachment\",\"background-clip\",\"background-color\",\"background-image\",\"background-origin\",\"background-position\",\"background-repeat\",\"background-size\",\"baseline-shift\",\"binding\",\"bleed\",\"bookmark-label\",\"bookmark-level\",\"bookmark-state\",\"bookmark-target\",\"border\",\"border-bottom\",\"border-bottom-color\",\"border-bottom-left-radius\",\"border-bottom-right-radius\",\"border-bottom-style\",\"border-bottom-width\",\"border-collapse\",\"border-color\",\"border-image\",\"border-image-outset\",\"border-image-repeat\",\"border-image-slice\",\"border-image-source\",\"border-image-width\",\"border-left\",\"border-left-color\",\"border-left-style\",\"border-left-width\",\"border-radius\",\"border-right\",\"border-right-color\",\"border-right-style\",\"border-right-width\",\"border-spacing\",\"border-style\",\"border-top\",\"border-top-color\",\"border-top-left-radius\",\"border-top-right-radius\",\"border-top-style\",\"border-top-width\",\"border-width\",\"bottom\",\"box-decoration-break\",\"box-shadow\",\"box-sizing\",\"break-after\",\"break-before\",\"break-inside\",\"caption-side\",\"clear\",\"clip\",\"color\",\"color-profile\",\"column-count\",\"column-fill\",\"column-gap\",\"column-rule\",\"column-rule-color\",\"column-rule-style\",\"column-rule-width\",\"column-span\",\"column-width\",\"columns\",\"content\",\"counter-increment\",\"counter-reset\",\"crop\",\"cue\",\"cue-after\",\"cue-before\",\"cursor\",\"direction\",\"display\",\"dominant-baseline\",\"drop-initial-after-adjust\",\"drop-initial-after-align\",\"drop-initial-before-adjust\",\"drop-initial-before-align\",\"drop-initial-size\",\"drop-initial-value\",\"elevation\",\"empty-cells\",\"fit\",\"fit-position\",\"flex\",\"flex-basis\",\"flex-direction\",\"flex-flow\",\"flex-grow\",\"flex-shrink\",\"flex-wrap\",\"float\",\"float-offset\",\"flow-from\",\"flow-into\",\"font\",\"font-feature-settings\",\"font-family\",\"font-kerning\",\"font-language-override\",\"font-size\",\"font-size-adjust\",\"font-stretch\",\"font-style\",\"font-synthesis\",\"font-variant\",\"font-variant-alternates\",\"font-variant-caps\",\"font-variant-east-asian\",\"font-variant-ligatures\",\"font-variant-numeric\",\"font-variant-position\",\"font-weight\",\"grid\",\"grid-area\",\"grid-auto-columns\",\"grid-auto-flow\",\"grid-auto-position\",\"grid-auto-rows\",\"grid-column\",\"grid-column-end\",\"grid-column-start\",\"grid-row\",\"grid-row-end\",\"grid-row-start\",\"grid-template\",\"grid-template-areas\",\"grid-template-columns\",\"grid-template-rows\",\"hanging-punctuation\",\"height\",\"hyphens\",\"icon\",\"image-orientation\",\"image-rendering\",\"image-resolution\",\"inline-box-align\",\"justify-content\",\"left\",\"letter-spacing\",\"line-break\",\"line-height\",\"line-stacking\",\"line-stacking-ruby\",\"line-stacking-shift\",\"line-stacking-strategy\",\"list-style\",\"list-style-image\",\"list-style-position\",\"list-style-type\",\"margin\",\"margin-bottom\",\"margin-left\",\"margin-right\",\"margin-top\",\"marker-offset\",\"marks\",\"marquee-direction\",\"marquee-loop\",\"marquee-play-count\",\"marquee-speed\",\"marquee-style\",\"max-height\",\"max-width\",\"min-height\",\"min-width\",\"move-to\",\"nav-down\",\"nav-index\",\"nav-left\",\"nav-right\",\"nav-up\",\"object-fit\",\"object-position\",\"opacity\",\"order\",\"orphans\",\"outline\",\"outline-color\",\"outline-offset\",\"outline-style\",\"outline-width\",\"overflow\",\"overflow-style\",\"overflow-wrap\",\"overflow-x\",\"overflow-y\",\"padding\",\"padding-bottom\",\"padding-left\",\"padding-right\",\"padding-top\",\"page\",\"page-break-after\",\"page-break-before\",\"page-break-inside\",\"page-policy\",\"pause\",\"pause-after\",\"pause-before\",\"perspective\",\"perspective-origin\",\"pitch\",\"pitch-range\",\"play-during\",\"position\",\"presentation-level\",\"punctuation-trim\",\"quotes\",\"region-break-after\",\"region-break-before\",\"region-break-inside\",\"region-fragment\",\"rendering-intent\",\"resize\",\"rest\",\"rest-after\",\"rest-before\",\"richness\",\"right\",\"rotation\",\"rotation-point\",\"ruby-align\",\"ruby-overhang\",\"ruby-position\",\"ruby-span\",\"shape-image-threshold\",\"shape-inside\",\"shape-margin\",\"shape-outside\",\"size\",\"speak\",\"speak-as\",\"speak-header\",\"speak-numeral\",\"speak-punctuation\",\"speech-rate\",\"stress\",\"string-set\",\"tab-size\",\"table-layout\",\"target\",\"target-name\",\"target-new\",\"target-position\",\"text-align\",\"text-align-last\",\"text-decoration\",\"text-decoration-color\",\"text-decoration-line\",\"text-decoration-skip\",\"text-decoration-style\",\"text-emphasis\",\"text-emphasis-color\",\"text-emphasis-position\",\"text-emphasis-style\",\"text-height\",\"text-indent\",\"text-justify\",\"text-outline\",\"text-overflow\",\"text-shadow\",\"text-size-adjust\",\"text-space-collapse\",\"text-transform\",\"text-underline-position\",\"text-wrap\",\"top\",\"transform\",\"transform-origin\",\"transform-style\",\"transition\",\"transition-delay\",\"transition-duration\",\"transition-property\",\"transition-timing-function\",\"unicode-bidi\",\"vertical-align\",\"visibility\",\"voice-balance\",\"voice-duration\",\"voice-family\",\"voice-pitch\",\"voice-range\",\"voice-rate\",\"voice-stress\",\"voice-volume\",\"volume\",\"white-space\",\"widows\",\"width\",\"will-change\",\"word-break\",\"word-spacing\",\"word-wrap\",\"z-index\",\"clip-path\",\"clip-rule\",\"mask\",\"enable-background\",\"filter\",\"flood-color\",\"flood-opacity\",\"lighting-color\",\"stop-color\",\"stop-opacity\",\"pointer-events\",\"color-interpolation\",\"color-interpolation-filters\",\"color-rendering\",\"fill\",\"fill-opacity\",\"fill-rule\",\"image-rendering\",\"marker\",\"marker-end\",\"marker-mid\",\"marker-start\",\"shape-rendering\",\"stroke\",\"stroke-dasharray\",\"stroke-dashoffset\",\"stroke-linecap\",\"stroke-linejoin\",\"stroke-miterlimit\",\"stroke-opacity\",\"stroke-width\",\"text-rendering\",\"baseline-shift\",\"dominant-baseline\",\"glyph-orientation-horizontal\",\"glyph-orientation-vertical\",\"text-anchor\",\"writing-mode\",\"font-smoothing\",\"osx-font-smoothing\"];\n  var nonStandardPropertyKeywords_ = [\"scrollbar-arrow-color\",\"scrollbar-base-color\",\"scrollbar-dark-shadow-color\",\"scrollbar-face-color\",\"scrollbar-highlight-color\",\"scrollbar-shadow-color\",\"scrollbar-3d-light-color\",\"scrollbar-track-color\",\"shape-inside\",\"searchfield-cancel-button\",\"searchfield-decoration\",\"searchfield-results-button\",\"searchfield-results-decoration\",\"zoom\"];\n  var fontProperties_ = [\"font-family\",\"src\",\"unicode-range\",\"font-variant\",\"font-feature-settings\",\"font-stretch\",\"font-weight\",\"font-style\"];\n  var colorKeywords_ = [\"aliceblue\",\"antiquewhite\",\"aqua\",\"aquamarine\",\"azure\",\"beige\",\"bisque\",\"black\",\"blanchedalmond\",\"blue\",\"blueviolet\",\"brown\",\"burlywood\",\"cadetblue\",\"chartreuse\",\"chocolate\",\"coral\",\"cornflowerblue\",\"cornsilk\",\"crimson\",\"cyan\",\"darkblue\",\"darkcyan\",\"darkgoldenrod\",\"darkgray\",\"darkgreen\",\"darkkhaki\",\"darkmagenta\",\"darkolivegreen\",\"darkorange\",\"darkorchid\",\"darkred\",\"darksalmon\",\"darkseagreen\",\"darkslateblue\",\"darkslategray\",\"darkturquoise\",\"darkviolet\",\"deeppink\",\"deepskyblue\",\"dimgray\",\"dodgerblue\",\"firebrick\",\"floralwhite\",\"forestgreen\",\"fuchsia\",\"gainsboro\",\"ghostwhite\",\"gold\",\"goldenrod\",\"gray\",\"grey\",\"green\",\"greenyellow\",\"honeydew\",\"hotpink\",\"indianred\",\"indigo\",\"ivory\",\"khaki\",\"lavender\",\"lavenderblush\",\"lawngreen\",\"lemonchiffon\",\"lightblue\",\"lightcoral\",\"lightcyan\",\"lightgoldenrodyellow\",\"lightgray\",\"lightgreen\",\"lightpink\",\"lightsalmon\",\"lightseagreen\",\"lightskyblue\",\"lightslategray\",\"lightsteelblue\",\"lightyellow\",\"lime\",\"limegreen\",\"linen\",\"magenta\",\"maroon\",\"mediumaquamarine\",\"mediumblue\",\"mediumorchid\",\"mediumpurple\",\"mediumseagreen\",\"mediumslateblue\",\"mediumspringgreen\",\"mediumturquoise\",\"mediumvioletred\",\"midnightblue\",\"mintcream\",\"mistyrose\",\"moccasin\",\"navajowhite\",\"navy\",\"oldlace\",\"olive\",\"olivedrab\",\"orange\",\"orangered\",\"orchid\",\"palegoldenrod\",\"palegreen\",\"paleturquoise\",\"palevioletred\",\"papayawhip\",\"peachpuff\",\"peru\",\"pink\",\"plum\",\"powderblue\",\"purple\",\"rebeccapurple\",\"red\",\"rosybrown\",\"royalblue\",\"saddlebrown\",\"salmon\",\"sandybrown\",\"seagreen\",\"seashell\",\"sienna\",\"silver\",\"skyblue\",\"slateblue\",\"slategray\",\"snow\",\"springgreen\",\"steelblue\",\"tan\",\"teal\",\"thistle\",\"tomato\",\"turquoise\",\"violet\",\"wheat\",\"white\",\"whitesmoke\",\"yellow\",\"yellowgreen\"];\n  var valueKeywords_ = [\"above\",\"absolute\",\"activeborder\",\"additive\",\"activecaption\",\"afar\",\"after-white-space\",\"ahead\",\"alias\",\"all\",\"all-scroll\",\"alphabetic\",\"alternate\",\"always\",\"amharic\",\"amharic-abegede\",\"antialiased\",\"appworkspace\",\"arabic-indic\",\"armenian\",\"asterisks\",\"attr\",\"auto\",\"avoid\",\"avoid-column\",\"avoid-page\",\"avoid-region\",\"background\",\"backwards\",\"baseline\",\"below\",\"bidi-override\",\"binary\",\"bengali\",\"blink\",\"block\",\"block-axis\",\"bold\",\"bolder\",\"border\",\"border-box\",\"both\",\"bottom\",\"break\",\"break-all\",\"break-word\",\"bullets\",\"button\",\"button-bevel\",\"buttonface\",\"buttonhighlight\",\"buttonshadow\",\"buttontext\",\"calc\",\"cambodian\",\"capitalize\",\"caps-lock-indicator\",\"caption\",\"captiontext\",\"caret\",\"cell\",\"center\",\"checkbox\",\"circle\",\"cjk-decimal\",\"cjk-earthly-branch\",\"cjk-heavenly-stem\",\"cjk-ideographic\",\"clear\",\"clip\",\"close-quote\",\"col-resize\",\"collapse\",\"column\",\"compact\",\"condensed\",\"contain\",\"content\",\"contents\",\"content-box\",\"context-menu\",\"continuous\",\"copy\",\"counter\",\"counters\",\"cover\",\"crop\",\"cross\",\"crosshair\",\"currentcolor\",\"cursive\",\"cyclic\",\"dashed\",\"decimal\",\"decimal-leading-zero\",\"default\",\"default-button\",\"destination-atop\",\"destination-in\",\"destination-out\",\"destination-over\",\"devanagari\",\"disc\",\"discard\",\"disclosure-closed\",\"disclosure-open\",\"document\",\"dot-dash\",\"dot-dot-dash\",\"dotted\",\"double\",\"down\",\"e-resize\",\"ease\",\"ease-in\",\"ease-in-out\",\"ease-out\",\"element\",\"ellipse\",\"ellipsis\",\"embed\",\"end\",\"ethiopic\",\"ethiopic-abegede\",\"ethiopic-abegede-am-et\",\"ethiopic-abegede-gez\",\"ethiopic-abegede-ti-er\",\"ethiopic-abegede-ti-et\",\"ethiopic-halehame-aa-er\",\"ethiopic-halehame-aa-et\",\"ethiopic-halehame-am-et\",\"ethiopic-halehame-gez\",\"ethiopic-halehame-om-et\",\"ethiopic-halehame-sid-et\",\"ethiopic-halehame-so-et\",\"ethiopic-halehame-ti-er\",\"ethiopic-halehame-ti-et\",\"ethiopic-halehame-tig\",\"ethiopic-numeric\",\"ew-resize\",\"expanded\",\"extends\",\"extra-condensed\",\"extra-expanded\",\"fantasy\",\"fast\",\"fill\",\"fixed\",\"flat\",\"flex\",\"footnotes\",\"forwards\",\"from\",\"geometricPrecision\",\"georgian\",\"graytext\",\"groove\",\"gujarati\",\"gurmukhi\",\"hand\",\"hangul\",\"hangul-consonant\",\"hebrew\",\"help\",\"hidden\",\"hide\",\"higher\",\"highlight\",\"highlighttext\",\"hiragana\",\"hiragana-iroha\",\"horizontal\",\"hsl\",\"hsla\",\"icon\",\"ignore\",\"inactiveborder\",\"inactivecaption\",\"inactivecaptiontext\",\"infinite\",\"infobackground\",\"infotext\",\"inherit\",\"initial\",\"inline\",\"inline-axis\",\"inline-block\",\"inline-flex\",\"inline-table\",\"inset\",\"inside\",\"intrinsic\",\"invert\",\"italic\",\"japanese-formal\",\"japanese-informal\",\"justify\",\"kannada\",\"katakana\",\"katakana-iroha\",\"keep-all\",\"khmer\",\"korean-hangul-formal\",\"korean-hanja-formal\",\"korean-hanja-informal\",\"landscape\",\"lao\",\"large\",\"larger\",\"left\",\"level\",\"lighter\",\"line-through\",\"linear\",\"linear-gradient\",\"lines\",\"list-item\",\"listbox\",\"listitem\",\"local\",\"logical\",\"loud\",\"lower\",\"lower-alpha\",\"lower-armenian\",\"lower-greek\",\"lower-hexadecimal\",\"lower-latin\",\"lower-norwegian\",\"lower-roman\",\"lowercase\",\"ltr\",\"malayalam\",\"match\",\"matrix\",\"matrix3d\",\"media-controls-background\",\"media-current-time-display\",\"media-fullscreen-button\",\"media-mute-button\",\"media-play-button\",\"media-return-to-realtime-button\",\"media-rewind-button\",\"media-seek-back-button\",\"media-seek-forward-button\",\"media-slider\",\"media-sliderthumb\",\"media-time-remaining-display\",\"media-volume-slider\",\"media-volume-slider-container\",\"media-volume-sliderthumb\",\"medium\",\"menu\",\"menulist\",\"menulist-button\",\"menulist-text\",\"menulist-textfield\",\"menutext\",\"message-box\",\"middle\",\"min-intrinsic\",\"mix\",\"mongolian\",\"monospace\",\"move\",\"multiple\",\"myanmar\",\"n-resize\",\"narrower\",\"ne-resize\",\"nesw-resize\",\"no-close-quote\",\"no-drop\",\"no-open-quote\",\"no-repeat\",\"none\",\"normal\",\"not-allowed\",\"nowrap\",\"ns-resize\",\"numbers\",\"numeric\",\"nw-resize\",\"nwse-resize\",\"oblique\",\"octal\",\"open-quote\",\"optimizeLegibility\",\"optimizeSpeed\",\"oriya\",\"oromo\",\"outset\",\"outside\",\"outside-shape\",\"overlay\",\"overline\",\"padding\",\"padding-box\",\"painted\",\"page\",\"paused\",\"persian\",\"perspective\",\"plus-darker\",\"plus-lighter\",\"pointer\",\"polygon\",\"portrait\",\"pre\",\"pre-line\",\"pre-wrap\",\"preserve-3d\",\"progress\",\"push-button\",\"radial-gradient\",\"radio\",\"read-only\",\"read-write\",\"read-write-plaintext-only\",\"rectangle\",\"region\",\"relative\",\"repeat\",\"repeating-linear-gradient\",\"repeating-radial-gradient\",\"repeat-x\",\"repeat-y\",\"reset\",\"reverse\",\"rgb\",\"rgba\",\"ridge\",\"right\",\"rotate\",\"rotate3d\",\"rotateX\",\"rotateY\",\"rotateZ\",\"round\",\"row-resize\",\"rtl\",\"run-in\",\"running\",\"s-resize\",\"sans-serif\",\"scale\",\"scale3d\",\"scaleX\",\"scaleY\",\"scaleZ\",\"scroll\",\"scrollbar\",\"scroll-position\",\"se-resize\",\"searchfield\",\"searchfield-cancel-button\",\"searchfield-decoration\",\"searchfield-results-button\",\"searchfield-results-decoration\",\"semi-condensed\",\"semi-expanded\",\"separate\",\"serif\",\"show\",\"sidama\",\"simp-chinese-formal\",\"simp-chinese-informal\",\"single\",\"skew\",\"skewX\",\"skewY\",\"skip-white-space\",\"slide\",\"slider-horizontal\",\"slider-vertical\",\"sliderthumb-horizontal\",\"sliderthumb-vertical\",\"slow\",\"small\",\"small-caps\",\"small-caption\",\"smaller\",\"solid\",\"somali\",\"source-atop\",\"source-in\",\"source-out\",\"source-over\",\"space\",\"spell-out\",\"square\",\"square-button\",\"start\",\"static\",\"status-bar\",\"stretch\",\"stroke\",\"sub\",\"subpixel-antialiased\",\"super\",\"sw-resize\",\"symbolic\",\"symbols\",\"table\",\"table-caption\",\"table-cell\",\"table-column\",\"table-column-group\",\"table-footer-group\",\"table-header-group\",\"table-row\",\"table-row-group\",\"tamil\",\"telugu\",\"text\",\"text-bottom\",\"text-top\",\"textarea\",\"textfield\",\"thai\",\"thick\",\"thin\",\"threeddarkshadow\",\"threedface\",\"threedhighlight\",\"threedlightshadow\",\"threedshadow\",\"tibetan\",\"tigre\",\"tigrinya-er\",\"tigrinya-er-abegede\",\"tigrinya-et\",\"tigrinya-et-abegede\",\"to\",\"top\",\"trad-chinese-formal\",\"trad-chinese-informal\",\"translate\",\"translate3d\",\"translateX\",\"translateY\",\"translateZ\",\"transparent\",\"ultra-condensed\",\"ultra-expanded\",\"underline\",\"up\",\"upper-alpha\",\"upper-armenian\",\"upper-greek\",\"upper-hexadecimal\",\"upper-latin\",\"upper-norwegian\",\"upper-roman\",\"uppercase\",\"urdu\",\"url\",\"var\",\"vertical\",\"vertical-text\",\"visible\",\"visibleFill\",\"visiblePainted\",\"visibleStroke\",\"visual\",\"w-resize\",\"wait\",\"wave\",\"wider\",\"window\",\"windowframe\",\"windowtext\",\"words\",\"x-large\",\"x-small\",\"xor\",\"xx-large\",\"xx-small\",\"bicubic\",\"optimizespeed\",\"grayscale\",\"row\",\"row-reverse\",\"wrap\",\"wrap-reverse\",\"column-reverse\",\"flex-start\",\"flex-end\",\"space-between\",\"space-around\", \"unset\"];\n\n  var wordOperatorKeywords_ = [\"in\",\"and\",\"or\",\"not\",\"is not\",\"is a\",\"is\",\"isnt\",\"defined\",\"if unless\"],\n      blockKeywords_ = [\"for\",\"if\",\"else\",\"unless\", \"from\", \"to\"],\n      commonAtoms_ = [\"null\",\"true\",\"false\",\"href\",\"title\",\"type\",\"not-allowed\",\"readonly\",\"disabled\"],\n      commonDef_ = [\"@font-face\", \"@keyframes\", \"@media\", \"@viewport\", \"@page\", \"@host\", \"@supports\", \"@block\", \"@css\"];\n\n  var hintWords = tagKeywords_.concat(documentTypes_,mediaTypes_,mediaFeatures_,\n                                      propertyKeywords_,nonStandardPropertyKeywords_,\n                                      colorKeywords_,valueKeywords_,fontProperties_,\n                                      wordOperatorKeywords_,blockKeywords_,\n                                      commonAtoms_,commonDef_);\n\n  function wordRegexp(words) {\n    words = words.sort(function(a,b){return b > a;});\n    return new RegExp(\"^((\" + words.join(\")|(\") + \"))\\\\b\");\n  }\n\n  function keySet(array) {\n    var keys = {};\n    for (var i = 0; i < array.length; ++i) keys[array[i]] = true;\n    return keys;\n  }\n\n  function escapeRegExp(text) {\n    return text.replace(/[-[\\]{}()*+?.,\\\\^$|#\\s]/g, \"\\\\$&\");\n  }\n\n  CodeMirror.registerHelper(\"hintWords\", \"stylus\", hintWords);\n  CodeMirror.defineMIME(\"text/x-styl\", \"stylus\");\n});\n"]},"metadata":{},"sourceType":"script"}