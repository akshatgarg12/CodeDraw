{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  'use strict';\n\n  if (typeof exports == 'object' && typeof module == 'object') // CommonJS\n    mod(require('../../lib/codemirror'));else if (typeof define == 'function' && define.amd) // AMD\n    define(['../../lib/codemirror'], mod);else // Plain browser env\n    mod(window.CodeMirror);\n})(function (CodeMirror) {\n  'use strict';\n\n  CodeMirror.defineMode('powershell', function () {\n    function buildRegexp(patterns, options) {\n      options = options || {};\n      var prefix = options.prefix !== undefined ? options.prefix : '^';\n      var suffix = options.suffix !== undefined ? options.suffix : '\\\\b';\n\n      for (var i = 0; i < patterns.length; i++) {\n        if (patterns[i] instanceof RegExp) {\n          patterns[i] = patterns[i].source;\n        } else {\n          patterns[i] = patterns[i].replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n        }\n      }\n\n      return new RegExp(prefix + '(' + patterns.join('|') + ')' + suffix, 'i');\n    }\n\n    var notCharacterOrDash = '(?=[^A-Za-z\\\\d\\\\-_]|$)';\n    var varNames = /[\\w\\-:]/;\n    var keywords = buildRegexp([/begin|break|catch|continue|data|default|do|dynamicparam/, /else|elseif|end|exit|filter|finally|for|foreach|from|function|if|in/, /param|process|return|switch|throw|trap|try|until|where|while/], {\n      suffix: notCharacterOrDash\n    });\n    var punctuation = /[\\[\\]{},;`\\\\\\.]|@[({]/;\n    var wordOperators = buildRegexp(['f', /b?not/, /[ic]?split/, 'join', /is(not)?/, 'as', /[ic]?(eq|ne|[gl][te])/, /[ic]?(not)?(like|match|contains)/, /[ic]?replace/, /b?(and|or|xor)/], {\n      prefix: '-'\n    });\n    var symbolOperators = /[+\\-*\\/%]=|\\+\\+|--|\\.\\.|[+\\-*&^%:=!|\\/]|<(?!#)|(?!#)>/;\n    var operators = buildRegexp([wordOperators, symbolOperators], {\n      suffix: ''\n    });\n    var numbers = /^((0x[\\da-f]+)|((\\d+\\.\\d+|\\d\\.|\\.\\d+|\\d+)(e[\\+\\-]?\\d+)?))[ld]?([kmgtp]b)?/i;\n    var identifiers = /^[A-Za-z\\_][A-Za-z\\-\\_\\d]*\\b/;\n    var symbolBuiltins = /[A-Z]:|%|\\?/i;\n    var namedBuiltins = buildRegexp([/Add-(Computer|Content|History|Member|PSSnapin|Type)/, /Checkpoint-Computer/, /Clear-(Content|EventLog|History|Host|Item(Property)?|Variable)/, /Compare-Object/, /Complete-Transaction/, /Connect-PSSession/, /ConvertFrom-(Csv|Json|SecureString|StringData)/, /Convert-Path/, /ConvertTo-(Csv|Html|Json|SecureString|Xml)/, /Copy-Item(Property)?/, /Debug-Process/, /Disable-(ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)/, /Disconnect-PSSession/, /Enable-(ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)/, /(Enter|Exit)-PSSession/, /Export-(Alias|Clixml|Console|Counter|Csv|FormatData|ModuleMember|PSSession)/, /ForEach-Object/, /Format-(Custom|List|Table|Wide)/, new RegExp('Get-(Acl|Alias|AuthenticodeSignature|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Counter|Credential' + '|Culture|Date|Event|EventLog|EventSubscriber|ExecutionPolicy|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job' + '|Location|Member|Module|PfxCertificate|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration' + '|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|Verb|WinEvent|WmiObject)'), /Group-Object/, /Import-(Alias|Clixml|Counter|Csv|LocalizedData|Module|PSSession)/, /ImportSystemModules/, /Invoke-(Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)/, /Join-Path/, /Limit-EventLog/, /Measure-(Command|Object)/, /Move-Item(Property)?/, new RegExp('New-(Alias|Event|EventLog|Item(Property)?|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile' + '|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy|WinEvent)'), /Out-(Default|File|GridView|Host|Null|Printer|String)/, /Pause/, /(Pop|Push)-Location/, /Read-Host/, /Receive-(Job|PSSession)/, /Register-(EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)/, /Remove-(Computer|Event|EventLog|Item(Property)?|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)/, /Rename-(Computer|Item(Property)?)/, /Reset-ComputerMachinePassword/, /Resolve-Path/, /Restart-(Computer|Service)/, /Restore-Computer/, /Resume-(Job|Service)/, /Save-Help/, /Select-(Object|String|Xml)/, /Send-MailMessage/, new RegExp('Set-(Acl|Alias|AuthenticodeSignature|Content|Date|ExecutionPolicy|Item(Property)?|Location|PSBreakpoint|PSDebug' + '|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)'), /Show-(Command|ControlPanelItem|EventLog)/, /Sort-Object/, /Split-Path/, /Start-(Job|Process|Service|Sleep|Transaction|Transcript)/, /Stop-(Computer|Job|Process|Service|Transcript)/, /Suspend-(Job|Service)/, /TabExpansion2/, /Tee-Object/, /Test-(ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)/, /Trace-Command/, /Unblock-File/, /Undo-Transaction/, /Unregister-(Event|PSSessionConfiguration)/, /Update-(FormatData|Help|List|TypeData)/, /Use-Transaction/, /Wait-(Event|Job|Process)/, /Where-Object/, /Write-(Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning)/, /cd|help|mkdir|more|oss|prompt/, /ac|asnp|cat|cd|chdir|clc|clear|clhy|cli|clp|cls|clv|cnsn|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|dnsn|ebp/, /echo|epal|epcsv|epsn|erase|etsn|exsn|fc|fl|foreach|ft|fw|gal|gbp|gc|gci|gcm|gcs|gdr|ghy|gi|gjb|gl|gm|gmo|gp|gps/, /group|gsn|gsnp|gsv|gu|gv|gwmi|h|history|icm|iex|ihy|ii|ipal|ipcsv|ipmo|ipsn|irm|ise|iwmi|iwr|kill|lp|ls|man|md/, /measure|mi|mount|move|mp|mv|nal|ndr|ni|nmo|npssc|nsn|nv|ogv|oh|popd|ps|pushd|pwd|r|rbp|rcjb|rcsn|rd|rdr|ren|ri/, /rjb|rm|rmdir|rmo|rni|rnp|rp|rsn|rsnp|rujb|rv|rvpa|rwmi|sajb|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls/, /sort|sp|spjb|spps|spsv|start|sujb|sv|swmi|tee|trcm|type|where|wjb|write/], {\n      prefix: '',\n      suffix: ''\n    });\n    var variableBuiltins = buildRegexp([/[$?^_]|Args|ConfirmPreference|ConsoleFileName|DebugPreference|Error|ErrorActionPreference|ErrorView|ExecutionContext/, /FormatEnumerationLimit|Home|Host|Input|MaximumAliasCount|MaximumDriveCount|MaximumErrorCount|MaximumFunctionCount/, /MaximumHistoryCount|MaximumVariableCount|MyInvocation|NestedPromptLevel|OutputEncoding|Pid|Profile|ProgressPreference/, /PSBoundParameters|PSCommandPath|PSCulture|PSDefaultParameterValues|PSEmailServer|PSHome|PSScriptRoot|PSSessionApplicationName/, /PSSessionConfigurationName|PSSessionOption|PSUICulture|PSVersionTable|Pwd|ShellId|StackTrace|VerbosePreference/, /WarningPreference|WhatIfPreference/, /Event|EventArgs|EventSubscriber|Sender/, /Matches|Ofs|ForEach|LastExitCode|PSCmdlet|PSItem|PSSenderInfo|This/, /true|false|null/], {\n      prefix: '\\\\$',\n      suffix: ''\n    });\n    var builtins = buildRegexp([symbolBuiltins, namedBuiltins, variableBuiltins], {\n      suffix: notCharacterOrDash\n    });\n    var grammar = {\n      keyword: keywords,\n      number: numbers,\n      operator: operators,\n      builtin: builtins,\n      punctuation: punctuation,\n      identifier: identifiers\n    }; // tokenizers\n\n    function tokenBase(stream, state) {\n      // Handle Comments\n      //var ch = stream.peek();\n      var parent = state.returnStack[state.returnStack.length - 1];\n\n      if (parent && parent.shouldReturnFrom(state)) {\n        state.tokenize = parent.tokenize;\n        state.returnStack.pop();\n        return state.tokenize(stream, state);\n      }\n\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      if (stream.eat('(')) {\n        state.bracketNesting += 1;\n        return 'punctuation';\n      }\n\n      if (stream.eat(')')) {\n        state.bracketNesting -= 1;\n        return 'punctuation';\n      }\n\n      for (var key in grammar) {\n        if (stream.match(grammar[key])) {\n          return key;\n        }\n      }\n\n      var ch = stream.next(); // single-quote string\n\n      if (ch === \"'\") {\n        return tokenSingleQuoteString(stream, state);\n      }\n\n      if (ch === '$') {\n        return tokenVariable(stream, state);\n      } // double-quote string\n\n\n      if (ch === '\"') {\n        return tokenDoubleQuoteString(stream, state);\n      }\n\n      if (ch === '<' && stream.eat('#')) {\n        state.tokenize = tokenComment;\n        return tokenComment(stream, state);\n      }\n\n      if (ch === '#') {\n        stream.skipToEnd();\n        return 'comment';\n      }\n\n      if (ch === '@') {\n        var quoteMatch = stream.eat(/[\"']/);\n\n        if (quoteMatch && stream.eol()) {\n          state.tokenize = tokenMultiString;\n          state.startQuote = quoteMatch[0];\n          return tokenMultiString(stream, state);\n        } else if (stream.eol()) {\n          return 'error';\n        } else if (stream.peek().match(/[({]/)) {\n          return 'punctuation';\n        } else if (stream.peek().match(varNames)) {\n          // splatted variable\n          return tokenVariable(stream, state);\n        }\n      }\n\n      return 'error';\n    }\n\n    function tokenSingleQuoteString(stream, state) {\n      var ch;\n\n      while ((ch = stream.peek()) != null) {\n        stream.next();\n\n        if (ch === \"'\" && !stream.eat(\"'\")) {\n          state.tokenize = tokenBase;\n          return 'string';\n        }\n      }\n\n      return 'error';\n    }\n\n    function tokenDoubleQuoteString(stream, state) {\n      var ch;\n\n      while ((ch = stream.peek()) != null) {\n        if (ch === '$') {\n          state.tokenize = tokenStringInterpolation;\n          return 'string';\n        }\n\n        stream.next();\n\n        if (ch === '`') {\n          stream.next();\n          continue;\n        }\n\n        if (ch === '\"' && !stream.eat('\"')) {\n          state.tokenize = tokenBase;\n          return 'string';\n        }\n      }\n\n      return 'error';\n    }\n\n    function tokenStringInterpolation(stream, state) {\n      return tokenInterpolation(stream, state, tokenDoubleQuoteString);\n    }\n\n    function tokenMultiStringReturn(stream, state) {\n      state.tokenize = tokenMultiString;\n      state.startQuote = '\"';\n      return tokenMultiString(stream, state);\n    }\n\n    function tokenHereStringInterpolation(stream, state) {\n      return tokenInterpolation(stream, state, tokenMultiStringReturn);\n    }\n\n    function tokenInterpolation(stream, state, parentTokenize) {\n      if (stream.match('$(')) {\n        var savedBracketNesting = state.bracketNesting;\n        state.returnStack.push({\n          /*jshint loopfunc:true */\n          shouldReturnFrom: function (state) {\n            return state.bracketNesting === savedBracketNesting;\n          },\n          tokenize: parentTokenize\n        });\n        state.tokenize = tokenBase;\n        state.bracketNesting += 1;\n        return 'punctuation';\n      } else {\n        stream.next();\n        state.returnStack.push({\n          shouldReturnFrom: function () {\n            return true;\n          },\n          tokenize: parentTokenize\n        });\n        state.tokenize = tokenVariable;\n        return state.tokenize(stream, state);\n      }\n    }\n\n    function tokenComment(stream, state) {\n      var maybeEnd = false,\n          ch;\n\n      while ((ch = stream.next()) != null) {\n        if (maybeEnd && ch == '>') {\n          state.tokenize = tokenBase;\n          break;\n        }\n\n        maybeEnd = ch === '#';\n      }\n\n      return 'comment';\n    }\n\n    function tokenVariable(stream, state) {\n      var ch = stream.peek();\n\n      if (stream.eat('{')) {\n        state.tokenize = tokenVariableWithBraces;\n        return tokenVariableWithBraces(stream, state);\n      } else if (ch != undefined && ch.match(varNames)) {\n        stream.eatWhile(varNames);\n        state.tokenize = tokenBase;\n        return 'variable-2';\n      } else {\n        state.tokenize = tokenBase;\n        return 'error';\n      }\n    }\n\n    function tokenVariableWithBraces(stream, state) {\n      var ch;\n\n      while ((ch = stream.next()) != null) {\n        if (ch === '}') {\n          state.tokenize = tokenBase;\n          break;\n        }\n      }\n\n      return 'variable-2';\n    }\n\n    function tokenMultiString(stream, state) {\n      var quote = state.startQuote;\n\n      if (stream.sol() && stream.match(new RegExp(quote + '@'))) {\n        state.tokenize = tokenBase;\n      } else if (quote === '\"') {\n        while (!stream.eol()) {\n          var ch = stream.peek();\n\n          if (ch === '$') {\n            state.tokenize = tokenHereStringInterpolation;\n            return 'string';\n          }\n\n          stream.next();\n\n          if (ch === '`') {\n            stream.next();\n          }\n        }\n      } else {\n        stream.skipToEnd();\n      }\n\n      return 'string';\n    }\n\n    var external = {\n      startState: function () {\n        return {\n          returnStack: [],\n          bracketNesting: 0,\n          tokenize: tokenBase\n        };\n      },\n      token: function (stream, state) {\n        return state.tokenize(stream, state);\n      },\n      blockCommentStart: '<#',\n      blockCommentEnd: '#>',\n      lineComment: '#',\n      fold: 'brace'\n    };\n    return external;\n  });\n  CodeMirror.defineMIME('application/x-powershell', 'powershell');\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw/node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/powershell/powershell.js"],"names":["mod","exports","module","require","define","amd","window","CodeMirror","defineMode","buildRegexp","patterns","options","prefix","undefined","suffix","i","length","RegExp","source","replace","join","notCharacterOrDash","varNames","keywords","punctuation","wordOperators","symbolOperators","operators","numbers","identifiers","symbolBuiltins","namedBuiltins","variableBuiltins","builtins","grammar","keyword","number","operator","builtin","identifier","tokenBase","stream","state","parent","returnStack","shouldReturnFrom","tokenize","pop","eatSpace","eat","bracketNesting","key","match","ch","next","tokenSingleQuoteString","tokenVariable","tokenDoubleQuoteString","tokenComment","skipToEnd","quoteMatch","eol","tokenMultiString","startQuote","peek","tokenStringInterpolation","tokenInterpolation","tokenMultiStringReturn","tokenHereStringInterpolation","parentTokenize","savedBracketNesting","push","maybeEnd","tokenVariableWithBraces","eatWhile","quote","sol","external","startState","token","blockCommentStart","blockCommentEnd","lineComment","fold","defineMIME"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  'use strict';\n  if (typeof exports == 'object' && typeof module == 'object') // CommonJS\n    mod(require('../../lib/codemirror'));\n  else if (typeof define == 'function' && define.amd) // AMD\n    define(['../../lib/codemirror'], mod);\n  else // Plain browser env\n    mod(window.CodeMirror);\n})(function(CodeMirror) {\n'use strict';\n\nCodeMirror.defineMode('powershell', function() {\n  function buildRegexp(patterns, options) {\n    options = options || {};\n    var prefix = options.prefix !== undefined ? options.prefix : '^';\n    var suffix = options.suffix !== undefined ? options.suffix : '\\\\b';\n\n    for (var i = 0; i < patterns.length; i++) {\n      if (patterns[i] instanceof RegExp) {\n        patterns[i] = patterns[i].source;\n      }\n      else {\n        patterns[i] = patterns[i].replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n      }\n    }\n\n    return new RegExp(prefix + '(' + patterns.join('|') + ')' + suffix, 'i');\n  }\n\n  var notCharacterOrDash = '(?=[^A-Za-z\\\\d\\\\-_]|$)';\n  var varNames = /[\\w\\-:]/\n  var keywords = buildRegexp([\n    /begin|break|catch|continue|data|default|do|dynamicparam/,\n    /else|elseif|end|exit|filter|finally|for|foreach|from|function|if|in/,\n    /param|process|return|switch|throw|trap|try|until|where|while/\n  ], { suffix: notCharacterOrDash });\n\n  var punctuation = /[\\[\\]{},;`\\\\\\.]|@[({]/;\n  var wordOperators = buildRegexp([\n    'f',\n    /b?not/,\n    /[ic]?split/, 'join',\n    /is(not)?/, 'as',\n    /[ic]?(eq|ne|[gl][te])/,\n    /[ic]?(not)?(like|match|contains)/,\n    /[ic]?replace/,\n    /b?(and|or|xor)/\n  ], { prefix: '-' });\n  var symbolOperators = /[+\\-*\\/%]=|\\+\\+|--|\\.\\.|[+\\-*&^%:=!|\\/]|<(?!#)|(?!#)>/;\n  var operators = buildRegexp([wordOperators, symbolOperators], { suffix: '' });\n\n  var numbers = /^((0x[\\da-f]+)|((\\d+\\.\\d+|\\d\\.|\\.\\d+|\\d+)(e[\\+\\-]?\\d+)?))[ld]?([kmgtp]b)?/i;\n\n  var identifiers = /^[A-Za-z\\_][A-Za-z\\-\\_\\d]*\\b/;\n\n  var symbolBuiltins = /[A-Z]:|%|\\?/i;\n  var namedBuiltins = buildRegexp([\n    /Add-(Computer|Content|History|Member|PSSnapin|Type)/,\n    /Checkpoint-Computer/,\n    /Clear-(Content|EventLog|History|Host|Item(Property)?|Variable)/,\n    /Compare-Object/,\n    /Complete-Transaction/,\n    /Connect-PSSession/,\n    /ConvertFrom-(Csv|Json|SecureString|StringData)/,\n    /Convert-Path/,\n    /ConvertTo-(Csv|Html|Json|SecureString|Xml)/,\n    /Copy-Item(Property)?/,\n    /Debug-Process/,\n    /Disable-(ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)/,\n    /Disconnect-PSSession/,\n    /Enable-(ComputerRestore|PSBreakpoint|PSRemoting|PSSessionConfiguration)/,\n    /(Enter|Exit)-PSSession/,\n    /Export-(Alias|Clixml|Console|Counter|Csv|FormatData|ModuleMember|PSSession)/,\n    /ForEach-Object/,\n    /Format-(Custom|List|Table|Wide)/,\n    new RegExp('Get-(Acl|Alias|AuthenticodeSignature|ChildItem|Command|ComputerRestorePoint|Content|ControlPanelItem|Counter|Credential'\n      + '|Culture|Date|Event|EventLog|EventSubscriber|ExecutionPolicy|FormatData|Help|History|Host|HotFix|Item|ItemProperty|Job'\n      + '|Location|Member|Module|PfxCertificate|Process|PSBreakpoint|PSCallStack|PSDrive|PSProvider|PSSession|PSSessionConfiguration'\n      + '|PSSnapin|Random|Service|TraceSource|Transaction|TypeData|UICulture|Unique|Variable|Verb|WinEvent|WmiObject)'),\n    /Group-Object/,\n    /Import-(Alias|Clixml|Counter|Csv|LocalizedData|Module|PSSession)/,\n    /ImportSystemModules/,\n    /Invoke-(Command|Expression|History|Item|RestMethod|WebRequest|WmiMethod)/,\n    /Join-Path/,\n    /Limit-EventLog/,\n    /Measure-(Command|Object)/,\n    /Move-Item(Property)?/,\n    new RegExp('New-(Alias|Event|EventLog|Item(Property)?|Module|ModuleManifest|Object|PSDrive|PSSession|PSSessionConfigurationFile'\n      + '|PSSessionOption|PSTransportOption|Service|TimeSpan|Variable|WebServiceProxy|WinEvent)'),\n    /Out-(Default|File|GridView|Host|Null|Printer|String)/,\n    /Pause/,\n    /(Pop|Push)-Location/,\n    /Read-Host/,\n    /Receive-(Job|PSSession)/,\n    /Register-(EngineEvent|ObjectEvent|PSSessionConfiguration|WmiEvent)/,\n    /Remove-(Computer|Event|EventLog|Item(Property)?|Job|Module|PSBreakpoint|PSDrive|PSSession|PSSnapin|TypeData|Variable|WmiObject)/,\n    /Rename-(Computer|Item(Property)?)/,\n    /Reset-ComputerMachinePassword/,\n    /Resolve-Path/,\n    /Restart-(Computer|Service)/,\n    /Restore-Computer/,\n    /Resume-(Job|Service)/,\n    /Save-Help/,\n    /Select-(Object|String|Xml)/,\n    /Send-MailMessage/,\n    new RegExp('Set-(Acl|Alias|AuthenticodeSignature|Content|Date|ExecutionPolicy|Item(Property)?|Location|PSBreakpoint|PSDebug' +\n               '|PSSessionConfiguration|Service|StrictMode|TraceSource|Variable|WmiInstance)'),\n    /Show-(Command|ControlPanelItem|EventLog)/,\n    /Sort-Object/,\n    /Split-Path/,\n    /Start-(Job|Process|Service|Sleep|Transaction|Transcript)/,\n    /Stop-(Computer|Job|Process|Service|Transcript)/,\n    /Suspend-(Job|Service)/,\n    /TabExpansion2/,\n    /Tee-Object/,\n    /Test-(ComputerSecureChannel|Connection|ModuleManifest|Path|PSSessionConfigurationFile)/,\n    /Trace-Command/,\n    /Unblock-File/,\n    /Undo-Transaction/,\n    /Unregister-(Event|PSSessionConfiguration)/,\n    /Update-(FormatData|Help|List|TypeData)/,\n    /Use-Transaction/,\n    /Wait-(Event|Job|Process)/,\n    /Where-Object/,\n    /Write-(Debug|Error|EventLog|Host|Output|Progress|Verbose|Warning)/,\n    /cd|help|mkdir|more|oss|prompt/,\n    /ac|asnp|cat|cd|chdir|clc|clear|clhy|cli|clp|cls|clv|cnsn|compare|copy|cp|cpi|cpp|cvpa|dbp|del|diff|dir|dnsn|ebp/,\n    /echo|epal|epcsv|epsn|erase|etsn|exsn|fc|fl|foreach|ft|fw|gal|gbp|gc|gci|gcm|gcs|gdr|ghy|gi|gjb|gl|gm|gmo|gp|gps/,\n    /group|gsn|gsnp|gsv|gu|gv|gwmi|h|history|icm|iex|ihy|ii|ipal|ipcsv|ipmo|ipsn|irm|ise|iwmi|iwr|kill|lp|ls|man|md/,\n    /measure|mi|mount|move|mp|mv|nal|ndr|ni|nmo|npssc|nsn|nv|ogv|oh|popd|ps|pushd|pwd|r|rbp|rcjb|rcsn|rd|rdr|ren|ri/,\n    /rjb|rm|rmdir|rmo|rni|rnp|rp|rsn|rsnp|rujb|rv|rvpa|rwmi|sajb|sal|saps|sasv|sbp|sc|select|set|shcm|si|sl|sleep|sls/,\n    /sort|sp|spjb|spps|spsv|start|sujb|sv|swmi|tee|trcm|type|where|wjb|write/\n  ], { prefix: '', suffix: '' });\n  var variableBuiltins = buildRegexp([\n    /[$?^_]|Args|ConfirmPreference|ConsoleFileName|DebugPreference|Error|ErrorActionPreference|ErrorView|ExecutionContext/,\n    /FormatEnumerationLimit|Home|Host|Input|MaximumAliasCount|MaximumDriveCount|MaximumErrorCount|MaximumFunctionCount/,\n    /MaximumHistoryCount|MaximumVariableCount|MyInvocation|NestedPromptLevel|OutputEncoding|Pid|Profile|ProgressPreference/,\n    /PSBoundParameters|PSCommandPath|PSCulture|PSDefaultParameterValues|PSEmailServer|PSHome|PSScriptRoot|PSSessionApplicationName/,\n    /PSSessionConfigurationName|PSSessionOption|PSUICulture|PSVersionTable|Pwd|ShellId|StackTrace|VerbosePreference/,\n    /WarningPreference|WhatIfPreference/,\n\n    /Event|EventArgs|EventSubscriber|Sender/,\n    /Matches|Ofs|ForEach|LastExitCode|PSCmdlet|PSItem|PSSenderInfo|This/,\n    /true|false|null/\n  ], { prefix: '\\\\$', suffix: '' });\n\n  var builtins = buildRegexp([symbolBuiltins, namedBuiltins, variableBuiltins], { suffix: notCharacterOrDash });\n\n  var grammar = {\n    keyword: keywords,\n    number: numbers,\n    operator: operators,\n    builtin: builtins,\n    punctuation: punctuation,\n    identifier: identifiers\n  };\n\n  // tokenizers\n  function tokenBase(stream, state) {\n    // Handle Comments\n    //var ch = stream.peek();\n\n    var parent = state.returnStack[state.returnStack.length - 1];\n    if (parent && parent.shouldReturnFrom(state)) {\n      state.tokenize = parent.tokenize;\n      state.returnStack.pop();\n      return state.tokenize(stream, state);\n    }\n\n    if (stream.eatSpace()) {\n      return null;\n    }\n\n    if (stream.eat('(')) {\n      state.bracketNesting += 1;\n      return 'punctuation';\n    }\n\n    if (stream.eat(')')) {\n      state.bracketNesting -= 1;\n      return 'punctuation';\n    }\n\n    for (var key in grammar) {\n      if (stream.match(grammar[key])) {\n        return key;\n      }\n    }\n\n    var ch = stream.next();\n\n    // single-quote string\n    if (ch === \"'\") {\n      return tokenSingleQuoteString(stream, state);\n    }\n\n    if (ch === '$') {\n      return tokenVariable(stream, state);\n    }\n\n    // double-quote string\n    if (ch === '\"') {\n      return tokenDoubleQuoteString(stream, state);\n    }\n\n    if (ch === '<' && stream.eat('#')) {\n      state.tokenize = tokenComment;\n      return tokenComment(stream, state);\n    }\n\n    if (ch === '#') {\n      stream.skipToEnd();\n      return 'comment';\n    }\n\n    if (ch === '@') {\n      var quoteMatch = stream.eat(/[\"']/);\n      if (quoteMatch && stream.eol()) {\n        state.tokenize = tokenMultiString;\n        state.startQuote = quoteMatch[0];\n        return tokenMultiString(stream, state);\n      } else if (stream.eol()) {\n        return 'error';\n      } else if (stream.peek().match(/[({]/)) {\n        return 'punctuation';\n      } else if (stream.peek().match(varNames)) {\n        // splatted variable\n        return tokenVariable(stream, state);\n      }\n    }\n    return 'error';\n  }\n\n  function tokenSingleQuoteString(stream, state) {\n    var ch;\n    while ((ch = stream.peek()) != null) {\n      stream.next();\n\n      if (ch === \"'\" && !stream.eat(\"'\")) {\n        state.tokenize = tokenBase;\n        return 'string';\n      }\n    }\n\n    return 'error';\n  }\n\n  function tokenDoubleQuoteString(stream, state) {\n    var ch;\n    while ((ch = stream.peek()) != null) {\n      if (ch === '$') {\n        state.tokenize = tokenStringInterpolation;\n        return 'string';\n      }\n\n      stream.next();\n      if (ch === '`') {\n        stream.next();\n        continue;\n      }\n\n      if (ch === '\"' && !stream.eat('\"')) {\n        state.tokenize = tokenBase;\n        return 'string';\n      }\n    }\n\n    return 'error';\n  }\n\n  function tokenStringInterpolation(stream, state) {\n    return tokenInterpolation(stream, state, tokenDoubleQuoteString);\n  }\n\n  function tokenMultiStringReturn(stream, state) {\n    state.tokenize = tokenMultiString;\n    state.startQuote = '\"'\n    return tokenMultiString(stream, state);\n  }\n\n  function tokenHereStringInterpolation(stream, state) {\n    return tokenInterpolation(stream, state, tokenMultiStringReturn);\n  }\n\n  function tokenInterpolation(stream, state, parentTokenize) {\n    if (stream.match('$(')) {\n      var savedBracketNesting = state.bracketNesting;\n      state.returnStack.push({\n        /*jshint loopfunc:true */\n        shouldReturnFrom: function(state) {\n          return state.bracketNesting === savedBracketNesting;\n        },\n        tokenize: parentTokenize\n      });\n      state.tokenize = tokenBase;\n      state.bracketNesting += 1;\n      return 'punctuation';\n    } else {\n      stream.next();\n      state.returnStack.push({\n        shouldReturnFrom: function() { return true; },\n        tokenize: parentTokenize\n      });\n      state.tokenize = tokenVariable;\n      return state.tokenize(stream, state);\n    }\n  }\n\n  function tokenComment(stream, state) {\n    var maybeEnd = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (maybeEnd && ch == '>') {\n          state.tokenize = tokenBase;\n          break;\n      }\n      maybeEnd = (ch === '#');\n    }\n    return 'comment';\n  }\n\n  function tokenVariable(stream, state) {\n    var ch = stream.peek();\n    if (stream.eat('{')) {\n      state.tokenize = tokenVariableWithBraces;\n      return tokenVariableWithBraces(stream, state);\n    } else if (ch != undefined && ch.match(varNames)) {\n      stream.eatWhile(varNames);\n      state.tokenize = tokenBase;\n      return 'variable-2';\n    } else {\n      state.tokenize = tokenBase;\n      return 'error';\n    }\n  }\n\n  function tokenVariableWithBraces(stream, state) {\n    var ch;\n    while ((ch = stream.next()) != null) {\n      if (ch === '}') {\n        state.tokenize = tokenBase;\n        break;\n      }\n    }\n    return 'variable-2';\n  }\n\n  function tokenMultiString(stream, state) {\n    var quote = state.startQuote;\n    if (stream.sol() && stream.match(new RegExp(quote + '@'))) {\n      state.tokenize = tokenBase;\n    }\n    else if (quote === '\"') {\n      while (!stream.eol()) {\n        var ch = stream.peek();\n        if (ch === '$') {\n          state.tokenize = tokenHereStringInterpolation;\n          return 'string';\n        }\n\n        stream.next();\n        if (ch === '`') {\n          stream.next();\n        }\n      }\n    }\n    else {\n      stream.skipToEnd();\n    }\n\n    return 'string';\n  }\n\n  var external = {\n    startState: function() {\n      return {\n        returnStack: [],\n        bracketNesting: 0,\n        tokenize: tokenBase\n      };\n    },\n\n    token: function(stream, state) {\n      return state.tokenize(stream, state);\n    },\n\n    blockCommentStart: '<#',\n    blockCommentEnd: '#>',\n    lineComment: '#',\n    fold: 'brace'\n  };\n  return external;\n});\n\nCodeMirror.defineMIME('application/x-powershell', 'powershell');\n});\n"]},"metadata":{},"sourceType":"script"}