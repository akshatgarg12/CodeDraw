{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"gas\", function (_config, parserConfig) {\n    'use strict'; // If an architecture is specified, its initialization function may\n    // populate this array with custom parsing functions which will be\n    // tried in the event that the standard functions do not find a match.\n\n    var custom = []; // The symbol used to start a line comment changes based on the target\n    // architecture.\n    // If no architecture is pased in \"parserConfig\" then only multiline\n    // comments will have syntax support.\n\n    var lineCommentStartSymbol = \"\"; // These directives are architecture independent.\n    // Machine specific directives should go in their respective\n    // architecture initialization function.\n    // Reference:\n    // http://sourceware.org/binutils/docs/as/Pseudo-Ops.html#Pseudo-Ops\n\n    var directives = {\n      \".abort\": \"builtin\",\n      \".align\": \"builtin\",\n      \".altmacro\": \"builtin\",\n      \".ascii\": \"builtin\",\n      \".asciz\": \"builtin\",\n      \".balign\": \"builtin\",\n      \".balignw\": \"builtin\",\n      \".balignl\": \"builtin\",\n      \".bundle_align_mode\": \"builtin\",\n      \".bundle_lock\": \"builtin\",\n      \".bundle_unlock\": \"builtin\",\n      \".byte\": \"builtin\",\n      \".cfi_startproc\": \"builtin\",\n      \".comm\": \"builtin\",\n      \".data\": \"builtin\",\n      \".def\": \"builtin\",\n      \".desc\": \"builtin\",\n      \".dim\": \"builtin\",\n      \".double\": \"builtin\",\n      \".eject\": \"builtin\",\n      \".else\": \"builtin\",\n      \".elseif\": \"builtin\",\n      \".end\": \"builtin\",\n      \".endef\": \"builtin\",\n      \".endfunc\": \"builtin\",\n      \".endif\": \"builtin\",\n      \".equ\": \"builtin\",\n      \".equiv\": \"builtin\",\n      \".eqv\": \"builtin\",\n      \".err\": \"builtin\",\n      \".error\": \"builtin\",\n      \".exitm\": \"builtin\",\n      \".extern\": \"builtin\",\n      \".fail\": \"builtin\",\n      \".file\": \"builtin\",\n      \".fill\": \"builtin\",\n      \".float\": \"builtin\",\n      \".func\": \"builtin\",\n      \".global\": \"builtin\",\n      \".gnu_attribute\": \"builtin\",\n      \".hidden\": \"builtin\",\n      \".hword\": \"builtin\",\n      \".ident\": \"builtin\",\n      \".if\": \"builtin\",\n      \".incbin\": \"builtin\",\n      \".include\": \"builtin\",\n      \".int\": \"builtin\",\n      \".internal\": \"builtin\",\n      \".irp\": \"builtin\",\n      \".irpc\": \"builtin\",\n      \".lcomm\": \"builtin\",\n      \".lflags\": \"builtin\",\n      \".line\": \"builtin\",\n      \".linkonce\": \"builtin\",\n      \".list\": \"builtin\",\n      \".ln\": \"builtin\",\n      \".loc\": \"builtin\",\n      \".loc_mark_labels\": \"builtin\",\n      \".local\": \"builtin\",\n      \".long\": \"builtin\",\n      \".macro\": \"builtin\",\n      \".mri\": \"builtin\",\n      \".noaltmacro\": \"builtin\",\n      \".nolist\": \"builtin\",\n      \".octa\": \"builtin\",\n      \".offset\": \"builtin\",\n      \".org\": \"builtin\",\n      \".p2align\": \"builtin\",\n      \".popsection\": \"builtin\",\n      \".previous\": \"builtin\",\n      \".print\": \"builtin\",\n      \".protected\": \"builtin\",\n      \".psize\": \"builtin\",\n      \".purgem\": \"builtin\",\n      \".pushsection\": \"builtin\",\n      \".quad\": \"builtin\",\n      \".reloc\": \"builtin\",\n      \".rept\": \"builtin\",\n      \".sbttl\": \"builtin\",\n      \".scl\": \"builtin\",\n      \".section\": \"builtin\",\n      \".set\": \"builtin\",\n      \".short\": \"builtin\",\n      \".single\": \"builtin\",\n      \".size\": \"builtin\",\n      \".skip\": \"builtin\",\n      \".sleb128\": \"builtin\",\n      \".space\": \"builtin\",\n      \".stab\": \"builtin\",\n      \".string\": \"builtin\",\n      \".struct\": \"builtin\",\n      \".subsection\": \"builtin\",\n      \".symver\": \"builtin\",\n      \".tag\": \"builtin\",\n      \".text\": \"builtin\",\n      \".title\": \"builtin\",\n      \".type\": \"builtin\",\n      \".uleb128\": \"builtin\",\n      \".val\": \"builtin\",\n      \".version\": \"builtin\",\n      \".vtable_entry\": \"builtin\",\n      \".vtable_inherit\": \"builtin\",\n      \".warning\": \"builtin\",\n      \".weak\": \"builtin\",\n      \".weakref\": \"builtin\",\n      \".word\": \"builtin\"\n    };\n    var registers = {};\n\n    function x86(_parserConfig) {\n      lineCommentStartSymbol = \"#\";\n      registers.ax = \"variable\";\n      registers.eax = \"variable-2\";\n      registers.rax = \"variable-3\";\n      registers.bx = \"variable\";\n      registers.ebx = \"variable-2\";\n      registers.rbx = \"variable-3\";\n      registers.cx = \"variable\";\n      registers.ecx = \"variable-2\";\n      registers.rcx = \"variable-3\";\n      registers.dx = \"variable\";\n      registers.edx = \"variable-2\";\n      registers.rdx = \"variable-3\";\n      registers.si = \"variable\";\n      registers.esi = \"variable-2\";\n      registers.rsi = \"variable-3\";\n      registers.di = \"variable\";\n      registers.edi = \"variable-2\";\n      registers.rdi = \"variable-3\";\n      registers.sp = \"variable\";\n      registers.esp = \"variable-2\";\n      registers.rsp = \"variable-3\";\n      registers.bp = \"variable\";\n      registers.ebp = \"variable-2\";\n      registers.rbp = \"variable-3\";\n      registers.ip = \"variable\";\n      registers.eip = \"variable-2\";\n      registers.rip = \"variable-3\";\n      registers.cs = \"keyword\";\n      registers.ds = \"keyword\";\n      registers.ss = \"keyword\";\n      registers.es = \"keyword\";\n      registers.fs = \"keyword\";\n      registers.gs = \"keyword\";\n    }\n\n    function armv6(_parserConfig) {\n      // Reference:\n      // http://infocenter.arm.com/help/topic/com.arm.doc.qrc0001l/QRC0001_UAL.pdf\n      // http://infocenter.arm.com/help/topic/com.arm.doc.ddi0301h/DDI0301H_arm1176jzfs_r0p7_trm.pdf\n      lineCommentStartSymbol = \"@\";\n      directives.syntax = \"builtin\";\n      registers.r0 = \"variable\";\n      registers.r1 = \"variable\";\n      registers.r2 = \"variable\";\n      registers.r3 = \"variable\";\n      registers.r4 = \"variable\";\n      registers.r5 = \"variable\";\n      registers.r6 = \"variable\";\n      registers.r7 = \"variable\";\n      registers.r8 = \"variable\";\n      registers.r9 = \"variable\";\n      registers.r10 = \"variable\";\n      registers.r11 = \"variable\";\n      registers.r12 = \"variable\";\n      registers.sp = \"variable-2\";\n      registers.lr = \"variable-2\";\n      registers.pc = \"variable-2\";\n      registers.r13 = registers.sp;\n      registers.r14 = registers.lr;\n      registers.r15 = registers.pc;\n      custom.push(function (ch, stream) {\n        if (ch === '#') {\n          stream.eatWhile(/\\w/);\n          return \"number\";\n        }\n      });\n    }\n\n    var arch = (parserConfig.architecture || \"x86\").toLowerCase();\n\n    if (arch === \"x86\") {\n      x86(parserConfig);\n    } else if (arch === \"arm\" || arch === \"armv6\") {\n      armv6(parserConfig);\n    }\n\n    function nextUntilUnescaped(stream, end) {\n      var escaped = false,\n          next;\n\n      while ((next = stream.next()) != null) {\n        if (next === end && !escaped) {\n          return false;\n        }\n\n        escaped = !escaped && next === \"\\\\\";\n      }\n\n      return escaped;\n    }\n\n    function clikeComment(stream, state) {\n      var maybeEnd = false,\n          ch;\n\n      while ((ch = stream.next()) != null) {\n        if (ch === \"/\" && maybeEnd) {\n          state.tokenize = null;\n          break;\n        }\n\n        maybeEnd = ch === \"*\";\n      }\n\n      return \"comment\";\n    }\n\n    return {\n      startState: function () {\n        return {\n          tokenize: null\n        };\n      },\n      token: function (stream, state) {\n        if (state.tokenize) {\n          return state.tokenize(stream, state);\n        }\n\n        if (stream.eatSpace()) {\n          return null;\n        }\n\n        var style,\n            cur,\n            ch = stream.next();\n\n        if (ch === \"/\") {\n          if (stream.eat(\"*\")) {\n            state.tokenize = clikeComment;\n            return clikeComment(stream, state);\n          }\n        }\n\n        if (ch === lineCommentStartSymbol) {\n          stream.skipToEnd();\n          return \"comment\";\n        }\n\n        if (ch === '\"') {\n          nextUntilUnescaped(stream, '\"');\n          return \"string\";\n        }\n\n        if (ch === '.') {\n          stream.eatWhile(/\\w/);\n          cur = stream.current().toLowerCase();\n          style = directives[cur];\n          return style || null;\n        }\n\n        if (ch === '=') {\n          stream.eatWhile(/\\w/);\n          return \"tag\";\n        }\n\n        if (ch === '{') {\n          return \"braket\";\n        }\n\n        if (ch === '}') {\n          return \"braket\";\n        }\n\n        if (/\\d/.test(ch)) {\n          if (ch === \"0\" && stream.eat(\"x\")) {\n            stream.eatWhile(/[0-9a-fA-F]/);\n            return \"number\";\n          }\n\n          stream.eatWhile(/\\d/);\n          return \"number\";\n        }\n\n        if (/\\w/.test(ch)) {\n          stream.eatWhile(/\\w/);\n\n          if (stream.eat(\":\")) {\n            return 'tag';\n          }\n\n          cur = stream.current().toLowerCase();\n          style = registers[cur];\n          return style || null;\n        }\n\n        for (var i = 0; i < custom.length; i++) {\n          style = custom[i](ch, stream, state);\n\n          if (style) {\n            return style;\n          }\n        }\n      },\n      lineComment: lineCommentStartSymbol,\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\"\n    };\n  });\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw/node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/gas/gas.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","_config","parserConfig","custom","lineCommentStartSymbol","directives","registers","x86","_parserConfig","ax","eax","rax","bx","ebx","rbx","cx","ecx","rcx","dx","edx","rdx","si","esi","rsi","di","edi","rdi","sp","esp","rsp","bp","ebp","rbp","ip","eip","rip","cs","ds","ss","es","fs","gs","armv6","syntax","r0","r1","r2","r3","r4","r5","r6","r7","r8","r9","r10","r11","r12","lr","pc","r13","r14","r15","push","ch","stream","eatWhile","arch","architecture","toLowerCase","nextUntilUnescaped","end","escaped","next","clikeComment","state","maybeEnd","tokenize","startState","token","eatSpace","style","cur","eat","skipToEnd","current","test","i","length","lineComment","blockCommentStart","blockCommentEnd"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"gas\", function(_config, parserConfig) {\n  'use strict';\n\n  // If an architecture is specified, its initialization function may\n  // populate this array with custom parsing functions which will be\n  // tried in the event that the standard functions do not find a match.\n  var custom = [];\n\n  // The symbol used to start a line comment changes based on the target\n  // architecture.\n  // If no architecture is pased in \"parserConfig\" then only multiline\n  // comments will have syntax support.\n  var lineCommentStartSymbol = \"\";\n\n  // These directives are architecture independent.\n  // Machine specific directives should go in their respective\n  // architecture initialization function.\n  // Reference:\n  // http://sourceware.org/binutils/docs/as/Pseudo-Ops.html#Pseudo-Ops\n  var directives = {\n    \".abort\" : \"builtin\",\n    \".align\" : \"builtin\",\n    \".altmacro\" : \"builtin\",\n    \".ascii\" : \"builtin\",\n    \".asciz\" : \"builtin\",\n    \".balign\" : \"builtin\",\n    \".balignw\" : \"builtin\",\n    \".balignl\" : \"builtin\",\n    \".bundle_align_mode\" : \"builtin\",\n    \".bundle_lock\" : \"builtin\",\n    \".bundle_unlock\" : \"builtin\",\n    \".byte\" : \"builtin\",\n    \".cfi_startproc\" : \"builtin\",\n    \".comm\" : \"builtin\",\n    \".data\" : \"builtin\",\n    \".def\" : \"builtin\",\n    \".desc\" : \"builtin\",\n    \".dim\" : \"builtin\",\n    \".double\" : \"builtin\",\n    \".eject\" : \"builtin\",\n    \".else\" : \"builtin\",\n    \".elseif\" : \"builtin\",\n    \".end\" : \"builtin\",\n    \".endef\" : \"builtin\",\n    \".endfunc\" : \"builtin\",\n    \".endif\" : \"builtin\",\n    \".equ\" : \"builtin\",\n    \".equiv\" : \"builtin\",\n    \".eqv\" : \"builtin\",\n    \".err\" : \"builtin\",\n    \".error\" : \"builtin\",\n    \".exitm\" : \"builtin\",\n    \".extern\" : \"builtin\",\n    \".fail\" : \"builtin\",\n    \".file\" : \"builtin\",\n    \".fill\" : \"builtin\",\n    \".float\" : \"builtin\",\n    \".func\" : \"builtin\",\n    \".global\" : \"builtin\",\n    \".gnu_attribute\" : \"builtin\",\n    \".hidden\" : \"builtin\",\n    \".hword\" : \"builtin\",\n    \".ident\" : \"builtin\",\n    \".if\" : \"builtin\",\n    \".incbin\" : \"builtin\",\n    \".include\" : \"builtin\",\n    \".int\" : \"builtin\",\n    \".internal\" : \"builtin\",\n    \".irp\" : \"builtin\",\n    \".irpc\" : \"builtin\",\n    \".lcomm\" : \"builtin\",\n    \".lflags\" : \"builtin\",\n    \".line\" : \"builtin\",\n    \".linkonce\" : \"builtin\",\n    \".list\" : \"builtin\",\n    \".ln\" : \"builtin\",\n    \".loc\" : \"builtin\",\n    \".loc_mark_labels\" : \"builtin\",\n    \".local\" : \"builtin\",\n    \".long\" : \"builtin\",\n    \".macro\" : \"builtin\",\n    \".mri\" : \"builtin\",\n    \".noaltmacro\" : \"builtin\",\n    \".nolist\" : \"builtin\",\n    \".octa\" : \"builtin\",\n    \".offset\" : \"builtin\",\n    \".org\" : \"builtin\",\n    \".p2align\" : \"builtin\",\n    \".popsection\" : \"builtin\",\n    \".previous\" : \"builtin\",\n    \".print\" : \"builtin\",\n    \".protected\" : \"builtin\",\n    \".psize\" : \"builtin\",\n    \".purgem\" : \"builtin\",\n    \".pushsection\" : \"builtin\",\n    \".quad\" : \"builtin\",\n    \".reloc\" : \"builtin\",\n    \".rept\" : \"builtin\",\n    \".sbttl\" : \"builtin\",\n    \".scl\" : \"builtin\",\n    \".section\" : \"builtin\",\n    \".set\" : \"builtin\",\n    \".short\" : \"builtin\",\n    \".single\" : \"builtin\",\n    \".size\" : \"builtin\",\n    \".skip\" : \"builtin\",\n    \".sleb128\" : \"builtin\",\n    \".space\" : \"builtin\",\n    \".stab\" : \"builtin\",\n    \".string\" : \"builtin\",\n    \".struct\" : \"builtin\",\n    \".subsection\" : \"builtin\",\n    \".symver\" : \"builtin\",\n    \".tag\" : \"builtin\",\n    \".text\" : \"builtin\",\n    \".title\" : \"builtin\",\n    \".type\" : \"builtin\",\n    \".uleb128\" : \"builtin\",\n    \".val\" : \"builtin\",\n    \".version\" : \"builtin\",\n    \".vtable_entry\" : \"builtin\",\n    \".vtable_inherit\" : \"builtin\",\n    \".warning\" : \"builtin\",\n    \".weak\" : \"builtin\",\n    \".weakref\" : \"builtin\",\n    \".word\" : \"builtin\"\n  };\n\n  var registers = {};\n\n  function x86(_parserConfig) {\n    lineCommentStartSymbol = \"#\";\n\n    registers.ax  = \"variable\";\n    registers.eax = \"variable-2\";\n    registers.rax = \"variable-3\";\n\n    registers.bx  = \"variable\";\n    registers.ebx = \"variable-2\";\n    registers.rbx = \"variable-3\";\n\n    registers.cx  = \"variable\";\n    registers.ecx = \"variable-2\";\n    registers.rcx = \"variable-3\";\n\n    registers.dx  = \"variable\";\n    registers.edx = \"variable-2\";\n    registers.rdx = \"variable-3\";\n\n    registers.si  = \"variable\";\n    registers.esi = \"variable-2\";\n    registers.rsi = \"variable-3\";\n\n    registers.di  = \"variable\";\n    registers.edi = \"variable-2\";\n    registers.rdi = \"variable-3\";\n\n    registers.sp  = \"variable\";\n    registers.esp = \"variable-2\";\n    registers.rsp = \"variable-3\";\n\n    registers.bp  = \"variable\";\n    registers.ebp = \"variable-2\";\n    registers.rbp = \"variable-3\";\n\n    registers.ip  = \"variable\";\n    registers.eip = \"variable-2\";\n    registers.rip = \"variable-3\";\n\n    registers.cs  = \"keyword\";\n    registers.ds  = \"keyword\";\n    registers.ss  = \"keyword\";\n    registers.es  = \"keyword\";\n    registers.fs  = \"keyword\";\n    registers.gs  = \"keyword\";\n  }\n\n  function armv6(_parserConfig) {\n    // Reference:\n    // http://infocenter.arm.com/help/topic/com.arm.doc.qrc0001l/QRC0001_UAL.pdf\n    // http://infocenter.arm.com/help/topic/com.arm.doc.ddi0301h/DDI0301H_arm1176jzfs_r0p7_trm.pdf\n    lineCommentStartSymbol = \"@\";\n    directives.syntax = \"builtin\";\n\n    registers.r0  = \"variable\";\n    registers.r1  = \"variable\";\n    registers.r2  = \"variable\";\n    registers.r3  = \"variable\";\n    registers.r4  = \"variable\";\n    registers.r5  = \"variable\";\n    registers.r6  = \"variable\";\n    registers.r7  = \"variable\";\n    registers.r8  = \"variable\";\n    registers.r9  = \"variable\";\n    registers.r10 = \"variable\";\n    registers.r11 = \"variable\";\n    registers.r12 = \"variable\";\n\n    registers.sp  = \"variable-2\";\n    registers.lr  = \"variable-2\";\n    registers.pc  = \"variable-2\";\n    registers.r13 = registers.sp;\n    registers.r14 = registers.lr;\n    registers.r15 = registers.pc;\n\n    custom.push(function(ch, stream) {\n      if (ch === '#') {\n        stream.eatWhile(/\\w/);\n        return \"number\";\n      }\n    });\n  }\n\n  var arch = (parserConfig.architecture || \"x86\").toLowerCase();\n  if (arch === \"x86\") {\n    x86(parserConfig);\n  } else if (arch === \"arm\" || arch === \"armv6\") {\n    armv6(parserConfig);\n  }\n\n  function nextUntilUnescaped(stream, end) {\n    var escaped = false, next;\n    while ((next = stream.next()) != null) {\n      if (next === end && !escaped) {\n        return false;\n      }\n      escaped = !escaped && next === \"\\\\\";\n    }\n    return escaped;\n  }\n\n  function clikeComment(stream, state) {\n    var maybeEnd = false, ch;\n    while ((ch = stream.next()) != null) {\n      if (ch === \"/\" && maybeEnd) {\n        state.tokenize = null;\n        break;\n      }\n      maybeEnd = (ch === \"*\");\n    }\n    return \"comment\";\n  }\n\n  return {\n    startState: function() {\n      return {\n        tokenize: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (state.tokenize) {\n        return state.tokenize(stream, state);\n      }\n\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      var style, cur, ch = stream.next();\n\n      if (ch === \"/\") {\n        if (stream.eat(\"*\")) {\n          state.tokenize = clikeComment;\n          return clikeComment(stream, state);\n        }\n      }\n\n      if (ch === lineCommentStartSymbol) {\n        stream.skipToEnd();\n        return \"comment\";\n      }\n\n      if (ch === '\"') {\n        nextUntilUnescaped(stream, '\"');\n        return \"string\";\n      }\n\n      if (ch === '.') {\n        stream.eatWhile(/\\w/);\n        cur = stream.current().toLowerCase();\n        style = directives[cur];\n        return style || null;\n      }\n\n      if (ch === '=') {\n        stream.eatWhile(/\\w/);\n        return \"tag\";\n      }\n\n      if (ch === '{') {\n        return \"braket\";\n      }\n\n      if (ch === '}') {\n        return \"braket\";\n      }\n\n      if (/\\d/.test(ch)) {\n        if (ch === \"0\" && stream.eat(\"x\")) {\n          stream.eatWhile(/[0-9a-fA-F]/);\n          return \"number\";\n        }\n        stream.eatWhile(/\\d/);\n        return \"number\";\n      }\n\n      if (/\\w/.test(ch)) {\n        stream.eatWhile(/\\w/);\n        if (stream.eat(\":\")) {\n          return 'tag';\n        }\n        cur = stream.current().toLowerCase();\n        style = registers[cur];\n        return style || null;\n      }\n\n      for (var i = 0; i < custom.length; i++) {\n        style = custom[i](ch, stream, state);\n        if (style) {\n          return style;\n        }\n      }\n    },\n\n    lineComment: lineCommentStartSymbol,\n    blockCommentStart: \"/*\",\n    blockCommentEnd: \"*/\"\n  };\n});\n\n});\n"]},"metadata":{},"sourceType":"script"}