{"version":3,"sources":["../node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/soy/soy.js","../node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/xml/xml.js","../node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/htmlmixed/htmlmixed.js"],"names":["CodeMirror","paramData","noEndTag","soyState","tags","variableScope","reduceIndent","indentingTags","Object","keys","filter","tag","defineMode","config","textMode","getMode","modes","html","name","multilineTagIndentFactor","multilineTagIndentPastTag","attributes","text","uri","trusted_resource_uri","css","js","statementIndent","indentUnit","last","array","length","tokenUntil","stream","state","untilRegExp","sol","indent","eat","oldString","string","match","exec","substr","pos","index","result","hideFirstChars","localState","localStates","mode","token","prepend","list","element","next","popcontext","context","scope","variables","previousContext","ref","loose","contains","Context","this","kind","expression","push","lookupVariables","quoteKind","test","startState","scopes","copyState","concat","map","pop","skipToEnd","paramRe","current","peekChar","peek","indexOf","tagName","endTag","substring","selfClosed","prevTag","indentingTag","tagError","textAfter","line","top","Pass","innerMode","electricInput","lineComment","blockCommentStart","blockCommentEnd","blockCommentContinue","useInnerComments","fold","registerHelper","defineMIME","mod","require","htmlConfig","autoSelfClosers","implicitlyClosed","contextGrabbers","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","editorConf","config_","type","setStyle","defaults","htmlMode","prop","inText","chain","parser","tokenize","ch","inBlock","eatWhile","doctype","depth","inTag","baseState","tagStart","quote","closure","eol","isInAttribute","inAttribute","stringStartCol","column","style","terminator","startOfLine","prev","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","baseIndent","indentation","eatSpace","fullLine","alignCDATA","tagAfter","grabbers","configuration","helperType","skipAttribute","xmlCurrentTag","close","xmlCurrentContext","cx","reverse","mimeModes","defaultTags","script","attrRegexpCache","getAttrValue","attr","regexp","RegExp","getAttrRegexp","getTagRegexp","anchored","addTags","from","to","dest","source","i","unshift","parserConfig","configTags","configScript","scriptTypes","matches","htmlState","toLowerCase","modeSpec","tagInfo","tagText","spec","findMatchingMode","endTagA","localMode","pat","cur","search","backUp","maybeBackup","local"],"mappings":"kGAUG,SAASA,GACV,aAEA,IAAIC,EAAY,CAAEC,UAAU,EAAMC,SAAU,aACxCC,EAAO,CACT,MAAS,CAAEF,UAAU,GACrB,WAAc,CAAEA,UAAU,GAC1B,UAAa,CAAEA,UAAU,EAAMC,SAAU,iBACzC,SAAUF,EACV,UAAWA,EACX,UAAWA,EACX,WAAYA,EACZ,SAAUA,EACV,SAAY,CAAEE,SAAU,YAAaE,eAAe,GACpD,QAAW,GACX,IAAO,GACP,YAAe,CAAEH,UAAU,EAAMI,cAAc,GAC/C,OAAU,GACV,OAAU,GACV,IAAO,CAAEH,SAAU,WACnB,GAAM,GACN,OAAU,CAAED,UAAU,EAAMI,cAAc,GAC1C,KAAQ,CAAEJ,UAAU,EAAMI,cAAc,GACxC,OAAU,GACV,KAAQ,CAAEJ,UAAU,EAAMI,cAAc,GACxC,QAAW,CAAEJ,UAAU,EAAMI,cAAc,GAC3C,QAAW,CAAED,eAAe,EAAMF,SAAU,YAC5C,QAAW,CAAED,UAAU,EAAMI,cAAc,GAC3C,IAAO,CAAED,eAAe,EAAMF,SAAU,YACxC,KAAQ,CAAEA,SAAU,aACpB,MAAS,CAAEA,SAAU,aACrB,MAAS,CAAED,UAAU,GACrB,YAAe,CAAEC,SAAU,YAAaE,eAAe,GACvD,QAAW,CAAEF,SAAU,aACvB,IAAO,GACP,QAAW,CAAEE,eAAe,IAG1BE,EAAgBC,OAAOC,KAAKL,GAAMM,QAAO,SAASC,GACpD,OAAQP,EAAKO,GAAKT,UAAYE,EAAKO,GAAKL,gBAG1CN,EAAWY,WAAW,OAAO,SAASC,GACpC,IAAIC,EAAWd,EAAWe,QAAQF,EAAQ,cACtCG,EAAQ,CACVC,KAAMjB,EAAWe,QAAQF,EAAQ,CAACK,KAAM,YAAaC,yBAA0B,EAAGC,2BAA2B,IAC7GC,WAAYP,EACZQ,KAAMR,EACNS,IAAKT,EACLU,qBAAsBV,EACtBW,IAAKzB,EAAWe,QAAQF,EAAQ,YAChCa,GAAI1B,EAAWe,QAAQF,EAAQ,CAACK,KAAM,kBAAmBS,gBAAiB,EAAId,EAAOe,cAGvF,SAASC,EAAKC,GACZ,OAAOA,EAAMA,EAAMC,OAAS,GAG9B,SAASC,EAAWC,EAAQC,EAAOC,GACjC,GAAIF,EAAOG,MAAO,CAChB,IAAK,IAAIC,EAAS,EAAGA,EAASH,EAAMG,QAC7BJ,EAAOK,IAAI,MAD0BD,KAG5C,GAAIA,EAAQ,OAAO,KAErB,IAAIE,EAAYN,EAAOO,OACnBC,EAAQN,EAAYO,KAAKH,EAAUI,OAAOV,EAAOW,MACjDH,IAGFR,EAAOO,OAASD,EAAUI,OAAO,EAAGV,EAAOW,IAAMH,EAAMI,QAEzD,IAAIC,EAASb,EAAOc,eAAeb,EAAMG,QAAQ,WAC/C,IAAIW,EAAanB,EAAKK,EAAMe,aAC5B,OAAOD,EAAWE,KAAKC,MAAMlB,EAAQe,EAAWd,UAGlD,OADAD,EAAOO,OAASD,EACTO,EAWT,SAASM,EAAQC,EAAMC,GACrB,MAAO,CACLA,QAASA,EACTC,KAAMF,GAIV,SAASG,EAAWtB,GACbA,EAAMuB,UACPvB,EAAMuB,QAAQC,QAChBxB,EAAMyB,UAAYzB,EAAMuB,QAAQC,OAElCxB,EAAMuB,QAAUvB,EAAMuB,QAAQG,iBAKhC,SAASC,EAAIR,EAAMnC,EAAM4C,GACvB,OA1BF,SAAkBT,EAAMC,GACtB,KAAOD,GAAM,CACX,GAAIA,EAAKC,UAAYA,EAAS,OAAO,EACrCD,EAAOA,EAAKE,KAEd,OAAO,EAqBAQ,CAASV,EAAMnC,GAAQ,aAAgB4C,EAAQ,WAAa,mBAIrE,SAASE,EAAQJ,EAAiBjD,EAAK+C,GACrCO,KAAKL,gBAAkBA,EACvBK,KAAKtD,IAAMA,EACXsD,KAAKC,KAAO,KACZD,KAAKP,MAAQA,EAGf,SAASS,EAAWlC,EAAQC,GAC1B,IAAIO,EACJ,OAAIR,EAAOQ,MAAM,QACfP,EAAM/B,SAASiE,KAAK,gBACpBlC,EAAMuB,QAAU,IAAIO,EAAQ9B,EAAMuB,QAAS,eAAgBvB,EAAMyB,WACjEzB,EAAMmC,iBAAkB,EACjB,MACEpC,EAAOQ,MAAM,UACtBP,EAAM/B,SAASiE,KAAK,eACb,WACEnC,EAAOQ,MAAM,aACtBP,EAAM/B,SAASiE,KAAK,kBACb,WACEnC,EAAOQ,MAAM,iBACf,mBACEA,EAAQR,EAAOQ,MAAM,WAC9BP,EAAM/B,SAASiE,KAAK,UACpBlC,EAAMoC,UAAY7B,EAAM,GACjB,UACER,EAAOQ,MAAM,SACtBP,EAAM/B,SAASiE,KAAK,oBACb,MACEnC,EAAOQ,MAAM,4BACpBR,EAAOQ,MAAM,wBACbR,EAAOQ,MAAM,kCACR,OACER,EAAOQ,MAAM,mCAEf,YACEA,EAAQR,EAAOQ,MAAM,eACvBoB,EAAI3B,EAAMyB,UAAWlB,EAAM,IAAKP,EAAMmC,kBACpC5B,EAAQR,EAAOQ,MAAM,SACvB,4BAA4B8B,KAAK9B,EAAM,IAAM,UAAY,MAGlER,EAAOsB,OACA,MAGT,MAAO,CACLiB,WAAY,WACV,MAAO,CACLrE,SAAU,GACVwD,UAAWP,EAAQ,KAAM,MACzBqB,OAAQ,KACRpC,OAAQ,EACRiC,UAAW,KACXb,QAAS,KACTY,iBAAiB,EACjBpB,YAAa,CAAC,CACZC,KAAMlC,EAAMC,KACZiB,MAAOlC,EAAWwE,WAAWxD,EAAMC,UAKzCyD,UAAW,SAASxC,GAClB,MAAO,CACLvB,IAAKuB,EAAMvB,IACXR,SAAU+B,EAAM/B,SAASwE,OAAO,IAChChB,UAAWzB,EAAMyB,UACjBF,QAASvB,EAAMuB,QACfpB,OAAQH,EAAMG,OACdiC,UAAWpC,EAAMoC,UACjBD,gBAAiBnC,EAAMmC,gBACvBpB,YAAaf,EAAMe,YAAY2B,KAAI,SAAS5B,GAC1C,MAAO,CACLE,KAAMF,EAAWE,KACjBhB,MAAOlC,EAAW0E,UAAU1B,EAAWE,KAAMF,EAAWd,aAMhEiB,MAAO,SAASlB,EAAQC,GAGtB,OAAQL,EAAKK,EAAM/B,WACjB,IAAK,UAMH,GALI8B,EAAOQ,MAAM,YACfP,EAAM/B,SAAS0E,MAEf5C,EAAO6C,aAEJ5C,EAAMuB,UAAYvB,EAAMuB,QAAQC,MAGnC,IAFA,IAAIqB,EAAU,qBACVC,EAAU/C,EAAO+C,UACJvC,EAAQsC,EAAQrC,KAAKsC,IACpC9C,EAAMyB,UAAYP,EAAQlB,EAAMyB,UAAWlB,EAAM,IAGrD,MAAO,UAET,IAAK,SACH,IAAIA,EAOJ,OAPIA,EAAQR,EAAOQ,MAAM,wBAGdA,EAAM,IAAMP,EAAMoC,YAC3BpC,EAAMoC,UAAY,KAClBpC,EAAM/B,SAAS0E,OAHf5C,EAAO6C,YAKF,SAGX,IAAK5C,EAAM/B,SAAS4B,QAAkC,WAAxBF,EAAKK,EAAM/B,UAAwB,CAC/D,GAAI8B,EAAOQ,MAAM,SAEf,OADAP,EAAM/B,SAASiE,KAAK,WACb,UACF,GAAInC,EAAOQ,MAAMR,EAAOG,MAAQ,aAAe,cACpD,MAAO,UAIX,OAAQP,EAAKK,EAAM/B,WACjB,IAAK,YACH,OAAIsC,EAAQR,EAAOQ,MAAM,6BACvBP,EAAM/B,SAAS0E,MACR,QAET5C,EAAOsB,OACA,MAET,IAAK,YACH,OAAId,EAAQR,EAAOQ,MAAM,kCACvBP,EAAM/B,SAAS0E,MAEI,KAAfpC,EAAM,GAAG,GACJ,aAGF,aAELA,EAAQR,EAAOQ,MAAM,gBACvBP,EAAM/B,SAAS0E,MACRhB,EAAI3B,EAAMyB,UAAWlB,EAAM,IAAKP,EAAMmC,mBAG/CpC,EAAOsB,OACA,MAET,IAAK,gBACH,OAAId,EAAQR,EAAOQ,MAAM,mBACvBP,EAAM/B,SAAS0E,MACR,aAET5C,EAAOsB,OACA,MAET,IAAK,YACH,OAAId,EAAQR,EAAOQ,MAAM,UACvBP,EAAMyB,UAAYP,EAAQlB,EAAMyB,UAAWlB,EAAM,IACjDP,EAAM/B,SAAS0E,MACf3C,EAAM/B,SAASiE,KAAK,cACb,QAETnC,EAAOsB,OACA,MAET,IAAK,YACH,OAAId,EAAQR,EAAOQ,MAAM,UACvBP,EAAM/B,SAAS0E,MACR,aAET5C,EAAOsB,OACA,MAET,IAAK,mBACH,OAAItB,EAAOQ,MAAM,QACfP,EAAM/B,SAAS0E,MACR,MAEFV,EAAWlC,EAAQC,GAE5B,IAAK,aACH,IAAI+C,EAAWhD,EAAOiD,OACtB,OAAkC,GAA9B,QAAQC,QAAQF,IAClB/C,EAAM/B,SAAS0E,MACR,MACc,KAAZI,GACT/C,EAAM/B,SAASiE,KAAK,qBACb,MACc,KAAZa,GACT/C,EAAM/B,SAASiE,KAAK,uBACb,MACc,KAAZa,GACT/C,EAAM/B,SAASiE,KAAK,wBACb,OACE3B,EAAQR,EAAOQ,MAAM,iBACvB,QAETR,EAAOsB,OACA,MAET,IAAK,oBAEH,MAAgB,MADZ0B,EAAWhD,EAAOiD,SAEpBhD,EAAM/B,SAAS0E,MACR,MAEL5C,EAAOQ,MAAM,SACfP,EAAM/B,SAASiE,KAAK,cACb,aAETnC,EAAOsB,OACA,MAET,IAAK,uBACH,OAAItB,EAAOQ,MAAM,SACfP,EAAM/B,SAAS0E,MACR,MAEL5C,EAAOQ,MAAM,UACfP,EAAM/B,SAASiE,KAAK,cACb,OAETnC,EAAOsB,OACA,MAET,IAAK,sBACH,OAAItB,EAAOQ,MAAM,QACfP,EAAM/B,SAAS0E,MACf3C,EAAM/B,SAASiE,KAAK,cACb,MAELnC,EAAOQ,MAAM,SACfP,EAAM/B,SAASiE,KAAK,cACb,QAETnC,EAAOsB,OACA,MAET,IAAK,UACH,OAAId,EAAQR,EAAOQ,MAAM,gBACvBP,EAAMyB,UAAYP,EAAQlB,EAAMyB,UAAWlB,EAAM,IACjDP,EAAM/B,SAAS0E,MACR,QAET5C,EAAOsB,OACA,MAET,IAAK,WACH,OAAItB,EAAOQ,MAAM,WACfP,EAAM/B,SAAS0E,MACR,WAEY,KAAjB5C,EAAOiD,QACThD,EAAM/B,SAASiE,KAAK,WACb,OAETnC,EAAOsB,OACA,MAET,IAAK,iBACH,OAAItB,EAAOQ,MAAM,SACfP,EAAM/B,SAAS0E,MACR,MAEL5C,EAAOQ,MAAM,SACfP,EAAM/B,SAASiE,KAAK,aACpBlC,EAAM/B,SAASiE,KAAK,cACb,OAETnC,EAAOsB,OACA,MAET,IAAK,cACH,OAAItB,EAAOQ,MAAM,SACfP,EAAM/B,SAAS0E,MACR,MAEL5C,EAAOQ,MAAM,SACfP,EAAM/B,SAASiE,KAAK,aACpBlC,EAAM/B,SAASiE,KAAK,aACb,OAETnC,EAAOsB,OACA,MAET,IAAK,eACH,OAAItB,EAAOQ,MAAM,OACfP,EAAM/B,SAAS0E,MACf3C,EAAMmC,iBAAkB,EACxBb,EAAWtB,GACJ,MAELD,EAAOQ,MAAM,YACfP,EAAMmC,iBAAkB,EACxBnC,EAAM/B,SAASiE,KAAK,YACb,WAEFD,EAAWlC,EAAQC,GAE5B,IAAK,aACH,OAAID,EAAOQ,MAAM,SACR,WAELR,EAAOQ,MAAM,SACfP,EAAM/B,SAAS0E,MACR,OAET5C,EAAOsB,OACA,MAET,IAAK,YACH,MAAqB,KAAjBtB,EAAOiD,QAAkC,KAAjBjD,EAAOiD,QAAiBjD,EAAOQ,MAAM,UAC/DP,EAAM/B,SAAS0E,MACR,MAEFV,EAAWlC,EAAQC,GAE5B,IAAK,SACH,OAAID,EAAOK,IAAI,MACbJ,EAAM/B,SAAS0E,MACf3C,EAAMG,QAAU,EAAIxB,EAAOe,WACpB,MAELK,EAAOQ,MAAM,gBACR,YAELA,EAAQR,EAAOQ,MAAM,QAChB,YAAY8B,KAAK9B,EAAM,IAAM,UAAY,OAE9CA,EAAQR,EAAOQ,MAAM,WACvBP,EAAM/B,SAASiE,KAAK,UACpBlC,EAAMoC,UAAY7B,EAAM,GACjB,WAETR,EAAOsB,OACA,MAET,IAAK,MACH,IACI6B,GADAC,EAAyB,KAAhBnD,EAAMvB,IAAI,IACAuB,EAAMvB,IAAI2E,UAAU,GAAKpD,EAAMvB,IAClDA,EAAMP,EAAKgF,GACf,GAAInD,EAAOQ,MAAM,SAAU,CACzB,IAAI8C,EAAiC,MAApBtD,EAAO+C,UAYxB,OAXIO,IAAeF,GACjB7B,EAAWtB,GAEI,aAAbA,EAAMvB,KAAmC,gBAAbuB,EAAMvB,KACpCuB,EAAMyB,UAAYP,EAAQ,KAAM,MAChClB,EAAMG,OAAS,GAEfH,EAAMG,QAAUxB,EAAOe,YAClB2D,IAAmD,GAArChF,EAAc4E,QAAQjD,EAAMvB,KAAa,EAAI,GAElEuB,EAAM/B,SAAS0E,MACR,UACF,GAAI5C,EAAOQ,MAAM,kBAAmB,CACzC,GAAIP,EAAMuB,SAAWvB,EAAMuB,QAAQ9C,KAAOyE,GAA+B,QAApBnD,EAAO+C,YAAwBvC,EAAQR,EAAOQ,MAAM,cAAc,IAAS,CAC9H,IAAIyB,EAAOzB,EAAM,GACjBP,EAAMuB,QAAQS,KAAOA,EACrB,IAAIhB,EAAOlC,EAAMkD,IAASlD,EAAMC,MAC5B+B,EAAanB,EAAKK,EAAMe,cACbC,KAAKb,SAClBH,EAAMG,QAAUW,EAAWE,KAAKb,OAAOW,EAAWd,MAAO,GAAI,KAE/DA,EAAMe,YAAYmB,KAAK,CACrBlB,KAAMA,EACNhB,MAAOlC,EAAWwE,WAAWtB,KAGjC,MAAO,YAET,OAAOiB,EAAWlC,EAAQC,GAE5B,IAAK,UACH,OAAID,EAAOQ,MAAM,sBACfP,EAAM/B,SAAS0E,MACRZ,KAAKd,MAAMlB,EAAQC,IAErBF,EAAWC,EAAQC,EAAO,gBAGrC,GAAID,EAAOQ,MAAM,eAIf,OAHAP,EAAMG,QAAUxB,EAAOe,WACvBM,EAAM/B,SAASiE,KAAK,WACpBlC,EAAMuB,QAAU,IAAIO,EAAQ9B,EAAMuB,QAAS,UAAWvB,EAAMyB,WACrD,UAGF,GAAIlB,EAAQR,EAAOQ,MAAM,wCAAyC,CACvE,IAAI+C,EAAUtD,EAAMvB,IACpBuB,EAAMvB,IAAM8B,EAAM,GAClB,IAAI4C,EAAyB,KAAhBnD,EAAMvB,IAAI,GACnB8E,IAAiBrF,EAAK8B,EAAMvB,KAC5ByE,EAAUC,EAASnD,EAAMvB,IAAI2E,UAAU,GAAKpD,EAAMvB,IAClDA,EAAMP,EAAKgF,GACE,WAAblD,EAAMvB,MACRuB,EAAMG,UAAYgD,GAAU1E,GAAOA,EAAIL,eAA4B,UAAXkF,EAAsB,EAAI,GAAK3E,EAAOe,YAEhGM,EAAM/B,SAASiE,KAAK,OACpB,IAAIsB,GAAW,EACf,GAAI/E,EAKF,GAJK0E,GACC1E,EAAIR,UAAU+B,EAAM/B,SAASiE,KAAKzD,EAAIR,UAGvCQ,EAAIT,WAAauF,GAAiBJ,GAGhC,GAAIA,EACT,GAAKnD,EAAMuB,SAAWvB,EAAMuB,QAAQ9C,KAAOyE,GAEpC,GAAIlD,EAAMuB,QAAS,CAGtB,IAAIT,EAFFd,EAAMuB,QAAQS,OAChBhC,EAAMe,YAAY4B,OACd7B,EAAanB,EAAKK,EAAMe,cACbC,KAAKb,SAClBH,EAAMG,QAAUW,EAAWE,KAAKb,OAAOW,EAAWd,MAAO,GAAI,MAGjEsB,EAAWtB,SATXwD,GAAW,OAJbxD,EAAMuB,QAAU,IAAIO,EAAQ9B,EAAMuB,QAASvB,EAAMvB,IAAKA,EAAIN,cAAgB6B,EAAMyB,UAAY,WAgBrF0B,IAETK,GAAW,GAEb,OAAQA,EAAW,SAAW,IAAM,UAG/B,OAAIzD,EAAOK,IAAI,MACpBJ,EAAMvB,IAAM,QACZuB,EAAMG,QAAU,EAAIxB,EAAOe,WAC3BM,EAAM/B,SAASiE,KAAK,OACb,YACGlC,EAAMuB,SAAWxB,EAAOQ,MAAM,eACxCP,EAAM/B,SAASiE,KAAK,UACpBlC,EAAMG,QAAU,EAAIxB,EAAOe,WACpB,WAGFI,EAAWC,EAAQC,EAAO,oBAGnCG,OAAQ,SAASH,EAAOyD,EAAWC,GACjC,IAAIvD,EAASH,EAAMG,OAAQwD,EAAMhE,EAAKK,EAAM/B,UAC5C,GAAW,WAAP0F,EAAkB,OAAO7F,EAAW8F,KAExC,GAAW,WAAPD,EACE,gBAAgBtB,KAAKoB,KAAYtD,GAAUxB,EAAOe,gBACjD,CACL,GAAI,mCAAmC2C,KAAKoB,GAAY,OAAO,EAC3D,8CAA8CpB,KAAKoB,KAAYtD,GAAUxB,EAAOe,YACnE,UAAbM,EAAMvB,KAAmB,sBAAsB4D,KAAKoB,KAAYtD,GAAUxB,EAAOe,YACjF,gBAAgB2C,KAAKoB,KAAYtD,GAAUxB,EAAOe,YAExD,IAAIoB,EAAanB,EAAKK,EAAMe,aAI5B,OAHIZ,GAAUW,EAAWE,KAAKb,SAC5BA,GAAUW,EAAWE,KAAKb,OAAOW,EAAWd,MAAOyD,EAAWC,IAEzDvD,GAGT0D,UAAW,SAAS7D,GAClB,OAAIA,EAAM/B,SAAS4B,QAAkC,WAAxBF,EAAKK,EAAM/B,UAA+B,KAC3D0B,EAAKK,EAAMe,cAGzB+C,cAAe,yGACfC,YAAa,KACbC,kBAAmB,KACnBC,gBAAiB,KACjBC,qBAAsB,MACtBC,kBAAkB,EAClBC,KAAM,YAEP,aAEHtG,EAAWuG,eAAe,YAAa,MAAO,SAE9CvG,EAAWuG,eAAe,YAAa,MAAO/F,OAAOC,KAAKL,GAAMuE,OAC5D,CAAC,MAAO,cAEZ3E,EAAWwG,WAAW,aAAc,OArlBlCC,CAAIC,EAAQ,GAAyBA,EAAQ,M,oBCK9C,SAAS1G,GACZ,aAEA,IAAI2G,EAAa,CACfC,gBAAiB,CAAC,MAAQ,EAAM,MAAQ,EAAM,IAAM,EAAM,KAAO,EAAM,SAAW,EAChE,OAAS,EAAM,OAAS,EAAM,IAAM,EAAM,KAAO,EAAM,OAAS,EAChE,QAAU,EAAM,MAAQ,EAAM,MAAQ,EAAM,OAAS,EAAM,QAAU,EACrE,OAAS,EAAM,KAAO,EAAM,UAAY,GAC1DC,iBAAkB,CAAC,IAAM,EAAM,IAAM,EAAM,UAAY,EAAM,QAAU,EAAM,GAAK,EAC/D,IAAM,EAAM,IAAM,EAAM,OAAS,EAAM,IAAM,EAAM,OAAS,EAC5D,IAAM,EAAM,IAAM,GACrCC,gBAAiB,CACf,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,GAAM,CAAC,IAAM,GACb,OAAU,CAAC,QAAU,EAAM,UAAY,GACvC,SAAY,CAAC,UAAY,GACzB,EAAK,CAAC,SAAW,EAAM,SAAW,EAAM,OAAS,EAAM,YAAc,EAAM,KAAO,EAC5E,KAAO,EAAM,IAAM,EAAM,UAAY,EAAM,QAAU,EAAM,MAAQ,EACnE,IAAM,EAAM,IAAM,EAAM,IAAM,EAAM,IAAM,EAAM,IAAM,EAAM,IAAM,EAClE,QAAU,EAAM,QAAU,EAAM,IAAM,EAAM,MAAQ,EAAM,KAAO,EAAM,IAAM,EAC7E,GAAK,EAAM,KAAO,EAAM,SAAW,EAAM,OAAS,EAAM,IAAM,GACpE,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,MAAS,CAAC,OAAS,EAAM,OAAS,GAClC,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,MAAS,CAAC,OAAS,GACnB,GAAM,CAAC,IAAM,EAAM,IAAM,GACzB,MAAS,CAAC,OAAS,EAAM,OAAS,GAClC,GAAM,CAAC,IAAM,IAEfC,YAAa,CAAC,KAAO,GACrBC,eAAe,EACfC,cAAc,EACdC,UAAU,GAGRC,EAAY,CACdP,gBAAiB,GACjBC,iBAAkB,GAClBC,gBAAiB,GACjBC,YAAa,GACbC,eAAe,EACfC,cAAc,EACdG,qBAAqB,EACrBF,UAAU,GAGZlH,EAAWY,WAAW,OAAO,SAASyG,EAAYC,GAChD,IAOIC,EAAMC,EAPN5F,EAAayF,EAAWzF,WACxBf,EAAS,GACT4G,EAAWH,EAAQI,SAAWf,EAAaQ,EAC/C,IAAK,IAAIQ,KAAQF,EAAU5G,EAAO8G,GAAQF,EAASE,GACnD,IAAK,IAAIA,KAAQL,EAASzG,EAAO8G,GAAQL,EAAQK,GAKjD,SAASC,EAAO3F,EAAQC,GACtB,SAAS2F,EAAMC,GAEb,OADA5F,EAAM6F,SAAWD,EACVA,EAAO7F,EAAQC,GAGxB,IAAI8F,EAAK/F,EAAOsB,OAChB,MAAU,KAANyE,EACE/F,EAAOK,IAAI,KACTL,EAAOK,IAAI,KACTL,EAAOQ,MAAM,UAAkBoF,EAAMI,EAAQ,OAAQ,QAC7C,KACHhG,EAAOQ,MAAM,MACfoF,EAAMI,EAAQ,UAAW,WACvBhG,EAAOQ,MAAM,WAAW,GAAM,IACvCR,EAAOiG,SAAS,aACTL,EAoFf,SAASM,EAAQC,GACf,OAAO,SAASnG,EAAQC,GAEtB,IADA,IAAI8F,EAC2B,OAAvBA,EAAK/F,EAAOsB,SAAiB,CACnC,GAAU,KAANyE,EAEF,OADA9F,EAAM6F,SAAWI,EAAQC,EAAQ,GAC1BlG,EAAM6F,SAAS9F,EAAQC,GACzB,GAAU,KAAN8F,EAAW,CACpB,GAAa,GAATI,EAAY,CACdlG,EAAM6F,SAAWH,EACjB,MAGA,OADA1F,EAAM6F,SAAWI,EAAQC,EAAQ,GAC1BlG,EAAM6F,SAAS9F,EAAQC,IAIpC,MAAO,QArGUiG,CAAQ,KAEd,KAEAlG,EAAOK,IAAI,MACpBL,EAAOiG,SAAS,aAChBhG,EAAM6F,SAAWE,EAAQ,OAAQ,MAC1B,SAEPV,EAAOtF,EAAOK,IAAI,KAAO,WAAa,UACtCJ,EAAM6F,SAAWM,EACV,eAEM,KAANL,GAEL/F,EAAOK,IAAI,KACTL,EAAOK,IAAI,KACRL,EAAOiG,SAAS,eAAiBjG,EAAOK,IAAI,KAE5CL,EAAOiG,SAAS,SAAWjG,EAAOK,IAAI,KAGxCL,EAAOiG,SAAS,cAAgBjG,EAAOK,IAAI,MAEtC,OAAS,SAErBL,EAAOiG,SAAS,SACT,MAKX,SAASG,EAAMpG,EAAQC,GACrB,IAAI8F,EAAK/F,EAAOsB,OAChB,GAAU,KAANyE,GAAoB,KAANA,GAAa/F,EAAOK,IAAI,KAGxC,OAFAJ,EAAM6F,SAAWH,EACjBL,EAAa,KAANS,EAAY,SAAW,eACvB,cACF,GAAU,KAANA,EAET,OADAT,EAAO,SACA,KACF,GAAU,KAANS,EAAW,CACpB9F,EAAM6F,SAAWH,EACjB1F,EAAMA,MAAQoG,EACdpG,EAAMkD,QAAUlD,EAAMqG,SAAW,KACjC,IAAIhF,EAAOrB,EAAM6F,SAAS9F,EAAQC,GAClC,OAAOqB,EAAOA,EAAO,aAAe,YAC/B,MAAI,SAASgB,KAAKyD,IACvB9F,EAAM6F,SASV,SAAqBS,GACnB,IAAIC,EAAU,SAASxG,EAAQC,GAC7B,MAAQD,EAAOyG,OACb,GAAIzG,EAAOsB,QAAUiF,EAAO,CAC1BtG,EAAM6F,SAAWM,EACjB,MAGJ,MAAO,UAGT,OADAI,EAAQE,eAAgB,EACjBF,EApBYG,CAAYZ,GAC7B9F,EAAM2G,eAAiB5G,EAAO6G,SACvB5G,EAAM6F,SAAS9F,EAAQC,KAE9BD,EAAOQ,MAAM,4CACN,QAkBX,SAASwF,EAAQc,EAAOC,GACtB,OAAO,SAAS/G,EAAQC,GACtB,MAAQD,EAAOyG,OAAO,CACpB,GAAIzG,EAAOQ,MAAMuG,GAAa,CAC5B9G,EAAM6F,SAAWH,EACjB,MAEF3F,EAAOsB,OAET,OAAOwF,GAyBX,SAAS/E,EAAQ9B,EAAOkD,EAAS6D,GAC/BhF,KAAKiF,KAAOhH,EAAMuB,QAClBQ,KAAKmB,QAAUA,EACfnB,KAAK5B,OAASH,EAAMiH,SACpBlF,KAAKgF,YAAcA,GACfpI,EAAOkG,YAAYqC,eAAehE,IAAalD,EAAMuB,SAAWvB,EAAMuB,QAAQ4F,YAChFpF,KAAKoF,UAAW,GAEpB,SAASC,EAAWpH,GACdA,EAAMuB,UAASvB,EAAMuB,QAAUvB,EAAMuB,QAAQyF,MAEnD,SAASK,EAAgBrH,EAAOsH,GAE9B,IADA,IAAIC,IACS,CACX,IAAKvH,EAAMuB,QACT,OAGF,GADAgG,EAAgBvH,EAAMuB,QAAQ2B,SACzBvE,EAAOiG,gBAAgBsC,eAAeK,KACtC5I,EAAOiG,gBAAgB2C,GAAeL,eAAeI,GACxD,OAEFF,EAAWpH,IAIf,SAASoG,EAAUf,EAAMtF,EAAQC,GAC/B,MAAY,WAARqF,GACFrF,EAAMqG,SAAWtG,EAAO6G,SACjBY,GACU,YAARnC,EACFoC,EAEArB,EAGX,SAASoB,EAAanC,EAAMtF,EAAQC,GAClC,MAAY,QAARqF,GACFrF,EAAMkD,QAAUnD,EAAO+C,UACvBwC,EAAW,MACJoC,GACE/I,EAAOuG,qBAA+B,UAARG,GACvCC,EAAW,cACJoC,EAAUrC,EAAMtF,EAAQC,KAE/BsF,EAAW,QACJkC,GAGX,SAASC,EAAkBpC,EAAMtF,EAAQC,GACvC,GAAY,QAARqF,EAAgB,CAClB,IAAInC,EAAUnD,EAAO+C,UAIrB,OAHI9C,EAAMuB,SAAWvB,EAAMuB,QAAQ2B,SAAWA,GAC1CvE,EAAOgG,iBAAiBuC,eAAelH,EAAMuB,QAAQ2B,UACvDkE,EAAWpH,GACRA,EAAMuB,SAAWvB,EAAMuB,QAAQ2B,SAAWA,IAAoC,IAAxBvE,EAAOgJ,cAChErC,EAAW,MACJsC,IAEPtC,EAAW,YACJuC,GAEJ,OAAIlJ,EAAOuG,qBAA+B,UAARG,GACvCC,EAAW,cACJsC,EAAWvC,EAAMtF,EAAQC,KAEhCsF,EAAW,QACJuC,GAIX,SAASD,EAAWvC,EAAMyC,EAAS9H,GACjC,MAAY,UAARqF,GACFC,EAAW,QACJsC,IAETR,EAAWpH,GACJoG,GAET,SAASyB,EAAcxC,EAAMtF,EAAQC,GAEnC,OADAsF,EAAW,QACJsC,EAAWvC,EAAMtF,EAAQC,GAGlC,SAAS0H,EAAUrC,EAAMyC,EAAS9H,GAChC,GAAY,QAARqF,EAEF,OADAC,EAAW,YACJyC,EACF,GAAY,UAAR1C,GAA4B,gBAARA,EAAwB,CACrD,IAAInC,EAAUlD,EAAMkD,QAASmD,EAAWrG,EAAMqG,SAS9C,OARArG,EAAMkD,QAAUlD,EAAMqG,SAAW,KACrB,gBAARhB,GACA1G,EAAO+F,gBAAgBwC,eAAehE,GACxCmE,EAAgBrH,EAAOkD,IAEvBmE,EAAgBrH,EAAOkD,GACvBlD,EAAMuB,QAAU,IAAIO,EAAQ9B,EAAOkD,EAASmD,GAAYrG,EAAMiH,WAEzDb,EAGT,OADAd,EAAW,QACJoC,EAET,SAASK,EAAY1C,EAAMtF,EAAQC,GACjC,MAAY,UAARqF,EAAyB2C,GACxBrJ,EAAOoG,eAAcO,EAAW,SAC9BoC,EAAUrC,EAAMtF,EAAQC,IAEjC,SAASgI,EAAe3C,EAAMtF,EAAQC,GACpC,MAAY,UAARqF,EAAyB4C,EACjB,QAAR5C,GAAkB1G,EAAOmG,eAAgBQ,EAAW,SAAiBoC,IACzEpC,EAAW,QACJoC,EAAUrC,EAAMtF,EAAQC,IAEjC,SAASiI,EAAmB5C,EAAMtF,EAAQC,GACxC,MAAY,UAARqF,EAAyB4C,EACtBP,EAAUrC,EAAMtF,EAAQC,GAGjC,OAlMA0F,EAAOwC,UAAW,EAkMX,CACL5F,WAAY,SAAS6F,GACnB,IAAInI,EAAQ,CAAC6F,SAAUH,EACV1F,MAAOoG,EACPa,SAAUkB,GAAc,EACxBjF,QAAS,KAAMmD,SAAU,KACzB9E,QAAS,MAEtB,OADkB,MAAd4G,IAAoBnI,EAAMmI,WAAaA,GACpCnI,GAGTiB,MAAO,SAASlB,EAAQC,GAItB,IAHKA,EAAMkD,SAAWnD,EAAOG,QAC3BF,EAAMiH,SAAWlH,EAAOqI,eAEtBrI,EAAOsI,WAAY,OAAO,KAC9BhD,EAAO,KACP,IAAIwB,EAAQ7G,EAAM6F,SAAS9F,EAAQC,GAOnC,OANK6G,GAASxB,IAAkB,WAATwB,IACrBvB,EAAW,KACXtF,EAAMA,MAAQA,EAAMA,MAAMqF,GAAQwB,EAAO9G,EAAQC,GAC7CsF,IACFuB,EAAoB,SAAZvB,EAAsBuB,EAAQ,SAAWvB,IAE9CuB,GAGT1G,OAAQ,SAASH,EAAOyD,EAAW6E,GACjC,IAAI/G,EAAUvB,EAAMuB,QAEpB,GAAIvB,EAAM6F,SAASY,cACjB,OAAIzG,EAAMqG,UAAYrG,EAAMiH,SACnBjH,EAAM2G,eAAiB,EAEvB3G,EAAMiH,SAAWvH,EAE5B,GAAI6B,GAAWA,EAAQ4F,SAAU,OAAOrJ,EAAW8F,KACnD,GAAI5D,EAAM6F,UAAYM,GAASnG,EAAM6F,UAAYH,EAC/C,OAAO4C,EAAWA,EAAS/H,MAAM,UAAU,GAAGV,OAAS,EAEzD,GAAIG,EAAMkD,QACR,OAAyC,IAArCvE,EAAOO,0BACFc,EAAMqG,SAAWrG,EAAMkD,QAAQrD,OAAS,EAExCG,EAAMqG,SAAW3G,GAAcf,EAAOM,0BAA4B,GAE7E,GAAIN,EAAO4J,YAAc,cAAclG,KAAKoB,GAAY,OAAO,EAC/D,IAAI+E,EAAW/E,GAAa,sBAAsBjD,KAAKiD,GACvD,GAAI+E,GAAYA,EAAS,GACvB,KAAOjH,GAAS,CACd,GAAIA,EAAQ2B,SAAWsF,EAAS,GAAI,CAClCjH,EAAUA,EAAQyF,KAClB,MACK,IAAIrI,EAAOgG,iBAAiBuC,eAAe3F,EAAQ2B,SAGxD,MAFA3B,EAAUA,EAAQyF,UAKjB,GAAIwB,EACT,KAAOjH,GAAS,CACd,IAAIkH,EAAW9J,EAAOiG,gBAAgBrD,EAAQ2B,SAC9C,IAAIuF,IAAYA,EAASvB,eAAesB,EAAS,IAG/C,MAFAjH,EAAUA,EAAQyF,KAKxB,KAAOzF,GAAWA,EAAQyF,OAASzF,EAAQwF,aACzCxF,EAAUA,EAAQyF,KACpB,OAAIzF,EAAgBA,EAAQpB,OAAST,EACzBM,EAAMmI,YAAc,GAGlCrE,cAAe,gBACfE,kBAAmB,UACnBC,gBAAiB,SAEjByE,cAAe/J,EAAO6G,SAAW,OAAS,MAC1CmD,WAAYhK,EAAO6G,SAAW,OAAS,MAEvCoD,cAAe,SAAS5I,GAClBA,EAAMA,OAASgI,IACjBhI,EAAMA,MAAQ0H,IAGlBmB,cAAe,SAAS7I,GACtB,OAAOA,EAAMkD,QAAU,CAAClE,KAAMgB,EAAMkD,QAAS4F,MAAqB,YAAd9I,EAAMqF,MAAsB,MAGlF0D,kBAAmB,SAAS/I,GAE1B,IADA,IAAIuB,EAAU,GACLyH,EAAKhJ,EAAMuB,QAASyH,EAAIA,EAAKA,EAAGhC,KACnCgC,EAAG9F,SAAS3B,EAAQW,KAAK8G,EAAG9F,SAClC,OAAO3B,EAAQ0H,eAKrBnL,EAAWwG,WAAW,WAAY,OAClCxG,EAAWwG,WAAW,kBAAmB,OACpCxG,EAAWoL,UAAUhC,eAAe,cACvCpJ,EAAWwG,WAAW,YAAa,CAACtF,KAAM,MAAOwG,UAAU,IArZzDjB,CAAIC,EAAQ,K,oBCKb,SAAS1G,GACV,aAEA,IAAIqL,EAAc,CAChBC,OAAQ,CACN,CAAC,OAAQ,sBAAuB,cAChC,CAAC,OAAQ,kEAAmE,cAC5E,CAAC,OAAQ,IAAK,cACd,CAAC,KAAM,KAAM,eAEfvC,MAAQ,CACN,CAAC,OAAQ,SAAU,OACnB,CAAC,OAAQ,oCAAqC,OAC9C,CAAC,OAAQ,IAAK,cACd,CAAC,KAAM,KAAM,SAebwC,EAAkB,GAOtB,SAASC,EAAalK,EAAMmK,GAC1B,IAAIhJ,EAAQnB,EAAKmB,MAPnB,SAAuBgJ,GACrB,IAAIC,EAASH,EAAgBE,GAC7B,OAAIC,IACGH,EAAgBE,GAAQ,IAAIE,OAAO,OAASF,EAAO,yCAInCG,CAAcH,IACrC,OAAOhJ,EAAQ,gBAAgBC,KAAKD,EAAM,IAAI,GAAK,GAGrD,SAASoJ,EAAazG,EAAS0G,GAC7B,OAAO,IAAIH,QAAQG,EAAW,IAAM,IAAM,OAAW1G,EAAU,MAAQ,KAGzE,SAAS2G,EAAQC,EAAMC,GACrB,IAAK,IAAItL,KAAOqL,EAGd,IAFA,IAAIE,EAAOD,EAAGtL,KAASsL,EAAGtL,GAAO,IAC7BwL,EAASH,EAAKrL,GACTyL,EAAID,EAAOpK,OAAS,EAAGqK,GAAK,EAAGA,IACtCF,EAAKG,QAAQF,EAAOC,IAW1BpM,EAAWY,WAAW,aAAa,SAAUC,EAAQyL,GACnD,IAAI5E,EAAW1H,EAAWe,QAAQF,EAAQ,CACxCK,KAAM,MACNwG,UAAU,EACVvG,yBAA0BmL,EAAanL,yBACvCC,0BAA2BkL,EAAalL,4BAGtChB,EAAO,GACPmM,EAAaD,GAAgBA,EAAalM,KAAMoM,EAAeF,GAAgBA,EAAaG,YAGhG,GAFAV,EAAQV,EAAajL,GACjBmM,GAAYR,EAAQQ,EAAYnM,GAChCoM,EAAc,IAAK,IAAIJ,EAAII,EAAazK,OAAS,EAAGqK,GAAK,EAAGA,IAC9DhM,EAAKkL,OAAOe,QAAQ,CAAC,OAAQG,EAAaJ,GAAGM,QAASF,EAAaJ,GAAGlJ,OAExE,SAASjC,EAAKgB,EAAQC,GACpB,IAAkFkD,EAA9E2D,EAAQrB,EAASvE,MAAMlB,EAAQC,EAAMyK,WAAYhM,EAAM,UAAU4D,KAAKwE,GAC1E,GAAIpI,IAAQ,WAAW4D,KAAKtC,EAAO+C,aAC9BI,EAAUlD,EAAMyK,UAAUvH,SAAWlD,EAAMyK,UAAUvH,QAAQwH,gBAC9DxM,EAAKgJ,eAAehE,GACtBlD,EAAMmG,MAAQjD,EAAU,SACnB,GAAIlD,EAAMmG,OAAS1H,GAAO,KAAK4D,KAAKtC,EAAO+C,WAAY,CAC5D,IAAIqD,EAAQ,gBAAgB3F,KAAKR,EAAMmG,OACvCnG,EAAMmG,MAAQ,KACd,IAAIwE,EAA+B,KAApB5K,EAAO+C,WA/B5B,SAA0B8H,EAASC,GACjC,IAAK,IAAIX,EAAI,EAAGA,EAAIU,EAAQ/K,OAAQqK,IAAK,CACvC,IAAIY,EAAOF,EAAQV,GACnB,IAAKY,EAAK,IAAMA,EAAK,GAAGzI,KAAKiH,EAAauB,EAASC,EAAK,KAAM,OAAOA,EAAK,IA4B9BC,CAAiB7M,EAAKiI,EAAM,IAAKA,EAAM,IAC7EnF,EAAOlD,EAAWe,QAAQF,EAAQgM,GAClCK,EAAUrB,EAAaxD,EAAM,IAAI,GAAOhD,EAASwG,EAAaxD,EAAM,IAAI,GAC5EnG,EAAMiB,MAAQ,SAAUlB,EAAQC,GAC9B,OAAID,EAAOQ,MAAMyK,GAAS,IACxBhL,EAAMiB,MAAQlC,EACdiB,EAAMc,WAAad,EAAMiL,UAAY,KAC9B,MA1EjB,SAAqBlL,EAAQmL,EAAKrE,GAChC,IAAIsE,EAAMpL,EAAO+C,UAAWgG,EAAQqC,EAAIC,OAAOF,GAO/C,OANIpC,GAAS,EACX/I,EAAOsL,OAAOF,EAAItL,OAASiJ,GAClBqC,EAAI5K,MAAM,WACnBR,EAAOsL,OAAOF,EAAItL,QACbE,EAAOQ,MAAM2K,GAAK,IAAQnL,EAAOQ,MAAM4K,IAEvCtE,EAoEMyE,CAAYvL,EAAQoD,EAAQnD,EAAMiL,UAAUhK,MAAMlB,EAAQC,EAAMc,cAEzEd,EAAMiL,UAAYjK,EAClBhB,EAAMc,WAAahD,EAAWwE,WAAWtB,EAAMwE,EAASrF,OAAOH,EAAMyK,UAAW,GAAI,UAC3EzK,EAAMmG,QACfnG,EAAMmG,OAASpG,EAAO+C,UAClB/C,EAAOyG,QAAOxG,EAAMmG,OAAS,MAEnC,OAAOU,EAGT,MAAO,CACLvE,WAAY,WAEV,MAAO,CAACrB,MAAOlC,EAAMoH,MAAO,KAAM8E,UAAW,KAAMnK,WAAY,KAAM2J,UADzD3M,EAAWwE,WAAWkD,KAIpChD,UAAW,SAAUxC,GACnB,IAAIuL,EAIJ,OAHIvL,EAAMc,aACRyK,EAAQzN,EAAW0E,UAAUxC,EAAMiL,UAAWjL,EAAMc,aAE/C,CAACG,MAAOjB,EAAMiB,MAAOkF,MAAOnG,EAAMmG,MACjC8E,UAAWjL,EAAMiL,UAAWnK,WAAYyK,EACxCd,UAAW3M,EAAW0E,UAAUgD,EAAUxF,EAAMyK,aAG1DxJ,MAAO,SAAUlB,EAAQC,GACvB,OAAOA,EAAMiB,MAAMlB,EAAQC,IAG7BG,OAAQ,SAAUH,EAAOyD,EAAWC,GAClC,OAAK1D,EAAMiL,WAAa,UAAU5I,KAAKoB,GAC9B+B,EAASrF,OAAOH,EAAMyK,UAAWhH,EAAWC,GAC5C1D,EAAMiL,UAAU9K,OAChBH,EAAMiL,UAAU9K,OAAOH,EAAMc,WAAY2C,EAAWC,GAEpD5F,EAAW8F,MAGtBC,UAAW,SAAU7D,GACnB,MAAO,CAACA,MAAOA,EAAMc,YAAcd,EAAMyK,UAAWzJ,KAAMhB,EAAMiL,WAAazF,OAGhF,MAAO,aAAc,OAExB1H,EAAWwG,WAAW,YAAa,aAjJjCC,CAAIC,EAAQ,GAAyBA,EAAQ,IAAeA,EAAQ,IAA6BA,EAAQ","file":"static/js/18.cdf29a63.chunk.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../htmlmixed/htmlmixed\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../htmlmixed/htmlmixed\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var paramData = { noEndTag: true, soyState: \"param-def\" };\n  var tags = {\n    \"alias\": { noEndTag: true },\n    \"delpackage\": { noEndTag: true },\n    \"namespace\": { noEndTag: true, soyState: \"namespace-def\" },\n    \"@param\": paramData,\n    \"@param?\": paramData,\n    \"@inject\": paramData,\n    \"@inject?\": paramData,\n    \"@state\": paramData,\n    \"template\": { soyState: \"templ-def\", variableScope: true},\n    \"literal\": { },\n    \"msg\": {},\n    \"fallbackmsg\": { noEndTag: true, reduceIndent: true},\n    \"select\": {},\n    \"plural\": {},\n    \"let\": { soyState: \"var-def\" },\n    \"if\": {},\n    \"elseif\": { noEndTag: true, reduceIndent: true},\n    \"else\": { noEndTag: true, reduceIndent: true},\n    \"switch\": {},\n    \"case\": { noEndTag: true, reduceIndent: true},\n    \"default\": { noEndTag: true, reduceIndent: true},\n    \"foreach\": { variableScope: true, soyState: \"for-loop\" },\n    \"ifempty\": { noEndTag: true, reduceIndent: true},\n    \"for\": { variableScope: true, soyState: \"for-loop\" },\n    \"call\": { soyState: \"templ-ref\" },\n    \"param\": { soyState: \"param-ref\"},\n    \"print\": { noEndTag: true },\n    \"deltemplate\": { soyState: \"templ-def\", variableScope: true},\n    \"delcall\": { soyState: \"templ-ref\" },\n    \"log\": {},\n    \"element\": { variableScope: true },\n  };\n\n  var indentingTags = Object.keys(tags).filter(function(tag) {\n    return !tags[tag].noEndTag || tags[tag].reduceIndent;\n  });\n\n  CodeMirror.defineMode(\"soy\", function(config) {\n    var textMode = CodeMirror.getMode(config, \"text/plain\");\n    var modes = {\n      html: CodeMirror.getMode(config, {name: \"text/html\", multilineTagIndentFactor: 2, multilineTagIndentPastTag: false}),\n      attributes: textMode,\n      text: textMode,\n      uri: textMode,\n      trusted_resource_uri: textMode,\n      css: CodeMirror.getMode(config, \"text/css\"),\n      js: CodeMirror.getMode(config, {name: \"text/javascript\", statementIndent: 2 * config.indentUnit})\n    };\n\n    function last(array) {\n      return array[array.length - 1];\n    }\n\n    function tokenUntil(stream, state, untilRegExp) {\n      if (stream.sol()) {\n        for (var indent = 0; indent < state.indent; indent++) {\n          if (!stream.eat(/\\s/)) break;\n        }\n        if (indent) return null;\n      }\n      var oldString = stream.string;\n      var match = untilRegExp.exec(oldString.substr(stream.pos));\n      if (match) {\n        // We don't use backUp because it backs up just the position, not the state.\n        // This uses an undocumented API.\n        stream.string = oldString.substr(0, stream.pos + match.index);\n      }\n      var result = stream.hideFirstChars(state.indent, function() {\n        var localState = last(state.localStates);\n        return localState.mode.token(stream, localState.state);\n      });\n      stream.string = oldString;\n      return result;\n    }\n\n    function contains(list, element) {\n      while (list) {\n        if (list.element === element) return true;\n        list = list.next;\n      }\n      return false;\n    }\n\n    function prepend(list, element) {\n      return {\n        element: element,\n        next: list\n      };\n    }\n\n    function popcontext(state) {\n      if (!state.context) return;\n      if (state.context.scope) {\n        state.variables = state.context.scope;\n      }\n      state.context = state.context.previousContext;\n    }\n\n    // Reference a variable `name` in `list`.\n    // Let `loose` be truthy to ignore missing identifiers.\n    function ref(list, name, loose) {\n      return contains(list, name) ? \"variable-2\" : (loose ? \"variable\" : \"variable-2 error\");\n    }\n\n    // Data for an open soy tag.\n    function Context(previousContext, tag, scope) {\n      this.previousContext = previousContext;\n      this.tag = tag;\n      this.kind = null;\n      this.scope = scope;\n    }\n\n    function expression(stream, state) {\n      var match;\n      if (stream.match(/[[]/)) {\n        state.soyState.push(\"list-literal\");\n        state.context = new Context(state.context, \"list-literal\", state.variables);\n        state.lookupVariables = false;\n        return null;\n      } else if (stream.match(/map\\b/)) {\n        state.soyState.push(\"map-literal\");\n        return \"keyword\";\n      } else if (stream.match(/record\\b/)) {\n        state.soyState.push(\"record-literal\");\n        return \"keyword\";\n      } else if (stream.match(/([\\w]+)(?=\\()/)) {\n        return \"variable callee\";\n      } else if (match = stream.match(/^[\"']/)) {\n        state.soyState.push(\"string\");\n        state.quoteKind = match[0];\n        return \"string\";\n      } else if (stream.match(/^[(]/)) {\n        state.soyState.push(\"open-parentheses\");\n        return null;\n      } else if (stream.match(/(null|true|false)(?!\\w)/) ||\n          stream.match(/0x([0-9a-fA-F]{2,})/) ||\n          stream.match(/-?([0-9]*[.])?[0-9]+(e[0-9]*)?/)) {\n        return \"atom\";\n      } else if (stream.match(/(\\||[+\\-*\\/%]|[=!]=|\\?:|[<>]=?)/)) {\n        // Tokenize filter, binary, null propagator, and equality operators.\n        return \"operator\";\n      } else if (match = stream.match(/^\\$([\\w]+)/)) {\n        return ref(state.variables, match[1], !state.lookupVariables);\n      } else if (match = stream.match(/^\\w+/)) {\n        return /^(?:as|and|or|not|in|if)$/.test(match[0]) ? \"keyword\" : null;\n      }\n\n      stream.next();\n      return null;\n    }\n\n    return {\n      startState: function() {\n        return {\n          soyState: [],\n          variables: prepend(null, 'ij'),\n          scopes: null,\n          indent: 0,\n          quoteKind: null,\n          context: null,\n          lookupVariables: true, // Is unknown variables considered an error\n          localStates: [{\n            mode: modes.html,\n            state: CodeMirror.startState(modes.html)\n          }]\n        };\n      },\n\n      copyState: function(state) {\n        return {\n          tag: state.tag, // Last seen Soy tag.\n          soyState: state.soyState.concat([]),\n          variables: state.variables,\n          context: state.context,\n          indent: state.indent, // Indentation of the following line.\n          quoteKind: state.quoteKind,\n          lookupVariables: state.lookupVariables,\n          localStates: state.localStates.map(function(localState) {\n            return {\n              mode: localState.mode,\n              state: CodeMirror.copyState(localState.mode, localState.state)\n            };\n          })\n        };\n      },\n\n      token: function(stream, state) {\n        var match;\n\n        switch (last(state.soyState)) {\n          case \"comment\":\n            if (stream.match(/^.*?\\*\\//)) {\n              state.soyState.pop();\n            } else {\n              stream.skipToEnd();\n            }\n            if (!state.context || !state.context.scope) {\n              var paramRe = /@param\\??\\s+(\\S+)/g;\n              var current = stream.current();\n              for (var match; (match = paramRe.exec(current)); ) {\n                state.variables = prepend(state.variables, match[1]);\n              }\n            }\n            return \"comment\";\n\n          case \"string\":\n            var match = stream.match(/^.*?([\"']|\\\\[\\s\\S])/);\n            if (!match) {\n              stream.skipToEnd();\n            } else if (match[1] == state.quoteKind) {\n              state.quoteKind = null;\n              state.soyState.pop();\n            }\n            return \"string\";\n        }\n\n        if (!state.soyState.length || last(state.soyState) != \"literal\") {\n          if (stream.match(/^\\/\\*/)) {\n            state.soyState.push(\"comment\");\n            return \"comment\";\n          } else if (stream.match(stream.sol() ? /^\\s*\\/\\/.*/ : /^\\s+\\/\\/.*/)) {\n            return \"comment\";\n          }\n        }\n\n        switch (last(state.soyState)) {\n          case \"templ-def\":\n            if (match = stream.match(/^\\.?([\\w]+(?!\\.[\\w]+)*)/)) {\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"templ-ref\":\n            if (match = stream.match(/(\\.?[a-zA-Z_][a-zA-Z_0-9]+)+/)) {\n              state.soyState.pop();\n              // If the first character is '.', it can only be a local template.\n              if (match[0][0] == '.') {\n                return \"variable-2\"\n              }\n              // Otherwise\n              return \"variable\";\n            }\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.soyState.pop();\n              return ref(state.variables, match[1], !state.lookupVariables);\n            }\n\n            stream.next();\n            return null;\n\n          case \"namespace-def\":\n            if (match = stream.match(/^\\.?([\\w\\.]+)/)) {\n              state.soyState.pop();\n              return \"variable\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-def\":\n            if (match = stream.match(/^\\w+/)) {\n              state.variables = prepend(state.variables, match[0]);\n              state.soyState.pop();\n              state.soyState.push(\"param-type\");\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-ref\":\n            if (match = stream.match(/^\\w+/)) {\n              state.soyState.pop();\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"open-parentheses\":\n            if (stream.match(/[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n\n          case \"param-type\":\n            var peekChar = stream.peek();\n            if (\"}]=>,\".indexOf(peekChar) != -1) {\n              state.soyState.pop();\n              return null;\n            } else if (peekChar == \"[\") {\n              state.soyState.push('param-type-record');\n              return null;\n            } else if (peekChar == \"(\") {\n              state.soyState.push('param-type-template');\n              return null;\n            } else if (peekChar == \"<\") {\n              state.soyState.push('param-type-parameter');\n              return null;\n            } else if (match = stream.match(/^([\\w]+|[?])/)) {\n              return \"type\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-record\":\n            var peekChar = stream.peek();\n            if (peekChar == \"]\") {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"property\";\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-parameter\":\n            if (stream.match(/^[>]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/^[<,]/)) {\n              state.soyState.push('param-type');\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"param-type-template\":\n            if (stream.match(/[>]/)) {\n              state.soyState.pop();\n              state.soyState.push('param-type');\n              return null;\n            }\n            if (stream.match(/^\\w+/)) {\n              state.soyState.push('param-type');\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"var-def\":\n            if (match = stream.match(/^\\$([\\w]+)/)) {\n              state.variables = prepend(state.variables, match[1]);\n              state.soyState.pop();\n              return \"def\";\n            }\n            stream.next();\n            return null;\n\n          case \"for-loop\":\n            if (stream.match(/\\bin\\b/)) {\n              state.soyState.pop();\n              return \"keyword\";\n            }\n            if (stream.peek() == \"$\") {\n              state.soyState.push('var-def');\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"record-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\")\n              state.soyState.push(\"record-key\")\n              return null;\n            }\n            stream.next()\n            return null;\n\n          case \"map-literal\":\n            if (stream.match(/^[)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            if (stream.match(/[(,]/)) {\n              state.soyState.push(\"map-value\")\n              state.soyState.push(\"map-value\")\n              return null;\n            }\n            stream.next()\n            return null;\n\n          case \"list-literal\":\n            if (stream.match(/\\]/)) {\n              state.soyState.pop();\n              state.lookupVariables = true;\n              popcontext(state);\n              return null;\n            }\n            if (stream.match(/\\bfor\\b/)) {\n              state.lookupVariables = true;\n              state.soyState.push('for-loop');\n              return \"keyword\";\n            }\n            return expression(stream, state);\n\n          case \"record-key\":\n            if (stream.match(/[\\w]+/)) {\n              return \"property\";\n            }\n            if (stream.match(/^[:]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            stream.next();\n            return null;\n\n          case \"map-value\":\n            if (stream.peek() == \")\" || stream.peek() == \",\" || stream.match(/^[:)]/)) {\n              state.soyState.pop();\n              return null;\n            }\n            return expression(stream, state);\n\n          case \"import\":\n            if (stream.eat(\";\")) {\n              state.soyState.pop();\n              state.indent -= 2 * config.indentUnit;\n              return null;\n            }\n            if (stream.match(/\\w+(?=\\s+as)/)) {\n              return \"variable\";\n            }\n            if (match = stream.match(/\\w+/)) {\n              return /(from|as)/.test(match[0]) ? \"keyword\" : \"def\";\n            }\n            if (match = stream.match(/^[\"']/)) {\n              state.soyState.push(\"string\");\n              state.quoteKind = match[0];\n              return \"string\";\n            }\n            stream.next();\n            return null;\n\n          case \"tag\":\n            var endTag = state.tag[0] == \"/\";\n            var tagName = endTag ? state.tag.substring(1) : state.tag;\n            var tag = tags[tagName];\n            if (stream.match(/^\\/?}/)) {\n              var selfClosed = stream.current() == \"/}\";\n              if (selfClosed && !endTag) {\n                popcontext(state);\n              }\n              if (state.tag == \"/template\" || state.tag == \"/deltemplate\") {\n                state.variables = prepend(null, 'ij');\n                state.indent = 0;\n              } else {\n                state.indent -= config.indentUnit *\n                    (selfClosed || indentingTags.indexOf(state.tag) == -1 ? 2 : 1);\n              }\n              state.soyState.pop();\n              return \"keyword\";\n            } else if (stream.match(/^([\\w?]+)(?==)/)) {\n              if (state.context && state.context.tag == tagName && stream.current() == \"kind\" && (match = stream.match(/^=\"([^\"]+)/, false))) {\n                var kind = match[1];\n                state.context.kind = kind;\n                var mode = modes[kind] || modes.html;\n                var localState = last(state.localStates);\n                if (localState.mode.indent) {\n                  state.indent += localState.mode.indent(localState.state, \"\", \"\");\n                }\n                state.localStates.push({\n                  mode: mode,\n                  state: CodeMirror.startState(mode)\n                });\n              }\n              return \"attribute\";\n            }\n            return expression(stream, state);\n\n          case \"literal\":\n            if (stream.match(/^(?=\\{\\/literal})/)) {\n              state.soyState.pop();\n              return this.token(stream, state);\n            }\n            return tokenUntil(stream, state, /\\{\\/literal}/);\n        }\n\n        if (stream.match(/^\\{literal}/)) {\n          state.indent += config.indentUnit;\n          state.soyState.push(\"literal\");\n          state.context = new Context(state.context, \"literal\", state.variables);\n          return \"keyword\";\n\n        // A tag-keyword must be followed by whitespace, comment or a closing tag.\n        } else if (match = stream.match(/^\\{([/@\\\\]?\\w+\\??)(?=$|[\\s}]|\\/[/*])/)) {\n          var prevTag = state.tag;\n          state.tag = match[1];\n          var endTag = state.tag[0] == \"/\";\n          var indentingTag = !!tags[state.tag];\n          var tagName = endTag ? state.tag.substring(1) : state.tag;\n          var tag = tags[tagName];\n          if (state.tag != \"/switch\")\n            state.indent += ((endTag || tag && tag.reduceIndent) && prevTag != \"switch\" ? 1 : 2) * config.indentUnit;\n\n          state.soyState.push(\"tag\");\n          var tagError = false;\n          if (tag) {\n            if (!endTag) {\n              if (tag.soyState) state.soyState.push(tag.soyState);\n            }\n            // If a new tag, open a new context.\n            if (!tag.noEndTag && (indentingTag || !endTag)) {\n              state.context = new Context(state.context, state.tag, tag.variableScope ? state.variables : null);\n            // Otherwise close the current context.\n            } else if (endTag) {\n              if (!state.context || state.context.tag != tagName) {\n                tagError = true;\n              } else if (state.context) {\n                if (state.context.kind) {\n                  state.localStates.pop();\n                  var localState = last(state.localStates);\n                  if (localState.mode.indent) {\n                    state.indent -= localState.mode.indent(localState.state, \"\", \"\");\n                  }\n                }\n                popcontext(state);\n              }\n            }\n          } else if (endTag) {\n            // Assume all tags with a closing tag are defined in the config.\n            tagError = true;\n          }\n          return (tagError ? \"error \" : \"\") + \"keyword\";\n\n        // Not a tag-keyword; it's an implicit print tag.\n        } else if (stream.eat('{')) {\n          state.tag = \"print\";\n          state.indent += 2 * config.indentUnit;\n          state.soyState.push(\"tag\");\n          return \"keyword\";\n        } else if (!state.context && stream.match(/\\bimport\\b/)) {\n          state.soyState.push(\"import\");\n          state.indent += 2 * config.indentUnit;\n          return \"keyword\";\n        }\n\n        return tokenUntil(stream, state, /\\{|\\s+\\/\\/|\\/\\*/);\n      },\n\n      indent: function(state, textAfter, line) {\n        var indent = state.indent, top = last(state.soyState);\n        if (top == \"comment\") return CodeMirror.Pass;\n\n        if (top == \"literal\") {\n          if (/^\\{\\/literal}/.test(textAfter)) indent -= config.indentUnit;\n        } else {\n          if (/^\\s*\\{\\/(template|deltemplate)\\b/.test(textAfter)) return 0;\n          if (/^\\{(\\/|(fallbackmsg|elseif|else|ifempty)\\b)/.test(textAfter)) indent -= config.indentUnit;\n          if (state.tag != \"switch\" && /^\\{(case|default)\\b/.test(textAfter)) indent -= config.indentUnit;\n          if (/^\\{\\/switch\\b/.test(textAfter)) indent -= config.indentUnit;\n        }\n        var localState = last(state.localStates);\n        if (indent && localState.mode.indent) {\n          indent += localState.mode.indent(localState.state, textAfter, line);\n        }\n        return indent;\n      },\n\n      innerMode: function(state) {\n        if (state.soyState.length && last(state.soyState) != \"literal\") return null;\n        else return last(state.localStates);\n      },\n\n      electricInput: /^\\s*\\{(\\/|\\/template|\\/deltemplate|\\/switch|fallbackmsg|elseif|else|case|default|ifempty|\\/literal\\})$/,\n      lineComment: \"//\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\",\n      blockCommentContinue: \" * \",\n      useInnerComments: false,\n      fold: \"indent\"\n    };\n  }, \"htmlmixed\");\n\n  CodeMirror.registerHelper(\"wordChars\", \"soy\", /[\\w$]/);\n\n  CodeMirror.registerHelper(\"hintWords\", \"soy\", Object.keys(tags).concat(\n      [\"css\", \"debugger\"]));\n\n  CodeMirror.defineMIME(\"text/x-soy\", \"soy\");\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    }\n  }\n\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    },\n\n    xmlCurrentTag: function(state) {\n      return state.tagName ? {name: state.tagName, close: state.type == \"closeTag\"} : null\n    },\n\n    xmlCurrentContext: function(state) {\n      var context = []\n      for (var cx = state.context; cx; cx = cx.prev)\n        if (cx.tagName) context.push(cx.tagName)\n      return context.reverse()\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../javascript/javascript\"), require(\"../css/css\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../javascript/javascript\", \"../css/css\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var defaultTags = {\n    script: [\n      [\"lang\", /(javascript|babel)/i, \"javascript\"],\n      [\"type\", /^(?:text|application)\\/(?:x-)?(?:java|ecma)script$|^module$|^$/i, \"javascript\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"javascript\"]\n    ],\n    style:  [\n      [\"lang\", /^css$/i, \"css\"],\n      [\"type\", /^(text\\/)?(x-)?(stylesheet|css)$/i, \"css\"],\n      [\"type\", /./, \"text/plain\"],\n      [null, null, \"css\"]\n    ]\n  };\n\n  function maybeBackup(stream, pat, style) {\n    var cur = stream.current(), close = cur.search(pat);\n    if (close > -1) {\n      stream.backUp(cur.length - close);\n    } else if (cur.match(/<\\/?$/)) {\n      stream.backUp(cur.length);\n      if (!stream.match(pat, false)) stream.match(cur);\n    }\n    return style;\n  }\n\n  var attrRegexpCache = {};\n  function getAttrRegexp(attr) {\n    var regexp = attrRegexpCache[attr];\n    if (regexp) return regexp;\n    return attrRegexpCache[attr] = new RegExp(\"\\\\s+\" + attr + \"\\\\s*=\\\\s*('|\\\")?([^'\\\"]+)('|\\\")?\\\\s*\");\n  }\n\n  function getAttrValue(text, attr) {\n    var match = text.match(getAttrRegexp(attr))\n    return match ? /^\\s*(.*?)\\s*$/.exec(match[2])[1] : \"\"\n  }\n\n  function getTagRegexp(tagName, anchored) {\n    return new RegExp((anchored ? \"^\" : \"\") + \"<\\/\\s*\" + tagName + \"\\s*>\", \"i\");\n  }\n\n  function addTags(from, to) {\n    for (var tag in from) {\n      var dest = to[tag] || (to[tag] = []);\n      var source = from[tag];\n      for (var i = source.length - 1; i >= 0; i--)\n        dest.unshift(source[i])\n    }\n  }\n\n  function findMatchingMode(tagInfo, tagText) {\n    for (var i = 0; i < tagInfo.length; i++) {\n      var spec = tagInfo[i];\n      if (!spec[0] || spec[1].test(getAttrValue(tagText, spec[0]))) return spec[2];\n    }\n  }\n\n  CodeMirror.defineMode(\"htmlmixed\", function (config, parserConfig) {\n    var htmlMode = CodeMirror.getMode(config, {\n      name: \"xml\",\n      htmlMode: true,\n      multilineTagIndentFactor: parserConfig.multilineTagIndentFactor,\n      multilineTagIndentPastTag: parserConfig.multilineTagIndentPastTag\n    });\n\n    var tags = {};\n    var configTags = parserConfig && parserConfig.tags, configScript = parserConfig && parserConfig.scriptTypes;\n    addTags(defaultTags, tags);\n    if (configTags) addTags(configTags, tags);\n    if (configScript) for (var i = configScript.length - 1; i >= 0; i--)\n      tags.script.unshift([\"type\", configScript[i].matches, configScript[i].mode])\n\n    function html(stream, state) {\n      var style = htmlMode.token(stream, state.htmlState), tag = /\\btag\\b/.test(style), tagName\n      if (tag && !/[<>\\s\\/]/.test(stream.current()) &&\n          (tagName = state.htmlState.tagName && state.htmlState.tagName.toLowerCase()) &&\n          tags.hasOwnProperty(tagName)) {\n        state.inTag = tagName + \" \"\n      } else if (state.inTag && tag && />$/.test(stream.current())) {\n        var inTag = /^([\\S]+) (.*)/.exec(state.inTag)\n        state.inTag = null\n        var modeSpec = stream.current() == \">\" && findMatchingMode(tags[inTag[1]], inTag[2])\n        var mode = CodeMirror.getMode(config, modeSpec)\n        var endTagA = getTagRegexp(inTag[1], true), endTag = getTagRegexp(inTag[1], false);\n        state.token = function (stream, state) {\n          if (stream.match(endTagA, false)) {\n            state.token = html;\n            state.localState = state.localMode = null;\n            return null;\n          }\n          return maybeBackup(stream, endTag, state.localMode.token(stream, state.localState));\n        };\n        state.localMode = mode;\n        state.localState = CodeMirror.startState(mode, htmlMode.indent(state.htmlState, \"\", \"\"));\n      } else if (state.inTag) {\n        state.inTag += stream.current()\n        if (stream.eol()) state.inTag += \" \"\n      }\n      return style;\n    };\n\n    return {\n      startState: function () {\n        var state = CodeMirror.startState(htmlMode);\n        return {token: html, inTag: null, localMode: null, localState: null, htmlState: state};\n      },\n\n      copyState: function (state) {\n        var local;\n        if (state.localState) {\n          local = CodeMirror.copyState(state.localMode, state.localState);\n        }\n        return {token: state.token, inTag: state.inTag,\n                localMode: state.localMode, localState: local,\n                htmlState: CodeMirror.copyState(htmlMode, state.htmlState)};\n      },\n\n      token: function (stream, state) {\n        return state.token(stream, state);\n      },\n\n      indent: function (state, textAfter, line) {\n        if (!state.localMode || /^\\s*<\\//.test(textAfter))\n          return htmlMode.indent(state.htmlState, textAfter, line);\n        else if (state.localMode.indent)\n          return state.localMode.indent(state.localState, textAfter, line);\n        else\n          return CodeMirror.Pass;\n      },\n\n      innerMode: function (state) {\n        return {state: state.localState || state.htmlState, mode: state.localMode || htmlMode};\n      }\n    };\n  }, \"xml\", \"javascript\", \"css\");\n\n  CodeMirror.defineMIME(\"text/html\", \"htmlmixed\");\n});\n"],"sourceRoot":""}