{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../javascript/javascript\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../javascript/javascript\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"pegjs\", function (config) {\n    var jsMode = CodeMirror.getMode(config, \"javascript\");\n\n    function identifier(stream) {\n      return stream.match(/^[a-zA-Z_][a-zA-Z0-9_]*/);\n    }\n\n    return {\n      startState: function () {\n        return {\n          inString: false,\n          stringType: null,\n          inComment: false,\n          inCharacterClass: false,\n          braced: 0,\n          lhs: true,\n          localState: null\n        };\n      },\n      token: function (stream, state) {\n        if (stream) //check for state changes\n          if (!state.inString && !state.inComment && (stream.peek() == '\"' || stream.peek() == \"'\")) {\n            state.stringType = stream.peek();\n            stream.next(); // Skip quote\n\n            state.inString = true; // Update state\n          }\n\n        if (!state.inString && !state.inComment && stream.match(/^\\/\\*/)) {\n          state.inComment = true;\n        } //return state\n\n\n        if (state.inString) {\n          while (state.inString && !stream.eol()) {\n            if (stream.peek() === state.stringType) {\n              stream.next(); // Skip quote\n\n              state.inString = false; // Clear flag\n            } else if (stream.peek() === '\\\\') {\n              stream.next();\n              stream.next();\n            } else {\n              stream.match(/^.[^\\\\\\\"\\']*/);\n            }\n          }\n\n          return state.lhs ? \"property string\" : \"string\"; // Token style\n        } else if (state.inComment) {\n          while (state.inComment && !stream.eol()) {\n            if (stream.match(/\\*\\//)) {\n              state.inComment = false; // Clear flag\n            } else {\n              stream.match(/^.[^\\*]*/);\n            }\n          }\n\n          return \"comment\";\n        } else if (state.inCharacterClass) {\n          while (state.inCharacterClass && !stream.eol()) {\n            if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./))) {\n              state.inCharacterClass = false;\n            }\n          }\n        } else if (stream.peek() === '[') {\n          stream.next();\n          state.inCharacterClass = true;\n          return 'bracket';\n        } else if (stream.match(/^\\/\\//)) {\n          stream.skipToEnd();\n          return \"comment\";\n        } else if (state.braced || stream.peek() === '{') {\n          if (state.localState === null) {\n            state.localState = CodeMirror.startState(jsMode);\n          }\n\n          var token = jsMode.token(stream, state.localState);\n          var text = stream.current();\n\n          if (!token) {\n            for (var i = 0; i < text.length; i++) {\n              if (text[i] === '{') {\n                state.braced++;\n              } else if (text[i] === '}') {\n                state.braced--;\n              }\n            }\n\n            ;\n          }\n\n          return token;\n        } else if (identifier(stream)) {\n          if (stream.peek() === ':') {\n            return 'variable';\n          }\n\n          return 'variable-2';\n        } else if (['[', ']', '(', ')'].indexOf(stream.peek()) != -1) {\n          stream.next();\n          return 'bracket';\n        } else if (!stream.eatSpace()) {\n          stream.next();\n        }\n\n        return null;\n      }\n    };\n  }, \"javascript\");\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw-server/client/node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/pegjs/pegjs.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","jsMode","getMode","identifier","stream","match","startState","inString","stringType","inComment","inCharacterClass","braced","lhs","localState","token","state","peek","next","eol","skipToEnd","text","current","i","length","indexOf","eatSpace"],"mappings":"AAAA;AACA;AAEA,CAAC,UAASA,GAAT,EAAc;AACb,MAAI,OAAOC,OAAP,IAAkB,QAAlB,IAA8B,OAAOC,MAAP,IAAiB,QAAnD,EAA6D;AAC3DF,IAAAA,GAAG,CAACG,OAAO,CAAC,sBAAD,CAAR,EAAkCA,OAAO,CAAC,0BAAD,CAAzC,CAAH,CADF,KAEK,IAAI,OAAOC,MAAP,IAAiB,UAAjB,IAA+BA,MAAM,CAACC,GAA1C,EAA+C;AAClDD,IAAAA,MAAM,CAAC,CAAC,sBAAD,EAAyB,0BAAzB,CAAD,EAAuDJ,GAAvD,CAAN,CADG,KAEA;AACHA,IAAAA,GAAG,CAACM,UAAD,CAAH;AACH,CAPD,EAOG,UAASA,UAAT,EAAqB;AACxB;;AAEAA,EAAAA,UAAU,CAACC,UAAX,CAAsB,OAAtB,EAA+B,UAAUC,MAAV,EAAkB;AAC/C,QAAIC,MAAM,GAAGH,UAAU,CAACI,OAAX,CAAmBF,MAAnB,EAA2B,YAA3B,CAAb;;AAEA,aAASG,UAAT,CAAoBC,MAApB,EAA4B;AAC1B,aAAOA,MAAM,CAACC,KAAP,CAAa,yBAAb,CAAP;AACD;;AAED,WAAO;AACLC,MAAAA,UAAU,EAAE,YAAY;AACtB,eAAO;AACLC,UAAAA,QAAQ,EAAE,KADL;AAELC,UAAAA,UAAU,EAAE,IAFP;AAGLC,UAAAA,SAAS,EAAE,KAHN;AAILC,UAAAA,gBAAgB,EAAE,KAJb;AAKLC,UAAAA,MAAM,EAAE,CALH;AAMLC,UAAAA,GAAG,EAAE,IANA;AAOLC,UAAAA,UAAU,EAAE;AAPP,SAAP;AASD,OAXI;AAYLC,MAAAA,KAAK,EAAE,UAAUV,MAAV,EAAkBW,KAAlB,EAAyB;AAC9B,YAAIX,MAAJ,EAEA;AACA,cAAI,CAACW,KAAK,CAACR,QAAP,IAAmB,CAACQ,KAAK,CAACN,SAA1B,KAAyCL,MAAM,CAACY,IAAP,MAAiB,GAAlB,IAA2BZ,MAAM,CAACY,IAAP,MAAiB,GAApF,CAAJ,EAA+F;AAC7FD,YAAAA,KAAK,CAACP,UAAN,GAAmBJ,MAAM,CAACY,IAAP,EAAnB;AACAZ,YAAAA,MAAM,CAACa,IAAP,GAF6F,CAE9E;;AACfF,YAAAA,KAAK,CAACR,QAAN,GAAiB,IAAjB,CAH6F,CAGtE;AACxB;;AACD,YAAI,CAACQ,KAAK,CAACR,QAAP,IAAmB,CAACQ,KAAK,CAACN,SAA1B,IAAuCL,MAAM,CAACC,KAAP,CAAa,OAAb,CAA3C,EAAkE;AAChEU,UAAAA,KAAK,CAACN,SAAN,GAAkB,IAAlB;AACD,SAX6B,CAa9B;;;AACA,YAAIM,KAAK,CAACR,QAAV,EAAoB;AAClB,iBAAOQ,KAAK,CAACR,QAAN,IAAkB,CAACH,MAAM,CAACc,GAAP,EAA1B,EAAwC;AACtC,gBAAId,MAAM,CAACY,IAAP,OAAkBD,KAAK,CAACP,UAA5B,EAAwC;AACtCJ,cAAAA,MAAM,CAACa,IAAP,GADsC,CACvB;;AACfF,cAAAA,KAAK,CAACR,QAAN,GAAiB,KAAjB,CAFsC,CAEd;AACzB,aAHD,MAGO,IAAIH,MAAM,CAACY,IAAP,OAAkB,IAAtB,EAA4B;AACjCZ,cAAAA,MAAM,CAACa,IAAP;AACAb,cAAAA,MAAM,CAACa,IAAP;AACD,aAHM,MAGA;AACLb,cAAAA,MAAM,CAACC,KAAP,CAAa,cAAb;AACD;AACF;;AACD,iBAAOU,KAAK,CAACH,GAAN,GAAY,iBAAZ,GAAgC,QAAvC,CAZkB,CAY+B;AAClD,SAbD,MAaO,IAAIG,KAAK,CAACN,SAAV,EAAqB;AAC1B,iBAAOM,KAAK,CAACN,SAAN,IAAmB,CAACL,MAAM,CAACc,GAAP,EAA3B,EAAyC;AACvC,gBAAId,MAAM,CAACC,KAAP,CAAa,MAAb,CAAJ,EAA0B;AACxBU,cAAAA,KAAK,CAACN,SAAN,GAAkB,KAAlB,CADwB,CACC;AAC1B,aAFD,MAEO;AACLL,cAAAA,MAAM,CAACC,KAAP,CAAa,UAAb;AACD;AACF;;AACD,iBAAO,SAAP;AACD,SATM,MASA,IAAIU,KAAK,CAACL,gBAAV,EAA4B;AAC/B,iBAAOK,KAAK,CAACL,gBAAN,IAA0B,CAACN,MAAM,CAACc,GAAP,EAAlC,EAAgD;AAC9C,gBAAI,EAAEd,MAAM,CAACC,KAAP,CAAa,WAAb,KAA6BD,MAAM,CAACC,KAAP,CAAa,MAAb,CAA/B,CAAJ,EAA0D;AACxDU,cAAAA,KAAK,CAACL,gBAAN,GAAyB,KAAzB;AACD;AACF;AACJ,SANM,MAMA,IAAIN,MAAM,CAACY,IAAP,OAAkB,GAAtB,EAA2B;AAChCZ,UAAAA,MAAM,CAACa,IAAP;AACAF,UAAAA,KAAK,CAACL,gBAAN,GAAyB,IAAzB;AACA,iBAAO,SAAP;AACD,SAJM,MAIA,IAAIN,MAAM,CAACC,KAAP,CAAa,OAAb,CAAJ,EAA2B;AAChCD,UAAAA,MAAM,CAACe,SAAP;AACA,iBAAO,SAAP;AACD,SAHM,MAGA,IAAIJ,KAAK,CAACJ,MAAN,IAAgBP,MAAM,CAACY,IAAP,OAAkB,GAAtC,EAA2C;AAChD,cAAID,KAAK,CAACF,UAAN,KAAqB,IAAzB,EAA+B;AAC7BE,YAAAA,KAAK,CAACF,UAAN,GAAmBf,UAAU,CAACQ,UAAX,CAAsBL,MAAtB,CAAnB;AACD;;AACD,cAAIa,KAAK,GAAGb,MAAM,CAACa,KAAP,CAAaV,MAAb,EAAqBW,KAAK,CAACF,UAA3B,CAAZ;AACA,cAAIO,IAAI,GAAGhB,MAAM,CAACiB,OAAP,EAAX;;AACA,cAAI,CAACP,KAAL,EAAY;AACV,iBAAK,IAAIQ,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,IAAI,CAACG,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,kBAAIF,IAAI,CAACE,CAAD,CAAJ,KAAY,GAAhB,EAAqB;AACnBP,gBAAAA,KAAK,CAACJ,MAAN;AACD,eAFD,MAEO,IAAIS,IAAI,CAACE,CAAD,CAAJ,KAAY,GAAhB,EAAqB;AAC1BP,gBAAAA,KAAK,CAACJ,MAAN;AACD;AACF;;AAAA;AACF;;AACD,iBAAOG,KAAP;AACD,SAhBM,MAgBA,IAAIX,UAAU,CAACC,MAAD,CAAd,EAAwB;AAC7B,cAAIA,MAAM,CAACY,IAAP,OAAkB,GAAtB,EAA2B;AACzB,mBAAO,UAAP;AACD;;AACD,iBAAO,YAAP;AACD,SALM,MAKA,IAAI,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,EAAqBQ,OAArB,CAA6BpB,MAAM,CAACY,IAAP,EAA7B,KAA+C,CAAC,CAApD,EAAuD;AAC5DZ,UAAAA,MAAM,CAACa,IAAP;AACA,iBAAO,SAAP;AACD,SAHM,MAGA,IAAI,CAACb,MAAM,CAACqB,QAAP,EAAL,EAAwB;AAC7BrB,UAAAA,MAAM,CAACa,IAAP;AACD;;AACD,eAAO,IAAP;AACD;AAzFI,KAAP;AA2FD,GAlGD,EAkGG,YAlGH;AAoGC,CA9GD","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../javascript/javascript\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../javascript/javascript\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"pegjs\", function (config) {\n  var jsMode = CodeMirror.getMode(config, \"javascript\");\n\n  function identifier(stream) {\n    return stream.match(/^[a-zA-Z_][a-zA-Z0-9_]*/);\n  }\n\n  return {\n    startState: function () {\n      return {\n        inString: false,\n        stringType: null,\n        inComment: false,\n        inCharacterClass: false,\n        braced: 0,\n        lhs: true,\n        localState: null\n      };\n    },\n    token: function (stream, state) {\n      if (stream)\n\n      //check for state changes\n      if (!state.inString && !state.inComment && ((stream.peek() == '\"') || (stream.peek() == \"'\"))) {\n        state.stringType = stream.peek();\n        stream.next(); // Skip quote\n        state.inString = true; // Update state\n      }\n      if (!state.inString && !state.inComment && stream.match(/^\\/\\*/)) {\n        state.inComment = true;\n      }\n\n      //return state\n      if (state.inString) {\n        while (state.inString && !stream.eol()) {\n          if (stream.peek() === state.stringType) {\n            stream.next(); // Skip quote\n            state.inString = false; // Clear flag\n          } else if (stream.peek() === '\\\\') {\n            stream.next();\n            stream.next();\n          } else {\n            stream.match(/^.[^\\\\\\\"\\']*/);\n          }\n        }\n        return state.lhs ? \"property string\" : \"string\"; // Token style\n      } else if (state.inComment) {\n        while (state.inComment && !stream.eol()) {\n          if (stream.match(/\\*\\//)) {\n            state.inComment = false; // Clear flag\n          } else {\n            stream.match(/^.[^\\*]*/);\n          }\n        }\n        return \"comment\";\n      } else if (state.inCharacterClass) {\n          while (state.inCharacterClass && !stream.eol()) {\n            if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./))) {\n              state.inCharacterClass = false;\n            }\n          }\n      } else if (stream.peek() === '[') {\n        stream.next();\n        state.inCharacterClass = true;\n        return 'bracket';\n      } else if (stream.match(/^\\/\\//)) {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (state.braced || stream.peek() === '{') {\n        if (state.localState === null) {\n          state.localState = CodeMirror.startState(jsMode);\n        }\n        var token = jsMode.token(stream, state.localState);\n        var text = stream.current();\n        if (!token) {\n          for (var i = 0; i < text.length; i++) {\n            if (text[i] === '{') {\n              state.braced++;\n            } else if (text[i] === '}') {\n              state.braced--;\n            }\n          };\n        }\n        return token;\n      } else if (identifier(stream)) {\n        if (stream.peek() === ':') {\n          return 'variable';\n        }\n        return 'variable-2';\n      } else if (['[', ']', '(', ')'].indexOf(stream.peek()) != -1) {\n        stream.next();\n        return 'bracket';\n      } else if (!stream.eatSpace()) {\n        stream.next();\n      }\n      return null;\n    }\n  };\n}, \"javascript\");\n\n});\n"]},"metadata":{},"sourceType":"script"}