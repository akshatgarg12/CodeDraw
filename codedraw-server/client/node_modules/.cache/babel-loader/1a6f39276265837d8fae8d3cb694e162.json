{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"toml\", function () {\n    return {\n      startState: function () {\n        return {\n          inString: false,\n          stringType: \"\",\n          lhs: true,\n          inArray: 0\n        };\n      },\n      token: function (stream, state) {\n        //check for state changes\n        if (!state.inString && (stream.peek() == '\"' || stream.peek() == \"'\")) {\n          state.stringType = stream.peek();\n          stream.next(); // Skip quote\n\n          state.inString = true; // Update state\n        }\n\n        if (stream.sol() && state.inArray === 0) {\n          state.lhs = true;\n        } //return state\n\n\n        if (state.inString) {\n          while (state.inString && !stream.eol()) {\n            if (stream.peek() === state.stringType) {\n              stream.next(); // Skip quote\n\n              state.inString = false; // Clear flag\n            } else if (stream.peek() === '\\\\') {\n              stream.next();\n              stream.next();\n            } else {\n              stream.match(/^.[^\\\\\\\"\\']*/);\n            }\n          }\n\n          return state.lhs ? \"property string\" : \"string\"; // Token style\n        } else if (state.inArray && stream.peek() === ']') {\n          stream.next();\n          state.inArray--;\n          return 'bracket';\n        } else if (state.lhs && stream.peek() === '[' && stream.skipTo(']')) {\n          stream.next(); //skip closing ]\n          // array of objects has an extra open & close []\n\n          if (stream.peek() === ']') stream.next();\n          return \"atom\";\n        } else if (stream.peek() === \"#\") {\n          stream.skipToEnd();\n          return \"comment\";\n        } else if (stream.eatSpace()) {\n          return null;\n        } else if (state.lhs && stream.eatWhile(function (c) {\n          return c != '=' && c != ' ';\n        })) {\n          return \"property\";\n        } else if (state.lhs && stream.peek() === \"=\") {\n          stream.next();\n          state.lhs = false;\n          return null;\n        } else if (!state.lhs && stream.match(/^\\d\\d\\d\\d[\\d\\-\\:\\.T]*Z/)) {\n          return 'atom'; //date\n        } else if (!state.lhs && (stream.match('true') || stream.match('false'))) {\n          return 'atom';\n        } else if (!state.lhs && stream.peek() === '[') {\n          state.inArray++;\n          stream.next();\n          return 'bracket';\n        } else if (!state.lhs && stream.match(/^\\-?\\d+(?:\\.\\d+)?/)) {\n          return 'number';\n        } else if (!stream.eatSpace()) {\n          stream.next();\n        }\n\n        return null;\n      }\n    };\n  });\n  CodeMirror.defineMIME('text/x-toml', 'toml');\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw/node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/toml/toml.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","startState","inString","stringType","lhs","inArray","token","stream","state","peek","next","sol","eol","match","skipTo","skipToEnd","eatSpace","eatWhile","c","defineMIME"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"toml\", function () {\n  return {\n    startState: function () {\n      return {\n        inString: false,\n        stringType: \"\",\n        lhs: true,\n        inArray: 0\n      };\n    },\n    token: function (stream, state) {\n      //check for state changes\n      if (!state.inString && ((stream.peek() == '\"') || (stream.peek() == \"'\"))) {\n        state.stringType = stream.peek();\n        stream.next(); // Skip quote\n        state.inString = true; // Update state\n      }\n      if (stream.sol() && state.inArray === 0) {\n        state.lhs = true;\n      }\n      //return state\n      if (state.inString) {\n        while (state.inString && !stream.eol()) {\n          if (stream.peek() === state.stringType) {\n            stream.next(); // Skip quote\n            state.inString = false; // Clear flag\n          } else if (stream.peek() === '\\\\') {\n            stream.next();\n            stream.next();\n          } else {\n            stream.match(/^.[^\\\\\\\"\\']*/);\n          }\n        }\n        return state.lhs ? \"property string\" : \"string\"; // Token style\n      } else if (state.inArray && stream.peek() === ']') {\n        stream.next();\n        state.inArray--;\n        return 'bracket';\n      } else if (state.lhs && stream.peek() === '[' && stream.skipTo(']')) {\n        stream.next();//skip closing ]\n        // array of objects has an extra open & close []\n        if (stream.peek() === ']') stream.next();\n        return \"atom\";\n      } else if (stream.peek() === \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (stream.eatSpace()) {\n        return null;\n      } else if (state.lhs && stream.eatWhile(function (c) { return c != '=' && c != ' '; })) {\n        return \"property\";\n      } else if (state.lhs && stream.peek() === \"=\") {\n        stream.next();\n        state.lhs = false;\n        return null;\n      } else if (!state.lhs && stream.match(/^\\d\\d\\d\\d[\\d\\-\\:\\.T]*Z/)) {\n        return 'atom'; //date\n      } else if (!state.lhs && (stream.match('true') || stream.match('false'))) {\n        return 'atom';\n      } else if (!state.lhs && stream.peek() === '[') {\n        state.inArray++;\n        stream.next();\n        return 'bracket';\n      } else if (!state.lhs && stream.match(/^\\-?\\d+(?:\\.\\d+)?/)) {\n        return 'number';\n      } else if (!stream.eatSpace()) {\n        stream.next();\n      }\n      return null;\n    }\n  };\n});\n\nCodeMirror.defineMIME('text/x-toml', 'toml');\n\n});\n"]},"metadata":{},"sourceType":"script"}