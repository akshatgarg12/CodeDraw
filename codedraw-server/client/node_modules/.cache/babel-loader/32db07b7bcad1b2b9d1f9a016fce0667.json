{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  var ie_lt8 = /MSIE \\d/.test(navigator.userAgent) && (document.documentMode == null || document.documentMode < 8);\n  var Pos = CodeMirror.Pos;\n  var matching = {\n    \"(\": \")>\",\n    \")\": \"(<\",\n    \"[\": \"]>\",\n    \"]\": \"[<\",\n    \"{\": \"}>\",\n    \"}\": \"{<\",\n    \"<\": \">>\",\n    \">\": \"<<\"\n  };\n\n  function bracketRegex(config) {\n    return config && config.bracketRegex || /[(){}[\\]]/;\n  }\n\n  function findMatchingBracket(cm, where, config) {\n    var line = cm.getLineHandle(where.line),\n        pos = where.ch - 1;\n    var afterCursor = config && config.afterCursor;\n    if (afterCursor == null) afterCursor = /(^| )cm-fat-cursor($| )/.test(cm.getWrapperElement().className);\n    var re = bracketRegex(config); // A cursor is defined as between two characters, but in in vim command mode\n    // (i.e. not insert mode), the cursor is visually represented as a\n    // highlighted box on top of the 2nd character. Otherwise, we allow matches\n    // from before or after the cursor.\n\n    var match = !afterCursor && pos >= 0 && re.test(line.text.charAt(pos)) && matching[line.text.charAt(pos)] || re.test(line.text.charAt(pos + 1)) && matching[line.text.charAt(++pos)];\n    if (!match) return null;\n    var dir = match.charAt(1) == \">\" ? 1 : -1;\n    if (config && config.strict && dir > 0 != (pos == where.ch)) return null;\n    var style = cm.getTokenTypeAt(Pos(where.line, pos + 1));\n    var found = scanForBracket(cm, Pos(where.line, pos + (dir > 0 ? 1 : 0)), dir, style || null, config);\n    if (found == null) return null;\n    return {\n      from: Pos(where.line, pos),\n      to: found && found.pos,\n      match: found && found.ch == match.charAt(0),\n      forward: dir > 0\n    };\n  } // bracketRegex is used to specify which type of bracket to scan\n  // should be a regexp, e.g. /[[\\]]/\n  //\n  // Note: If \"where\" is on an open bracket, then this bracket is ignored.\n  //\n  // Returns false when no bracket was found, null when it reached\n  // maxScanLines and gave up\n\n\n  function scanForBracket(cm, where, dir, style, config) {\n    var maxScanLen = config && config.maxScanLineLength || 10000;\n    var maxScanLines = config && config.maxScanLines || 1000;\n    var stack = [];\n    var re = bracketRegex(config);\n    var lineEnd = dir > 0 ? Math.min(where.line + maxScanLines, cm.lastLine() + 1) : Math.max(cm.firstLine() - 1, where.line - maxScanLines);\n\n    for (var lineNo = where.line; lineNo != lineEnd; lineNo += dir) {\n      var line = cm.getLine(lineNo);\n      if (!line) continue;\n      var pos = dir > 0 ? 0 : line.length - 1,\n          end = dir > 0 ? line.length : -1;\n      if (line.length > maxScanLen) continue;\n      if (lineNo == where.line) pos = where.ch - (dir < 0 ? 1 : 0);\n\n      for (; pos != end; pos += dir) {\n        var ch = line.charAt(pos);\n\n        if (re.test(ch) && (style === undefined || cm.getTokenTypeAt(Pos(lineNo, pos + 1)) == style)) {\n          var match = matching[ch];\n          if (match && match.charAt(1) == \">\" == dir > 0) stack.push(ch);else if (!stack.length) return {\n            pos: Pos(lineNo, pos),\n            ch: ch\n          };else stack.pop();\n        }\n      }\n    }\n\n    return lineNo - dir == (dir > 0 ? cm.lastLine() : cm.firstLine()) ? false : null;\n  }\n\n  function matchBrackets(cm, autoclear, config) {\n    // Disable brace matching in long lines, since it'll cause hugely slow updates\n    var maxHighlightLen = cm.state.matchBrackets.maxHighlightLineLength || 1000;\n    var marks = [],\n        ranges = cm.listSelections();\n\n    for (var i = 0; i < ranges.length; i++) {\n      var match = ranges[i].empty() && findMatchingBracket(cm, ranges[i].head, config);\n\n      if (match && cm.getLine(match.from.line).length <= maxHighlightLen) {\n        var style = match.match ? \"CodeMirror-matchingbracket\" : \"CodeMirror-nonmatchingbracket\";\n        marks.push(cm.markText(match.from, Pos(match.from.line, match.from.ch + 1), {\n          className: style\n        }));\n        if (match.to && cm.getLine(match.to.line).length <= maxHighlightLen) marks.push(cm.markText(match.to, Pos(match.to.line, match.to.ch + 1), {\n          className: style\n        }));\n      }\n    }\n\n    if (marks.length) {\n      // Kludge to work around the IE bug from issue #1193, where text\n      // input stops going to the textare whever this fires.\n      if (ie_lt8 && cm.state.focused) cm.focus();\n\n      var clear = function () {\n        cm.operation(function () {\n          for (var i = 0; i < marks.length; i++) marks[i].clear();\n        });\n      };\n\n      if (autoclear) setTimeout(clear, 800);else return clear;\n    }\n  }\n\n  function doMatchBrackets(cm) {\n    cm.operation(function () {\n      if (cm.state.matchBrackets.currentlyHighlighted) {\n        cm.state.matchBrackets.currentlyHighlighted();\n        cm.state.matchBrackets.currentlyHighlighted = null;\n      }\n\n      cm.state.matchBrackets.currentlyHighlighted = matchBrackets(cm, false, cm.state.matchBrackets);\n    });\n  }\n\n  CodeMirror.defineOption(\"matchBrackets\", false, function (cm, val, old) {\n    function clear(cm) {\n      if (cm.state.matchBrackets && cm.state.matchBrackets.currentlyHighlighted) {\n        cm.state.matchBrackets.currentlyHighlighted();\n        cm.state.matchBrackets.currentlyHighlighted = null;\n      }\n    }\n\n    if (old && old != CodeMirror.Init) {\n      cm.off(\"cursorActivity\", doMatchBrackets);\n      cm.off(\"focus\", doMatchBrackets);\n      cm.off(\"blur\", clear);\n      clear(cm);\n    }\n\n    if (val) {\n      cm.state.matchBrackets = typeof val == \"object\" ? val : {};\n      cm.on(\"cursorActivity\", doMatchBrackets);\n      cm.on(\"focus\", doMatchBrackets);\n      cm.on(\"blur\", clear);\n    }\n  });\n  CodeMirror.defineExtension(\"matchBrackets\", function () {\n    matchBrackets(this, true);\n  });\n  CodeMirror.defineExtension(\"findMatchingBracket\", function (pos, config, oldConfig) {\n    // Backwards-compatibility kludge\n    if (oldConfig || typeof config == \"boolean\") {\n      if (!oldConfig) {\n        config = config ? {\n          strict: true\n        } : null;\n      } else {\n        oldConfig.strict = config;\n        config = oldConfig;\n      }\n    }\n\n    return findMatchingBracket(this, pos, config);\n  });\n  CodeMirror.defineExtension(\"scanForBracket\", function (pos, dir, style, config) {\n    return scanForBracket(this, pos, dir, style, config);\n  });\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw/node_modules/codemirror/addon/edit/matchbrackets.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","ie_lt8","test","navigator","userAgent","document","documentMode","Pos","matching","bracketRegex","config","findMatchingBracket","cm","where","line","getLineHandle","pos","ch","afterCursor","getWrapperElement","className","re","match","text","charAt","dir","strict","style","getTokenTypeAt","found","scanForBracket","from","to","forward","maxScanLen","maxScanLineLength","maxScanLines","stack","lineEnd","Math","min","lastLine","max","firstLine","lineNo","getLine","length","end","undefined","push","pop","matchBrackets","autoclear","maxHighlightLen","state","maxHighlightLineLength","marks","ranges","listSelections","i","empty","head","markText","focused","focus","clear","operation","setTimeout","doMatchBrackets","currentlyHighlighted","defineOption","val","old","Init","off","on","defineExtension","oldConfig"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  var ie_lt8 = /MSIE \\d/.test(navigator.userAgent) &&\n    (document.documentMode == null || document.documentMode < 8);\n\n  var Pos = CodeMirror.Pos;\n\n  var matching = {\"(\": \")>\", \")\": \"(<\", \"[\": \"]>\", \"]\": \"[<\", \"{\": \"}>\", \"}\": \"{<\", \"<\": \">>\", \">\": \"<<\"};\n\n  function bracketRegex(config) {\n    return config && config.bracketRegex || /[(){}[\\]]/\n  }\n\n  function findMatchingBracket(cm, where, config) {\n    var line = cm.getLineHandle(where.line), pos = where.ch - 1;\n    var afterCursor = config && config.afterCursor\n    if (afterCursor == null)\n      afterCursor = /(^| )cm-fat-cursor($| )/.test(cm.getWrapperElement().className)\n    var re = bracketRegex(config)\n\n    // A cursor is defined as between two characters, but in in vim command mode\n    // (i.e. not insert mode), the cursor is visually represented as a\n    // highlighted box on top of the 2nd character. Otherwise, we allow matches\n    // from before or after the cursor.\n    var match = (!afterCursor && pos >= 0 && re.test(line.text.charAt(pos)) && matching[line.text.charAt(pos)]) ||\n        re.test(line.text.charAt(pos + 1)) && matching[line.text.charAt(++pos)];\n    if (!match) return null;\n    var dir = match.charAt(1) == \">\" ? 1 : -1;\n    if (config && config.strict && (dir > 0) != (pos == where.ch)) return null;\n    var style = cm.getTokenTypeAt(Pos(where.line, pos + 1));\n\n    var found = scanForBracket(cm, Pos(where.line, pos + (dir > 0 ? 1 : 0)), dir, style || null, config);\n    if (found == null) return null;\n    return {from: Pos(where.line, pos), to: found && found.pos,\n            match: found && found.ch == match.charAt(0), forward: dir > 0};\n  }\n\n  // bracketRegex is used to specify which type of bracket to scan\n  // should be a regexp, e.g. /[[\\]]/\n  //\n  // Note: If \"where\" is on an open bracket, then this bracket is ignored.\n  //\n  // Returns false when no bracket was found, null when it reached\n  // maxScanLines and gave up\n  function scanForBracket(cm, where, dir, style, config) {\n    var maxScanLen = (config && config.maxScanLineLength) || 10000;\n    var maxScanLines = (config && config.maxScanLines) || 1000;\n\n    var stack = [];\n    var re = bracketRegex(config)\n    var lineEnd = dir > 0 ? Math.min(where.line + maxScanLines, cm.lastLine() + 1)\n                          : Math.max(cm.firstLine() - 1, where.line - maxScanLines);\n    for (var lineNo = where.line; lineNo != lineEnd; lineNo += dir) {\n      var line = cm.getLine(lineNo);\n      if (!line) continue;\n      var pos = dir > 0 ? 0 : line.length - 1, end = dir > 0 ? line.length : -1;\n      if (line.length > maxScanLen) continue;\n      if (lineNo == where.line) pos = where.ch - (dir < 0 ? 1 : 0);\n      for (; pos != end; pos += dir) {\n        var ch = line.charAt(pos);\n        if (re.test(ch) && (style === undefined || cm.getTokenTypeAt(Pos(lineNo, pos + 1)) == style)) {\n          var match = matching[ch];\n          if (match && (match.charAt(1) == \">\") == (dir > 0)) stack.push(ch);\n          else if (!stack.length) return {pos: Pos(lineNo, pos), ch: ch};\n          else stack.pop();\n        }\n      }\n    }\n    return lineNo - dir == (dir > 0 ? cm.lastLine() : cm.firstLine()) ? false : null;\n  }\n\n  function matchBrackets(cm, autoclear, config) {\n    // Disable brace matching in long lines, since it'll cause hugely slow updates\n    var maxHighlightLen = cm.state.matchBrackets.maxHighlightLineLength || 1000;\n    var marks = [], ranges = cm.listSelections();\n    for (var i = 0; i < ranges.length; i++) {\n      var match = ranges[i].empty() && findMatchingBracket(cm, ranges[i].head, config);\n      if (match && cm.getLine(match.from.line).length <= maxHighlightLen) {\n        var style = match.match ? \"CodeMirror-matchingbracket\" : \"CodeMirror-nonmatchingbracket\";\n        marks.push(cm.markText(match.from, Pos(match.from.line, match.from.ch + 1), {className: style}));\n        if (match.to && cm.getLine(match.to.line).length <= maxHighlightLen)\n          marks.push(cm.markText(match.to, Pos(match.to.line, match.to.ch + 1), {className: style}));\n      }\n    }\n\n    if (marks.length) {\n      // Kludge to work around the IE bug from issue #1193, where text\n      // input stops going to the textare whever this fires.\n      if (ie_lt8 && cm.state.focused) cm.focus();\n\n      var clear = function() {\n        cm.operation(function() {\n          for (var i = 0; i < marks.length; i++) marks[i].clear();\n        });\n      };\n      if (autoclear) setTimeout(clear, 800);\n      else return clear;\n    }\n  }\n\n  function doMatchBrackets(cm) {\n    cm.operation(function() {\n      if (cm.state.matchBrackets.currentlyHighlighted) {\n        cm.state.matchBrackets.currentlyHighlighted();\n        cm.state.matchBrackets.currentlyHighlighted = null;\n      }\n      cm.state.matchBrackets.currentlyHighlighted = matchBrackets(cm, false, cm.state.matchBrackets);\n    });\n  }\n\n  CodeMirror.defineOption(\"matchBrackets\", false, function(cm, val, old) {\n    function clear(cm) {\n      if (cm.state.matchBrackets && cm.state.matchBrackets.currentlyHighlighted) {\n        cm.state.matchBrackets.currentlyHighlighted();\n        cm.state.matchBrackets.currentlyHighlighted = null;\n      }\n    }\n\n    if (old && old != CodeMirror.Init) {\n      cm.off(\"cursorActivity\", doMatchBrackets);\n      cm.off(\"focus\", doMatchBrackets)\n      cm.off(\"blur\", clear)\n      clear(cm);\n    }\n    if (val) {\n      cm.state.matchBrackets = typeof val == \"object\" ? val : {};\n      cm.on(\"cursorActivity\", doMatchBrackets);\n      cm.on(\"focus\", doMatchBrackets)\n      cm.on(\"blur\", clear)\n    }\n  });\n\n  CodeMirror.defineExtension(\"matchBrackets\", function() {matchBrackets(this, true);});\n  CodeMirror.defineExtension(\"findMatchingBracket\", function(pos, config, oldConfig){\n    // Backwards-compatibility kludge\n    if (oldConfig || typeof config == \"boolean\") {\n      if (!oldConfig) {\n        config = config ? {strict: true} : null\n      } else {\n        oldConfig.strict = config\n        config = oldConfig\n      }\n    }\n    return findMatchingBracket(this, pos, config)\n  });\n  CodeMirror.defineExtension(\"scanForBracket\", function(pos, dir, style, config){\n    return scanForBracket(this, pos, dir, style, config);\n  });\n});\n"]},"metadata":{},"sourceType":"script"}