{"ast":null,"code":"var _jsxFileName = \"/Users/akshatgarg/Documents/codedraw/src/Components/CodeEditor.jsx\";\nimport CodeMirror from '@uiw/react-codemirror';\nimport 'codemirror/theme/monokai.css';\nimport 'codemirror/addon/display/autorefresh';\nimport 'codemirror/addon/comment/comment';\nimport \"codemirror/lib/codemirror.css\";\nimport React, { useState, useEffect } from 'react';\nexport default function CodeEditor() {\n  const [code, setCode] = useState('code...');\n  const [input, setInput] = useState();\n  const [language, setLanguage] = useState('c++');\n  useEffect(() => {\n    console.log(language);\n  }, [language]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"codeEditor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"language\",\n    id: \"language\",\n    value: language,\n    onChange: e => {\n      setLanguage(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"c++\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, \"C++\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"c\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, \"C\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"python\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, \"python\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"javascript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \"Javascript\")), /*#__PURE__*/React.createElement(CodeMirror, {\n    className: \"code\",\n    onChange: change => {\n      setCode(change.getValue());\n    },\n    height: \"70vh\",\n    width: \"70vh\",\n    options: {\n      readOnly: false,\n      theme: 'monokai',\n      tabSize: 2,\n      mode: `${language}`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit\",\n    onClick: () => {\n      let codeJSON = JSON.stringify(code);\n      let inputJSON = JSON.stringify(input);\n      console.log(typeof language); // post this code to compiler APIs\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 1\n    }\n  }, \"submit\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"IO-box\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 1\n    }\n  }, /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"input-area\",\n    rows: \"5\",\n    value: input,\n    onChange: e => {\n      setInput(e.target.value);\n    },\n    placeholder: \"Input:\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"textarea\", {\n    className: \"output-area\",\n    rows: \"5\",\n    readOnly: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  })));\n}","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw/src/Components/CodeEditor.jsx"],"names":["CodeMirror","React","useState","useEffect","CodeEditor","code","setCode","input","setInput","language","setLanguage","console","log","e","target","value","change","getValue","readOnly","theme","tabSize","mode","codeJSON","JSON","stringify","inputJSON"],"mappings":"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","sourcesContent":["import CodeMirror from '@uiw/react-codemirror';\nimport 'codemirror/theme/monokai.css';\nimport 'codemirror/addon/display/autorefresh';\nimport 'codemirror/addon/comment/comment';\nimport \"codemirror/lib/codemirror.css\";\nimport React,{useState, useEffect} from 'react'\n\nexport default function CodeEditor(){\n  const [code, setCode] = useState('code...');\n  const [input, setInput] = useState();\n  const [language, setLanguage]= useState('c++');\n  useEffect(()=>{\n    console.log(language)\n  },[language]);\n  return <div className=\"codeEditor\">\n  <select name=\"language\" id=\"language\" value={language} onChange={(e)=>{\n    setLanguage(e.target.value);\n  }}>\n    <option value=\"c++\">C++</option>\n    <option value=\"c\">C</option>\n    <option value=\"python\">python</option>\n    <option value=\"javascript\">Javascript</option>\n  </select>\n  <CodeMirror\n  className=\"code\"\n  onChange={(change)=>{\n    setCode(change.getValue())\n  }}\n  height=\"70vh\"\n  width=\"70vh\"\n  options={{\n    readOnly:false,\n    theme: 'monokai',\n    tabSize: 2,\n    mode:`${language}`\n  }}\n/>\n<button className=\"submit\" onClick={()=>{\n        let codeJSON = JSON.stringify(code);\n        let inputJSON = JSON.stringify(input);\n        console.log(typeof(language));\n        // post this code to compiler APIs\n      }}>submit</button>\n<div className=\"IO-box\">\n      <textarea className=\"input-area\" rows=\"5\" value={input} onChange={(e)=>{\n        setInput(e.target.value);\n      }} placeholder=\"Input:\"></textarea>\n      <textarea className=\"output-area\" rows=\"5\" readOnly></textarea>\n    </div>\n  </div>\n}"]},"metadata":{},"sourceType":"module"}