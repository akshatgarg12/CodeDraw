{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// Author: Aliaksei Chapyzhenka\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  function toWordList(words) {\n    var ret = [];\n    words.split(' ').forEach(function (e) {\n      ret.push({\n        name: e\n      });\n    });\n    return ret;\n  }\n\n  var coreWordList = toWordList('INVERT AND OR XOR\\\n 2* 2/ LSHIFT RSHIFT\\\n 0= = 0< < > U< MIN MAX\\\n 2DROP 2DUP 2OVER 2SWAP ?DUP DEPTH DROP DUP OVER ROT SWAP\\\n >R R> R@\\\n + - 1+ 1- ABS NEGATE\\\n S>D * M* UM*\\\n FM/MOD SM/REM UM/MOD */ */MOD / /MOD MOD\\\n HERE , @ ! CELL+ CELLS C, C@ C! CHARS 2@ 2!\\\n ALIGN ALIGNED +! ALLOT\\\n CHAR [CHAR] [ ] BL\\\n FIND EXECUTE IMMEDIATE COUNT LITERAL STATE\\\n ; DOES> >BODY\\\n EVALUATE\\\n SOURCE >IN\\\n <# # #S #> HOLD SIGN BASE >NUMBER HEX DECIMAL\\\n FILL MOVE\\\n . CR EMIT SPACE SPACES TYPE U. .R U.R\\\n ACCEPT\\\n TRUE FALSE\\\n <> U> 0<> 0>\\\n NIP TUCK ROLL PICK\\\n 2>R 2R@ 2R>\\\n WITHIN UNUSED MARKER\\\n I J\\\n TO\\\n COMPILE, [COMPILE]\\\n SAVE-INPUT RESTORE-INPUT\\\n PAD ERASE\\\n 2LITERAL DNEGATE\\\n D- D+ D0< D0= D2* D2/ D< D= DMAX DMIN D>S DABS\\\n M+ M*/ D. D.R 2ROT DU<\\\n CATCH THROW\\\n FREE RESIZE ALLOCATE\\\n CS-PICK CS-ROLL\\\n GET-CURRENT SET-CURRENT FORTH-WORDLIST GET-ORDER SET-ORDER\\\n PREVIOUS SEARCH-WORDLIST WORDLIST FIND ALSO ONLY FORTH DEFINITIONS ORDER\\\n -TRAILING /STRING SEARCH COMPARE CMOVE CMOVE> BLANK SLITERAL');\n  var immediateWordList = toWordList('IF ELSE THEN BEGIN WHILE REPEAT UNTIL RECURSE [IF] [ELSE] [THEN] ?DO DO LOOP +LOOP UNLOOP LEAVE EXIT AGAIN CASE OF ENDOF ENDCASE');\n  CodeMirror.defineMode('forth', function () {\n    function searchWordList(wordList, word) {\n      var i;\n\n      for (i = wordList.length - 1; i >= 0; i--) {\n        if (wordList[i].name === word.toUpperCase()) {\n          return wordList[i];\n        }\n      }\n\n      return undefined;\n    }\n\n    return {\n      startState: function () {\n        return {\n          state: '',\n          base: 10,\n          coreWordList: coreWordList,\n          immediateWordList: immediateWordList,\n          wordList: []\n        };\n      },\n      token: function (stream, stt) {\n        var mat;\n\n        if (stream.eatSpace()) {\n          return null;\n        }\n\n        if (stt.state === '') {\n          // interpretation\n          if (stream.match(/^(\\]|:NONAME)(\\s|$)/i)) {\n            stt.state = ' compilation';\n            return 'builtin compilation';\n          }\n\n          mat = stream.match(/^(\\:)\\s+(\\S+)(\\s|$)+/);\n\n          if (mat) {\n            stt.wordList.push({\n              name: mat[2].toUpperCase()\n            });\n            stt.state = ' compilation';\n            return 'def' + stt.state;\n          }\n\n          mat = stream.match(/^(VARIABLE|2VARIABLE|CONSTANT|2CONSTANT|CREATE|POSTPONE|VALUE|WORD)\\s+(\\S+)(\\s|$)+/i);\n\n          if (mat) {\n            stt.wordList.push({\n              name: mat[2].toUpperCase()\n            });\n            return 'def' + stt.state;\n          }\n\n          mat = stream.match(/^(\\'|\\[\\'\\])\\s+(\\S+)(\\s|$)+/);\n\n          if (mat) {\n            return 'builtin' + stt.state;\n          }\n        } else {\n          // compilation\n          // ; [\n          if (stream.match(/^(\\;|\\[)(\\s)/)) {\n            stt.state = '';\n            stream.backUp(1);\n            return 'builtin compilation';\n          }\n\n          if (stream.match(/^(\\;|\\[)($)/)) {\n            stt.state = '';\n            return 'builtin compilation';\n          }\n\n          if (stream.match(/^(POSTPONE)\\s+\\S+(\\s|$)+/)) {\n            return 'builtin';\n          }\n        } // dynamic wordlist\n\n\n        mat = stream.match(/^(\\S+)(\\s+|$)/);\n\n        if (mat) {\n          if (searchWordList(stt.wordList, mat[1]) !== undefined) {\n            return 'variable' + stt.state;\n          } // comments\n\n\n          if (mat[1] === '\\\\') {\n            stream.skipToEnd();\n            return 'comment' + stt.state;\n          } // core words\n\n\n          if (searchWordList(stt.coreWordList, mat[1]) !== undefined) {\n            return 'builtin' + stt.state;\n          }\n\n          if (searchWordList(stt.immediateWordList, mat[1]) !== undefined) {\n            return 'keyword' + stt.state;\n          }\n\n          if (mat[1] === '(') {\n            stream.eatWhile(function (s) {\n              return s !== ')';\n            });\n            stream.eat(')');\n            return 'comment' + stt.state;\n          } // // strings\n\n\n          if (mat[1] === '.(') {\n            stream.eatWhile(function (s) {\n              return s !== ')';\n            });\n            stream.eat(')');\n            return 'string' + stt.state;\n          }\n\n          if (mat[1] === 'S\"' || mat[1] === '.\"' || mat[1] === 'C\"') {\n            stream.eatWhile(function (s) {\n              return s !== '\"';\n            });\n            stream.eat('\"');\n            return 'string' + stt.state;\n          } // numbers\n\n\n          if (mat[1] - 0xfffffffff) {\n            return 'number' + stt.state;\n          } // if (mat[1].match(/^[-+]?[0-9]+\\.[0-9]*/)) {\n          //     return 'number' + stt.state;\n          // }\n\n\n          return 'atom' + stt.state;\n        }\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-forth\", \"forth\");\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw-server/client/node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/forth/forth.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","toWordList","words","ret","split","forEach","e","push","name","coreWordList","immediateWordList","defineMode","searchWordList","wordList","word","i","length","toUpperCase","undefined","startState","state","base","token","stream","stt","mat","eatSpace","match","backUp","skipToEnd","eatWhile","s","eat","defineMIME"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// Author: Aliaksei Chapyzhenka\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  function toWordList(words) {\n    var ret = [];\n    words.split(' ').forEach(function(e){\n      ret.push({name: e});\n    });\n    return ret;\n  }\n\n  var coreWordList = toWordList(\n'INVERT AND OR XOR\\\n 2* 2/ LSHIFT RSHIFT\\\n 0= = 0< < > U< MIN MAX\\\n 2DROP 2DUP 2OVER 2SWAP ?DUP DEPTH DROP DUP OVER ROT SWAP\\\n >R R> R@\\\n + - 1+ 1- ABS NEGATE\\\n S>D * M* UM*\\\n FM/MOD SM/REM UM/MOD */ */MOD / /MOD MOD\\\n HERE , @ ! CELL+ CELLS C, C@ C! CHARS 2@ 2!\\\n ALIGN ALIGNED +! ALLOT\\\n CHAR [CHAR] [ ] BL\\\n FIND EXECUTE IMMEDIATE COUNT LITERAL STATE\\\n ; DOES> >BODY\\\n EVALUATE\\\n SOURCE >IN\\\n <# # #S #> HOLD SIGN BASE >NUMBER HEX DECIMAL\\\n FILL MOVE\\\n . CR EMIT SPACE SPACES TYPE U. .R U.R\\\n ACCEPT\\\n TRUE FALSE\\\n <> U> 0<> 0>\\\n NIP TUCK ROLL PICK\\\n 2>R 2R@ 2R>\\\n WITHIN UNUSED MARKER\\\n I J\\\n TO\\\n COMPILE, [COMPILE]\\\n SAVE-INPUT RESTORE-INPUT\\\n PAD ERASE\\\n 2LITERAL DNEGATE\\\n D- D+ D0< D0= D2* D2/ D< D= DMAX DMIN D>S DABS\\\n M+ M*/ D. D.R 2ROT DU<\\\n CATCH THROW\\\n FREE RESIZE ALLOCATE\\\n CS-PICK CS-ROLL\\\n GET-CURRENT SET-CURRENT FORTH-WORDLIST GET-ORDER SET-ORDER\\\n PREVIOUS SEARCH-WORDLIST WORDLIST FIND ALSO ONLY FORTH DEFINITIONS ORDER\\\n -TRAILING /STRING SEARCH COMPARE CMOVE CMOVE> BLANK SLITERAL');\n\n  var immediateWordList = toWordList('IF ELSE THEN BEGIN WHILE REPEAT UNTIL RECURSE [IF] [ELSE] [THEN] ?DO DO LOOP +LOOP UNLOOP LEAVE EXIT AGAIN CASE OF ENDOF ENDCASE');\n\n  CodeMirror.defineMode('forth', function() {\n    function searchWordList (wordList, word) {\n      var i;\n      for (i = wordList.length - 1; i >= 0; i--) {\n        if (wordList[i].name === word.toUpperCase()) {\n          return wordList[i];\n        }\n      }\n      return undefined;\n    }\n  return {\n    startState: function() {\n      return {\n        state: '',\n        base: 10,\n        coreWordList: coreWordList,\n        immediateWordList: immediateWordList,\n        wordList: []\n      };\n    },\n    token: function (stream, stt) {\n      var mat;\n      if (stream.eatSpace()) {\n        return null;\n      }\n      if (stt.state === '') { // interpretation\n        if (stream.match(/^(\\]|:NONAME)(\\s|$)/i)) {\n          stt.state = ' compilation';\n          return 'builtin compilation';\n        }\n        mat = stream.match(/^(\\:)\\s+(\\S+)(\\s|$)+/);\n        if (mat) {\n          stt.wordList.push({name: mat[2].toUpperCase()});\n          stt.state = ' compilation';\n          return 'def' + stt.state;\n        }\n        mat = stream.match(/^(VARIABLE|2VARIABLE|CONSTANT|2CONSTANT|CREATE|POSTPONE|VALUE|WORD)\\s+(\\S+)(\\s|$)+/i);\n        if (mat) {\n          stt.wordList.push({name: mat[2].toUpperCase()});\n          return 'def' + stt.state;\n        }\n        mat = stream.match(/^(\\'|\\[\\'\\])\\s+(\\S+)(\\s|$)+/);\n        if (mat) {\n          return 'builtin' + stt.state;\n        }\n        } else { // compilation\n        // ; [\n        if (stream.match(/^(\\;|\\[)(\\s)/)) {\n          stt.state = '';\n          stream.backUp(1);\n          return 'builtin compilation';\n        }\n        if (stream.match(/^(\\;|\\[)($)/)) {\n          stt.state = '';\n          return 'builtin compilation';\n        }\n        if (stream.match(/^(POSTPONE)\\s+\\S+(\\s|$)+/)) {\n          return 'builtin';\n        }\n      }\n\n      // dynamic wordlist\n      mat = stream.match(/^(\\S+)(\\s+|$)/);\n      if (mat) {\n        if (searchWordList(stt.wordList, mat[1]) !== undefined) {\n          return 'variable' + stt.state;\n        }\n\n        // comments\n        if (mat[1] === '\\\\') {\n          stream.skipToEnd();\n            return 'comment' + stt.state;\n          }\n\n          // core words\n          if (searchWordList(stt.coreWordList, mat[1]) !== undefined) {\n            return 'builtin' + stt.state;\n          }\n          if (searchWordList(stt.immediateWordList, mat[1]) !== undefined) {\n            return 'keyword' + stt.state;\n          }\n\n          if (mat[1] === '(') {\n            stream.eatWhile(function (s) { return s !== ')'; });\n            stream.eat(')');\n            return 'comment' + stt.state;\n          }\n\n          // // strings\n          if (mat[1] === '.(') {\n            stream.eatWhile(function (s) { return s !== ')'; });\n            stream.eat(')');\n            return 'string' + stt.state;\n          }\n          if (mat[1] === 'S\"' || mat[1] === '.\"' || mat[1] === 'C\"') {\n            stream.eatWhile(function (s) { return s !== '\"'; });\n            stream.eat('\"');\n            return 'string' + stt.state;\n          }\n\n          // numbers\n          if (mat[1] - 0xfffffffff) {\n            return 'number' + stt.state;\n          }\n          // if (mat[1].match(/^[-+]?[0-9]+\\.[0-9]*/)) {\n          //     return 'number' + stt.state;\n          // }\n\n          return 'atom' + stt.state;\n        }\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-forth\", \"forth\");\n});\n"]},"metadata":{},"sourceType":"script"}