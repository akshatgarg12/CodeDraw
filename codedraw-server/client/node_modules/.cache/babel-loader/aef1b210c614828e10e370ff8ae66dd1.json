{"ast":null,"code":"import _typeof from \"@babel/runtime/helpers/esm/typeof\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"@babel/runtime/helpers/esm/createSuper\";\nimport CodeMirror from 'codemirror';\nimport 'codemirror/mode/meta';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nvar ReactCodeMirror = /*#__PURE__*/function (_Component) {\n  _inherits(ReactCodeMirror, _Component);\n\n  var _super = _createSuper(ReactCodeMirror);\n\n  function ReactCodeMirror(props) {\n    var _this;\n\n    _classCallCheck(this, ReactCodeMirror);\n\n    _this = _super.call(this, props);\n    _this.codemirror = null;\n    _this.editor = null;\n    return _this;\n  }\n\n  _createClass(ReactCodeMirror, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.renderCodeMirror();\n    }\n  }, {\n    key: \"renderCodeMirror\",\n    value: function renderCodeMirror() {\n      var _this2 = this; // 生成codemirror实例\n\n\n      this.editor = CodeMirror.fromTextArea(this.textarea, this.props.options); // 获取CodeMirror用于获取其中的一些常量\n\n      this.codemirror = CodeMirror; // 事件处理映射\n\n      var eventDict = this.getEventHandleFromProps();\n      Object.keys(eventDict).forEach(function (event) {\n        _this2.editor.on(eventDict[event], _this2.props[event]);\n      });\n      var _this$props = this.props,\n          value = _this$props.value,\n          width = _this$props.width,\n          height = _this$props.height; // 初始化值\n\n      this.editor.setValue(value || '');\n\n      if (width || height) {\n        // 设置尺寸\n        this.editor.setSize(width, height);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function () {\n      var _componentDidUpdate = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(prevProps) {\n        var val, value, width, height;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                val = this.editor.getValue();\n                value = this.props.value;\n\n                if (value !== undefined && value !== prevProps.value && value !== val) {\n                  this.editor.setValue(value);\n                }\n\n                width = prevProps.width, height = prevProps.height;\n                _context.next = 6;\n                return this.setOptions(this.props.options);\n\n              case 6:\n                if (width !== this.props.width || height !== this.props.height) {\n                  this.editor.setSize(this.props.width, this.props.height);\n                }\n\n              case 7:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n\n      function componentDidUpdate(_x) {\n        return _componentDidUpdate.apply(this, arguments);\n      }\n\n      return componentDidUpdate;\n    }() // http://codemirror.net/doc/manual.html#config\n\n  }, {\n    key: \"setOptions\",\n    value: function () {\n      var _setOptions = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(options) {\n        var _this3 = this;\n\n        var mode;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                if (!(_typeof(options) === 'object')) {\n                  _context2.next = 7;\n                  break;\n                }\n\n                mode = CodeMirror.findModeByName(options.mode);\n\n                if (!(mode && mode.mode)) {\n                  _context2.next = 5;\n                  break;\n                }\n\n                _context2.next = 5;\n                return import(\"codemirror/mode/\".concat(mode.mode, \"/\").concat(mode.mode, \".js\"));\n\n              case 5:\n                if (mode) {\n                  options.mode = mode.mime;\n                }\n\n                Object.keys(options).forEach(function (name) {\n                  if (options[name] && JSON.stringify(options[name])) {\n                    _this3.editor.setOption(name, options[name]);\n                  }\n                });\n\n              case 7:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function setOptions(_x2) {\n        return _setOptions.apply(this, arguments);\n      }\n\n      return setOptions;\n    }()\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.editor) {\n        this.editor.toTextArea();\n      }\n    } // 将props中所有的事件处理函数映射并保存\n\n  }, {\n    key: \"getEventHandleFromProps\",\n    value: function getEventHandleFromProps() {\n      var propNames = Object.keys(this.props);\n      var eventHandle = propNames.filter(function (prop) {\n        return /^on+/.test(prop);\n      });\n      var eventDict = {};\n      eventHandle.forEach(function (ele) {\n        var name = ele.slice(2);\n        eventDict[ele] = name.replace(name[0], name[0].toLowerCase());\n      });\n      return eventDict;\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      return /*#__PURE__*/React.createElement(\"textarea\", {\n        ref: function ref(instance) {\n          _this4.textarea = instance;\n        }\n      });\n    }\n  }]);\n\n  return ReactCodeMirror;\n}(Component);\n\nexport { ReactCodeMirror as default };\nReactCodeMirror.defaultProps = {\n  value: '',\n  options: {},\n  width: '100%',\n  height: '100%'\n};\nReactCodeMirror.propTypes = {\n  value: PropTypes.string,\n  options: PropTypes.object,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};","map":{"version":3,"sources":["../../src/CodeMirror.js"],"names":["ReactCodeMirror","Component","CodeMirror","eventDict","Object","value","width","height","prevProps","val","options","mode","JSON","propNames","eventHandle","name","ele","PropTypes"],"mappings":"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","sourcesContent":["import CodeMirror from 'codemirror';\nimport 'codemirror/mode/meta';\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nexport default class ReactCodeMirror extends Component {\n  constructor(props) {\n    super(props);\n    this.codemirror = null;\n    this.editor = null;\n  }\n\n  componentDidMount() {\n    this.renderCodeMirror();\n  }\n  renderCodeMirror() {\n    // 生成codemirror实例\n    this.editor = CodeMirror.fromTextArea(this.textarea, this.props.options);\n    // 获取CodeMirror用于获取其中的一些常量\n    this.codemirror = CodeMirror;\n    // 事件处理映射\n    const eventDict = this.getEventHandleFromProps();\n\n    Object.keys(eventDict).forEach((event) => {\n      this.editor.on(eventDict[event], this.props[event]);\n    });\n\n    const { value, width, height } = this.props;\n    // 初始化值\n    this.editor.setValue(value || '');\n\n    if (width || height) {\n      // 设置尺寸\n      this.editor.setSize(width, height);\n    }\n  }\n  async componentDidUpdate(prevProps) {\n    const val = this.editor.getValue();\n    const value = this.props.value;\n    if (value !== undefined && value !== prevProps.value && value !== val) {\n      this.editor.setValue(value);\n    }\n    const { width, height } = prevProps;\n    await this.setOptions(this.props.options);\n    if (width !== this.props.width || height !== this.props.height) {\n      this.editor.setSize(this.props.width, this.props.height);\n    }\n  }\n  // http://codemirror.net/doc/manual.html#config\n  async setOptions(options) {\n    if (typeof options === 'object') {\n      const mode = CodeMirror.findModeByName(options.mode);\n      if (mode && mode.mode) {\n        await import(`codemirror/mode/${mode.mode}/${mode.mode}.js`);\n      }\n      if (mode) {\n        options.mode = mode.mime;\n      }\n      Object.keys(options).forEach((name) => {\n        if (options[name] && JSON.stringify(options[name])) {\n          this.editor.setOption(name, options[name]);\n        }\n      });\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.editor) {\n      this.editor.toTextArea();\n    }\n  }\n\n  // 将props中所有的事件处理函数映射并保存\n  getEventHandleFromProps() {\n    const propNames = Object.keys(this.props);\n    const eventHandle = propNames.filter((prop) => {\n      return /^on+/.test(prop);\n    });\n\n    const eventDict = {};\n    eventHandle.forEach((ele) => {\n      const name = ele.slice(2);\n      eventDict[ele] = name.replace(name[0],name[0].toLowerCase());\n    });\n\n    return eventDict;\n  }\n\n  render() {\n    return (\n      <textarea ref={(instance) => { this.textarea = instance; }} />\n    );\n  }\n}\n\nReactCodeMirror.defaultProps = {\n  value: '',\n  options: {},\n  width: '100%',\n  height: '100%',\n};\n\nReactCodeMirror.propTypes = {\n  value: PropTypes.string,\n  options: PropTypes.object,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n};\n"]},"metadata":{},"sourceType":"module"}