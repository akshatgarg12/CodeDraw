{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/**\n * Author: Gautam Mehta\n * Branched from CodeMirror's Scheme mode\n */\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"cobol\", function () {\n    var BUILTIN = \"builtin\",\n        COMMENT = \"comment\",\n        STRING = \"string\",\n        ATOM = \"atom\",\n        NUMBER = \"number\",\n        KEYWORD = \"keyword\",\n        MODTAG = \"header\",\n        COBOLLINENUM = \"def\",\n        PERIOD = \"link\";\n\n    function makeKeywords(str) {\n      var obj = {},\n          words = str.split(\" \");\n\n      for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n\n      return obj;\n    }\n\n    var atoms = makeKeywords(\"TRUE FALSE ZEROES ZEROS ZERO SPACES SPACE LOW-VALUE LOW-VALUES \");\n    var keywords = makeKeywords(\"ACCEPT ACCESS ACQUIRE ADD ADDRESS \" + \"ADVANCING AFTER ALIAS ALL ALPHABET \" + \"ALPHABETIC ALPHABETIC-LOWER ALPHABETIC-UPPER ALPHANUMERIC ALPHANUMERIC-EDITED \" + \"ALSO ALTER ALTERNATE AND ANY \" + \"ARE AREA AREAS ARITHMETIC ASCENDING \" + \"ASSIGN AT ATTRIBUTE AUTHOR AUTO \" + \"AUTO-SKIP AUTOMATIC B-AND B-EXOR B-LESS \" + \"B-NOT B-OR BACKGROUND-COLOR BACKGROUND-COLOUR BEEP \" + \"BEFORE BELL BINARY BIT BITS \" + \"BLANK BLINK BLOCK BOOLEAN BOTTOM \" + \"BY CALL CANCEL CD CF \" + \"CH CHARACTER CHARACTERS CLASS CLOCK-UNITS \" + \"CLOSE COBOL CODE CODE-SET COL \" + \"COLLATING COLUMN COMMA COMMIT COMMITMENT \" + \"COMMON COMMUNICATION COMP COMP-0 COMP-1 \" + \"COMP-2 COMP-3 COMP-4 COMP-5 COMP-6 \" + \"COMP-7 COMP-8 COMP-9 COMPUTATIONAL COMPUTATIONAL-0 \" + \"COMPUTATIONAL-1 COMPUTATIONAL-2 COMPUTATIONAL-3 COMPUTATIONAL-4 COMPUTATIONAL-5 \" + \"COMPUTATIONAL-6 COMPUTATIONAL-7 COMPUTATIONAL-8 COMPUTATIONAL-9 COMPUTE \" + \"CONFIGURATION CONNECT CONSOLE CONTAINED CONTAINS \" + \"CONTENT CONTINUE CONTROL CONTROL-AREA CONTROLS \" + \"CONVERTING COPY CORR CORRESPONDING COUNT \" + \"CRT CRT-UNDER CURRENCY CURRENT CURSOR \" + \"DATA DATE DATE-COMPILED DATE-WRITTEN DAY \" + \"DAY-OF-WEEK DB DB-ACCESS-CONTROL-KEY DB-DATA-NAME DB-EXCEPTION \" + \"DB-FORMAT-NAME DB-RECORD-NAME DB-SET-NAME DB-STATUS DBCS \" + \"DBCS-EDITED DE DEBUG-CONTENTS DEBUG-ITEM DEBUG-LINE \" + \"DEBUG-NAME DEBUG-SUB-1 DEBUG-SUB-2 DEBUG-SUB-3 DEBUGGING \" + \"DECIMAL-POINT DECLARATIVES DEFAULT DELETE DELIMITED \" + \"DELIMITER DEPENDING DESCENDING DESCRIBED DESTINATION \" + \"DETAIL DISABLE DISCONNECT DISPLAY DISPLAY-1 \" + \"DISPLAY-2 DISPLAY-3 DISPLAY-4 DISPLAY-5 DISPLAY-6 \" + \"DISPLAY-7 DISPLAY-8 DISPLAY-9 DIVIDE DIVISION \" + \"DOWN DROP DUPLICATE DUPLICATES DYNAMIC \" + \"EBCDIC EGI EJECT ELSE EMI \" + \"EMPTY EMPTY-CHECK ENABLE END END. END-ACCEPT END-ACCEPT. \" + \"END-ADD END-CALL END-COMPUTE END-DELETE END-DISPLAY \" + \"END-DIVIDE END-EVALUATE END-IF END-INVOKE END-MULTIPLY \" + \"END-OF-PAGE END-PERFORM END-READ END-RECEIVE END-RETURN \" + \"END-REWRITE END-SEARCH END-START END-STRING END-SUBTRACT \" + \"END-UNSTRING END-WRITE END-XML ENTER ENTRY \" + \"ENVIRONMENT EOP EQUAL EQUALS ERASE \" + \"ERROR ESI EVALUATE EVERY EXCEEDS \" + \"EXCEPTION EXCLUSIVE EXIT EXTEND EXTERNAL \" + \"EXTERNALLY-DESCRIBED-KEY FD FETCH FILE FILE-CONTROL \" + \"FILE-STREAM FILES FILLER FINAL FIND \" + \"FINISH FIRST FOOTING FOR FOREGROUND-COLOR \" + \"FOREGROUND-COLOUR FORMAT FREE FROM FULL \" + \"FUNCTION GENERATE GET GIVING GLOBAL \" + \"GO GOBACK GREATER GROUP HEADING \" + \"HIGH-VALUE HIGH-VALUES HIGHLIGHT I-O I-O-CONTROL \" + \"ID IDENTIFICATION IF IN INDEX \" + \"INDEX-1 INDEX-2 INDEX-3 INDEX-4 INDEX-5 \" + \"INDEX-6 INDEX-7 INDEX-8 INDEX-9 INDEXED \" + \"INDIC INDICATE INDICATOR INDICATORS INITIAL \" + \"INITIALIZE INITIATE INPUT INPUT-OUTPUT INSPECT \" + \"INSTALLATION INTO INVALID INVOKE IS \" + \"JUST JUSTIFIED KANJI KEEP KEY \" + \"LABEL LAST LD LEADING LEFT \" + \"LEFT-JUSTIFY LENGTH LENGTH-CHECK LESS LIBRARY \" + \"LIKE LIMIT LIMITS LINAGE LINAGE-COUNTER \" + \"LINE LINE-COUNTER LINES LINKAGE LOCAL-STORAGE \" + \"LOCALE LOCALLY LOCK \" + \"MEMBER MEMORY MERGE MESSAGE METACLASS \" + \"MODE MODIFIED MODIFY MODULES MOVE \" + \"MULTIPLE MULTIPLY NATIONAL NATIVE NEGATIVE \" + \"NEXT NO NO-ECHO NONE NOT \" + \"NULL NULL-KEY-MAP NULL-MAP NULLS NUMBER \" + \"NUMERIC NUMERIC-EDITED OBJECT OBJECT-COMPUTER OCCURS \" + \"OF OFF OMITTED ON ONLY \" + \"OPEN OPTIONAL OR ORDER ORGANIZATION \" + \"OTHER OUTPUT OVERFLOW OWNER PACKED-DECIMAL \" + \"PADDING PAGE PAGE-COUNTER PARSE PERFORM \" + \"PF PH PIC PICTURE PLUS \" + \"POINTER POSITION POSITIVE PREFIX PRESENT \" + \"PRINTING PRIOR PROCEDURE PROCEDURE-POINTER PROCEDURES \" + \"PROCEED PROCESS PROCESSING PROGRAM PROGRAM-ID \" + \"PROMPT PROTECTED PURGE QUEUE QUOTE \" + \"QUOTES RANDOM RD READ READY \" + \"REALM RECEIVE RECONNECT RECORD RECORD-NAME \" + \"RECORDS RECURSIVE REDEFINES REEL REFERENCE \" + \"REFERENCE-MONITOR REFERENCES RELATION RELATIVE RELEASE \" + \"REMAINDER REMOVAL RENAMES REPEATED REPLACE \" + \"REPLACING REPORT REPORTING REPORTS REPOSITORY \" + \"REQUIRED RERUN RESERVE RESET RETAINING \" + \"RETRIEVAL RETURN RETURN-CODE RETURNING REVERSE-VIDEO \" + \"REVERSED REWIND REWRITE RF RH \" + \"RIGHT RIGHT-JUSTIFY ROLLBACK ROLLING ROUNDED \" + \"RUN SAME SCREEN SD SEARCH \" + \"SECTION SECURE SECURITY SEGMENT SEGMENT-LIMIT \" + \"SELECT SEND SENTENCE SEPARATE SEQUENCE \" + \"SEQUENTIAL SET SHARED SIGN SIZE \" + \"SKIP1 SKIP2 SKIP3 SORT SORT-MERGE \" + \"SORT-RETURN SOURCE SOURCE-COMPUTER SPACE-FILL \" + \"SPECIAL-NAMES STANDARD STANDARD-1 STANDARD-2 \" + \"START STARTING STATUS STOP STORE \" + \"STRING SUB-QUEUE-1 SUB-QUEUE-2 SUB-QUEUE-3 SUB-SCHEMA \" + \"SUBFILE SUBSTITUTE SUBTRACT SUM SUPPRESS \" + \"SYMBOLIC SYNC SYNCHRONIZED SYSIN SYSOUT \" + \"TABLE TALLYING TAPE TENANT TERMINAL \" + \"TERMINATE TEST TEXT THAN THEN \" + \"THROUGH THRU TIME TIMES TITLE \" + \"TO TOP TRAILING TRAILING-SIGN TRANSACTION \" + \"TYPE TYPEDEF UNDERLINE UNEQUAL UNIT \" + \"UNSTRING UNTIL UP UPDATE UPON \" + \"USAGE USAGE-MODE USE USING VALID \" + \"VALIDATE VALUE VALUES VARYING VLR \" + \"WAIT WHEN WHEN-COMPILED WITH WITHIN \" + \"WORDS WORKING-STORAGE WRITE XML XML-CODE \" + \"XML-EVENT XML-NTEXT XML-TEXT ZERO ZERO-FILL \");\n    var builtins = makeKeywords(\"- * ** / + < <= = > >= \");\n    var tests = {\n      digit: /\\d/,\n      digit_or_colon: /[\\d:]/,\n      hex: /[0-9a-f]/i,\n      sign: /[+-]/,\n      exponent: /e/i,\n      keyword_char: /[^\\s\\(\\[\\;\\)\\]]/,\n      symbol: /[\\w*+\\-]/\n    };\n\n    function isNumber(ch, stream) {\n      // hex\n      if (ch === '0' && stream.eat(/x/i)) {\n        stream.eatWhile(tests.hex);\n        return true;\n      } // leading sign\n\n\n      if ((ch == '+' || ch == '-') && tests.digit.test(stream.peek())) {\n        stream.eat(tests.sign);\n        ch = stream.next();\n      }\n\n      if (tests.digit.test(ch)) {\n        stream.eat(ch);\n        stream.eatWhile(tests.digit);\n\n        if ('.' == stream.peek()) {\n          stream.eat('.');\n          stream.eatWhile(tests.digit);\n        }\n\n        if (stream.eat(tests.exponent)) {\n          stream.eat(tests.sign);\n          stream.eatWhile(tests.digit);\n        }\n\n        return true;\n      }\n\n      return false;\n    }\n\n    return {\n      startState: function () {\n        return {\n          indentStack: null,\n          indentation: 0,\n          mode: false\n        };\n      },\n      token: function (stream, state) {\n        if (state.indentStack == null && stream.sol()) {\n          // update indentation, but only if indentStack is empty\n          state.indentation = 6; //stream.indentation();\n        } // skip spaces\n\n\n        if (stream.eatSpace()) {\n          return null;\n        }\n\n        var returnType = null;\n\n        switch (state.mode) {\n          case \"string\":\n            // multi-line string parsing mode\n            var next = false;\n\n            while ((next = stream.next()) != null) {\n              if (next == \"\\\"\" || next == \"\\'\") {\n                state.mode = false;\n                break;\n              }\n            }\n\n            returnType = STRING; // continue on in string mode\n\n            break;\n\n          default:\n            // default parsing mode\n            var ch = stream.next();\n            var col = stream.column();\n\n            if (col >= 0 && col <= 5) {\n              returnType = COBOLLINENUM;\n            } else if (col >= 72 && col <= 79) {\n              stream.skipToEnd();\n              returnType = MODTAG;\n            } else if (ch == \"*\" && col == 6) {\n              // comment\n              stream.skipToEnd(); // rest of the line is a comment\n\n              returnType = COMMENT;\n            } else if (ch == \"\\\"\" || ch == \"\\'\") {\n              state.mode = \"string\";\n              returnType = STRING;\n            } else if (ch == \"'\" && !tests.digit_or_colon.test(stream.peek())) {\n              returnType = ATOM;\n            } else if (ch == \".\") {\n              returnType = PERIOD;\n            } else if (isNumber(ch, stream)) {\n              returnType = NUMBER;\n            } else {\n              if (stream.current().match(tests.symbol)) {\n                while (col < 71) {\n                  if (stream.eat(tests.symbol) === undefined) {\n                    break;\n                  } else {\n                    col++;\n                  }\n                }\n              }\n\n              if (keywords && keywords.propertyIsEnumerable(stream.current().toUpperCase())) {\n                returnType = KEYWORD;\n              } else if (builtins && builtins.propertyIsEnumerable(stream.current().toUpperCase())) {\n                returnType = BUILTIN;\n              } else if (atoms && atoms.propertyIsEnumerable(stream.current().toUpperCase())) {\n                returnType = ATOM;\n              } else returnType = null;\n            }\n\n        }\n\n        return returnType;\n      },\n      indent: function (state) {\n        if (state.indentStack == null) return state.indentation;\n        return state.indentStack.indent;\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-cobol\", \"cobol\");\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw/node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/cobol/cobol.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","BUILTIN","COMMENT","STRING","ATOM","NUMBER","KEYWORD","MODTAG","COBOLLINENUM","PERIOD","makeKeywords","str","obj","words","split","i","length","atoms","keywords","builtins","tests","digit","digit_or_colon","hex","sign","exponent","keyword_char","symbol","isNumber","ch","stream","eat","eatWhile","test","peek","next","startState","indentStack","indentation","mode","token","state","sol","eatSpace","returnType","col","column","skipToEnd","current","match","undefined","propertyIsEnumerable","toUpperCase","indent","defineMIME"],"mappings":"AAAA;AACA;;AAEA;;;;AAIA,CAAC,UAASA,GAAT,EAAc;AACb,MAAI,OAAOC,OAAP,IAAkB,QAAlB,IAA8B,OAAOC,MAAP,IAAiB,QAAnD,EAA6D;AAC3DF,IAAAA,GAAG,CAACG,OAAO,CAAC,sBAAD,CAAR,CAAH,CADF,KAEK,IAAI,OAAOC,MAAP,IAAiB,UAAjB,IAA+BA,MAAM,CAACC,GAA1C,EAA+C;AAClDD,IAAAA,MAAM,CAAC,CAAC,sBAAD,CAAD,EAA2BJ,GAA3B,CAAN,CADG,KAEA;AACHA,IAAAA,GAAG,CAACM,UAAD,CAAH;AACH,CAPD,EAOG,UAASA,UAAT,EAAqB;AACxB;;AAEAA,EAAAA,UAAU,CAACC,UAAX,CAAsB,OAAtB,EAA+B,YAAY;AACzC,QAAIC,OAAO,GAAG,SAAd;AAAA,QAAyBC,OAAO,GAAG,SAAnC;AAAA,QAA8CC,MAAM,GAAG,QAAvD;AAAA,QACIC,IAAI,GAAG,MADX;AAAA,QACmBC,MAAM,GAAG,QAD5B;AAAA,QACsCC,OAAO,GAAG,SADhD;AAAA,QAC2DC,MAAM,GAAG,QADpE;AAAA,QAEIC,YAAY,GAAG,KAFnB;AAAA,QAE0BC,MAAM,GAAG,MAFnC;;AAGA,aAASC,YAAT,CAAsBC,GAAtB,EAA2B;AACzB,UAAIC,GAAG,GAAG,EAAV;AAAA,UAAcC,KAAK,GAAGF,GAAG,CAACG,KAAJ,CAAU,GAAV,CAAtB;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,KAAK,CAACG,MAA1B,EAAkC,EAAED,CAApC,EAAuCH,GAAG,CAACC,KAAK,CAACE,CAAD,CAAN,CAAH,GAAgB,IAAhB;;AACvC,aAAOH,GAAP;AACD;;AACD,QAAIK,KAAK,GAAGP,YAAY,CAAC,iEAAD,CAAxB;AACA,QAAIQ,QAAQ,GAAGR,YAAY,CACvB,uCACA,qCADA,GAEA,gFAFA,GAGA,+BAHA,GAIA,sCAJA,GAKA,kCALA,GAMA,0CANA,GAOA,qDAPA,GAQA,8BARA,GASA,mCATA,GAUA,uBAVA,GAWA,4CAXA,GAYA,gCAZA,GAaA,2CAbA,GAcA,0CAdA,GAeA,qCAfA,GAgBA,qDAhBA,GAiBA,kFAjBA,GAkBA,0EAlBA,GAmBA,mDAnBA,GAoBA,iDApBA,GAqBA,2CArBA,GAsBA,wCAtBA,GAuBA,2CAvBA,GAwBA,iEAxBA,GAyBA,2DAzBA,GA0BA,sDA1BA,GA2BA,2DA3BA,GA4BA,sDA5BA,GA6BA,uDA7BA,GA8BA,8CA9BA,GA+BA,oDA/BA,GAgCA,gDAhCA,GAiCA,yCAjCA,GAkCA,4BAlCA,GAmCA,2DAnCA,GAoCA,sDApCA,GAqCA,yDArCA,GAsCA,0DAtCA,GAuCA,2DAvCA,GAwCA,6CAxCA,GAyCA,qCAzCA,GA0CA,mCA1CA,GA2CA,2CA3CA,GA4CA,sDA5CA,GA6CA,sCA7CA,GA8CA,4CA9CA,GA+CA,0CA/CA,GAgDA,sCAhDA,GAiDA,kCAjDA,GAkDA,mDAlDA,GAmDA,gCAnDA,GAoDA,0CApDA,GAqDA,0CArDA,GAsDA,8CAtDA,GAuDA,iDAvDA,GAwDA,sCAxDA,GAyDA,gCAzDA,GA0DA,6BA1DA,GA2DA,gDA3DA,GA4DA,0CA5DA,GA6DA,gDA7DA,GA8DA,sBA9DA,GA+DA,wCA/DA,GAgEA,oCAhEA,GAiEA,6CAjEA,GAkEA,2BAlEA,GAmEA,0CAnEA,GAoEA,uDApEA,GAqEA,yBArEA,GAsEA,sCAtEA,GAuEA,6CAvEA,GAwEA,0CAxEA,GAyEA,yBAzEA,GA0EA,2CA1EA,GA2EA,wDA3EA,GA4EA,gDA5EA,GA6EA,qCA7EA,GA8EA,8BA9EA,GA+EA,6CA/EA,GAgFA,6CAhFA,GAiFA,yDAjFA,GAkFA,6CAlFA,GAmFA,gDAnFA,GAoFA,yCApFA,GAqFA,uDArFA,GAsFA,gCAtFA,GAuFA,+CAvFA,GAwFA,4BAxFA,GAyFA,gDAzFA,GA0FA,yCA1FA,GA2FA,kCA3FA,GA4FA,oCA5FA,GA6FA,gDA7FA,GA8FA,+CA9FA,GA+FA,mCA/FA,GAgGA,wDAhGA,GAiGA,2CAjGA,GAkGA,0CAlGA,GAmGA,sCAnGA,GAoGA,gCApGA,GAqGA,gCArGA,GAsGA,4CAtGA,GAuGA,sCAvGA,GAwGA,gCAxGA,GAyGA,mCAzGA,GA0GA,oCA1GA,GA2GA,sCA3GA,GA4GA,2CA5GA,GA6GA,8CA9GuB,CAA3B;AAgHA,QAAIS,QAAQ,GAAGT,YAAY,CAAC,yBAAD,CAA3B;AACA,QAAIU,KAAK,GAAG;AACVC,MAAAA,KAAK,EAAE,IADG;AAEVC,MAAAA,cAAc,EAAE,OAFN;AAGVC,MAAAA,GAAG,EAAE,WAHK;AAIVC,MAAAA,IAAI,EAAE,MAJI;AAKVC,MAAAA,QAAQ,EAAE,IALA;AAMVC,MAAAA,YAAY,EAAE,iBANJ;AAOVC,MAAAA,MAAM,EAAE;AAPE,KAAZ;;AASA,aAASC,QAAT,CAAkBC,EAAlB,EAAsBC,MAAtB,EAA6B;AAC3B;AACA,UAAKD,EAAE,KAAK,GAAP,IAAcC,MAAM,CAACC,GAAP,CAAW,IAAX,CAAnB,EAAsC;AACpCD,QAAAA,MAAM,CAACE,QAAP,CAAgBZ,KAAK,CAACG,GAAtB;AACA,eAAO,IAAP;AACD,OAL0B,CAM3B;;;AACA,UAAK,CAAEM,EAAE,IAAI,GAAN,IAAaA,EAAE,IAAI,GAArB,KAAgCT,KAAK,CAACC,KAAN,CAAYY,IAAZ,CAAiBH,MAAM,CAACI,IAAP,EAAjB,CAArC,EAAyE;AACvEJ,QAAAA,MAAM,CAACC,GAAP,CAAWX,KAAK,CAACI,IAAjB;AACAK,QAAAA,EAAE,GAAGC,MAAM,CAACK,IAAP,EAAL;AACD;;AACD,UAAKf,KAAK,CAACC,KAAN,CAAYY,IAAZ,CAAiBJ,EAAjB,CAAL,EAA4B;AAC1BC,QAAAA,MAAM,CAACC,GAAP,CAAWF,EAAX;AACAC,QAAAA,MAAM,CAACE,QAAP,CAAgBZ,KAAK,CAACC,KAAtB;;AACA,YAAK,OAAOS,MAAM,CAACI,IAAP,EAAZ,EAA2B;AACzBJ,UAAAA,MAAM,CAACC,GAAP,CAAW,GAAX;AACAD,UAAAA,MAAM,CAACE,QAAP,CAAgBZ,KAAK,CAACC,KAAtB;AACD;;AACD,YAAKS,MAAM,CAACC,GAAP,CAAWX,KAAK,CAACK,QAAjB,CAAL,EAAkC;AAChCK,UAAAA,MAAM,CAACC,GAAP,CAAWX,KAAK,CAACI,IAAjB;AACAM,UAAAA,MAAM,CAACE,QAAP,CAAgBZ,KAAK,CAACC,KAAtB;AACD;;AACD,eAAO,IAAP;AACD;;AACD,aAAO,KAAP;AACD;;AACD,WAAO;AACLe,MAAAA,UAAU,EAAE,YAAY;AACtB,eAAO;AACLC,UAAAA,WAAW,EAAE,IADR;AAELC,UAAAA,WAAW,EAAE,CAFR;AAGLC,UAAAA,IAAI,EAAE;AAHD,SAAP;AAKD,OAPI;AAQLC,MAAAA,KAAK,EAAE,UAAUV,MAAV,EAAkBW,KAAlB,EAAyB;AAC9B,YAAIA,KAAK,CAACJ,WAAN,IAAqB,IAArB,IAA6BP,MAAM,CAACY,GAAP,EAAjC,EAA+C;AAC7C;AACAD,UAAAA,KAAK,CAACH,WAAN,GAAoB,CAApB,CAF6C,CAErB;AACzB,SAJ6B,CAK9B;;;AACA,YAAIR,MAAM,CAACa,QAAP,EAAJ,EAAuB;AACrB,iBAAO,IAAP;AACD;;AACD,YAAIC,UAAU,GAAG,IAAjB;;AACA,gBAAOH,KAAK,CAACF,IAAb;AACA,eAAK,QAAL;AAAe;AACb,gBAAIJ,IAAI,GAAG,KAAX;;AACA,mBAAO,CAACA,IAAI,GAAGL,MAAM,CAACK,IAAP,EAAR,KAA0B,IAAjC,EAAuC;AACrC,kBAAIA,IAAI,IAAI,IAAR,IAAgBA,IAAI,IAAI,IAA5B,EAAkC;AAChCM,gBAAAA,KAAK,CAACF,IAAN,GAAa,KAAb;AACA;AACD;AACF;;AACDK,YAAAA,UAAU,GAAGzC,MAAb,CARF,CAQuB;;AACrB;;AACF;AAAS;AACP,gBAAI0B,EAAE,GAAGC,MAAM,CAACK,IAAP,EAAT;AACA,gBAAIU,GAAG,GAAGf,MAAM,CAACgB,MAAP,EAAV;;AACA,gBAAID,GAAG,IAAI,CAAP,IAAYA,GAAG,IAAI,CAAvB,EAA0B;AACxBD,cAAAA,UAAU,GAAGpC,YAAb;AACD,aAFD,MAEO,IAAIqC,GAAG,IAAI,EAAP,IAAaA,GAAG,IAAI,EAAxB,EAA4B;AACjCf,cAAAA,MAAM,CAACiB,SAAP;AACAH,cAAAA,UAAU,GAAGrC,MAAb;AACD,aAHM,MAGA,IAAIsB,EAAE,IAAI,GAAN,IAAagB,GAAG,IAAI,CAAxB,EAA2B;AAAE;AAClCf,cAAAA,MAAM,CAACiB,SAAP,GADgC,CACZ;;AACpBH,cAAAA,UAAU,GAAG1C,OAAb;AACD,aAHM,MAGA,IAAI2B,EAAE,IAAI,IAAN,IAAcA,EAAE,IAAI,IAAxB,EAA8B;AACnCY,cAAAA,KAAK,CAACF,IAAN,GAAa,QAAb;AACAK,cAAAA,UAAU,GAAGzC,MAAb;AACD,aAHM,MAGA,IAAI0B,EAAE,IAAI,GAAN,IAAa,CAAGT,KAAK,CAACE,cAAN,CAAqBW,IAArB,CAA0BH,MAAM,CAACI,IAAP,EAA1B,CAApB,EAAgE;AACrEU,cAAAA,UAAU,GAAGxC,IAAb;AACD,aAFM,MAEA,IAAIyB,EAAE,IAAI,GAAV,EAAe;AACpBe,cAAAA,UAAU,GAAGnC,MAAb;AACD,aAFM,MAEA,IAAImB,QAAQ,CAACC,EAAD,EAAIC,MAAJ,CAAZ,EAAwB;AAC7Bc,cAAAA,UAAU,GAAGvC,MAAb;AACD,aAFM,MAEA;AACL,kBAAIyB,MAAM,CAACkB,OAAP,GAAiBC,KAAjB,CAAuB7B,KAAK,CAACO,MAA7B,CAAJ,EAA0C;AACxC,uBAAOkB,GAAG,GAAG,EAAb,EAAiB;AACf,sBAAIf,MAAM,CAACC,GAAP,CAAWX,KAAK,CAACO,MAAjB,MAA6BuB,SAAjC,EAA4C;AAC1C;AACD,mBAFD,MAEO;AACLL,oBAAAA,GAAG;AACJ;AACF;AACF;;AACD,kBAAI3B,QAAQ,IAAIA,QAAQ,CAACiC,oBAAT,CAA8BrB,MAAM,CAACkB,OAAP,GAAiBI,WAAjB,EAA9B,CAAhB,EAA+E;AAC7ER,gBAAAA,UAAU,GAAGtC,OAAb;AACD,eAFD,MAEO,IAAIa,QAAQ,IAAIA,QAAQ,CAACgC,oBAAT,CAA8BrB,MAAM,CAACkB,OAAP,GAAiBI,WAAjB,EAA9B,CAAhB,EAA+E;AACpFR,gBAAAA,UAAU,GAAG3C,OAAb;AACD,eAFM,MAEA,IAAIgB,KAAK,IAAIA,KAAK,CAACkC,oBAAN,CAA2BrB,MAAM,CAACkB,OAAP,GAAiBI,WAAjB,EAA3B,CAAb,EAAyE;AAC9ER,gBAAAA,UAAU,GAAGxC,IAAb;AACD,eAFM,MAEAwC,UAAU,GAAG,IAAb;AACR;;AAhDH;;AAkDA,eAAOA,UAAP;AACD,OArEI;AAsELS,MAAAA,MAAM,EAAE,UAAUZ,KAAV,EAAiB;AACvB,YAAIA,KAAK,CAACJ,WAAN,IAAqB,IAAzB,EAA+B,OAAOI,KAAK,CAACH,WAAb;AAC/B,eAAOG,KAAK,CAACJ,WAAN,CAAkBgB,MAAzB;AACD;AAzEI,KAAP;AA2ED,GAzOD;AA2OAtD,EAAAA,UAAU,CAACuD,UAAX,CAAsB,cAAtB,EAAsC,OAAtC;AAEC,CAvPD","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/**\n * Author: Gautam Mehta\n * Branched from CodeMirror's Scheme mode\n */\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"cobol\", function () {\n  var BUILTIN = \"builtin\", COMMENT = \"comment\", STRING = \"string\",\n      ATOM = \"atom\", NUMBER = \"number\", KEYWORD = \"keyword\", MODTAG = \"header\",\n      COBOLLINENUM = \"def\", PERIOD = \"link\";\n  function makeKeywords(str) {\n    var obj = {}, words = str.split(\" \");\n    for (var i = 0; i < words.length; ++i) obj[words[i]] = true;\n    return obj;\n  }\n  var atoms = makeKeywords(\"TRUE FALSE ZEROES ZEROS ZERO SPACES SPACE LOW-VALUE LOW-VALUES \");\n  var keywords = makeKeywords(\n      \"ACCEPT ACCESS ACQUIRE ADD ADDRESS \" +\n      \"ADVANCING AFTER ALIAS ALL ALPHABET \" +\n      \"ALPHABETIC ALPHABETIC-LOWER ALPHABETIC-UPPER ALPHANUMERIC ALPHANUMERIC-EDITED \" +\n      \"ALSO ALTER ALTERNATE AND ANY \" +\n      \"ARE AREA AREAS ARITHMETIC ASCENDING \" +\n      \"ASSIGN AT ATTRIBUTE AUTHOR AUTO \" +\n      \"AUTO-SKIP AUTOMATIC B-AND B-EXOR B-LESS \" +\n      \"B-NOT B-OR BACKGROUND-COLOR BACKGROUND-COLOUR BEEP \" +\n      \"BEFORE BELL BINARY BIT BITS \" +\n      \"BLANK BLINK BLOCK BOOLEAN BOTTOM \" +\n      \"BY CALL CANCEL CD CF \" +\n      \"CH CHARACTER CHARACTERS CLASS CLOCK-UNITS \" +\n      \"CLOSE COBOL CODE CODE-SET COL \" +\n      \"COLLATING COLUMN COMMA COMMIT COMMITMENT \" +\n      \"COMMON COMMUNICATION COMP COMP-0 COMP-1 \" +\n      \"COMP-2 COMP-3 COMP-4 COMP-5 COMP-6 \" +\n      \"COMP-7 COMP-8 COMP-9 COMPUTATIONAL COMPUTATIONAL-0 \" +\n      \"COMPUTATIONAL-1 COMPUTATIONAL-2 COMPUTATIONAL-3 COMPUTATIONAL-4 COMPUTATIONAL-5 \" +\n      \"COMPUTATIONAL-6 COMPUTATIONAL-7 COMPUTATIONAL-8 COMPUTATIONAL-9 COMPUTE \" +\n      \"CONFIGURATION CONNECT CONSOLE CONTAINED CONTAINS \" +\n      \"CONTENT CONTINUE CONTROL CONTROL-AREA CONTROLS \" +\n      \"CONVERTING COPY CORR CORRESPONDING COUNT \" +\n      \"CRT CRT-UNDER CURRENCY CURRENT CURSOR \" +\n      \"DATA DATE DATE-COMPILED DATE-WRITTEN DAY \" +\n      \"DAY-OF-WEEK DB DB-ACCESS-CONTROL-KEY DB-DATA-NAME DB-EXCEPTION \" +\n      \"DB-FORMAT-NAME DB-RECORD-NAME DB-SET-NAME DB-STATUS DBCS \" +\n      \"DBCS-EDITED DE DEBUG-CONTENTS DEBUG-ITEM DEBUG-LINE \" +\n      \"DEBUG-NAME DEBUG-SUB-1 DEBUG-SUB-2 DEBUG-SUB-3 DEBUGGING \" +\n      \"DECIMAL-POINT DECLARATIVES DEFAULT DELETE DELIMITED \" +\n      \"DELIMITER DEPENDING DESCENDING DESCRIBED DESTINATION \" +\n      \"DETAIL DISABLE DISCONNECT DISPLAY DISPLAY-1 \" +\n      \"DISPLAY-2 DISPLAY-3 DISPLAY-4 DISPLAY-5 DISPLAY-6 \" +\n      \"DISPLAY-7 DISPLAY-8 DISPLAY-9 DIVIDE DIVISION \" +\n      \"DOWN DROP DUPLICATE DUPLICATES DYNAMIC \" +\n      \"EBCDIC EGI EJECT ELSE EMI \" +\n      \"EMPTY EMPTY-CHECK ENABLE END END. END-ACCEPT END-ACCEPT. \" +\n      \"END-ADD END-CALL END-COMPUTE END-DELETE END-DISPLAY \" +\n      \"END-DIVIDE END-EVALUATE END-IF END-INVOKE END-MULTIPLY \" +\n      \"END-OF-PAGE END-PERFORM END-READ END-RECEIVE END-RETURN \" +\n      \"END-REWRITE END-SEARCH END-START END-STRING END-SUBTRACT \" +\n      \"END-UNSTRING END-WRITE END-XML ENTER ENTRY \" +\n      \"ENVIRONMENT EOP EQUAL EQUALS ERASE \" +\n      \"ERROR ESI EVALUATE EVERY EXCEEDS \" +\n      \"EXCEPTION EXCLUSIVE EXIT EXTEND EXTERNAL \" +\n      \"EXTERNALLY-DESCRIBED-KEY FD FETCH FILE FILE-CONTROL \" +\n      \"FILE-STREAM FILES FILLER FINAL FIND \" +\n      \"FINISH FIRST FOOTING FOR FOREGROUND-COLOR \" +\n      \"FOREGROUND-COLOUR FORMAT FREE FROM FULL \" +\n      \"FUNCTION GENERATE GET GIVING GLOBAL \" +\n      \"GO GOBACK GREATER GROUP HEADING \" +\n      \"HIGH-VALUE HIGH-VALUES HIGHLIGHT I-O I-O-CONTROL \" +\n      \"ID IDENTIFICATION IF IN INDEX \" +\n      \"INDEX-1 INDEX-2 INDEX-3 INDEX-4 INDEX-5 \" +\n      \"INDEX-6 INDEX-7 INDEX-8 INDEX-9 INDEXED \" +\n      \"INDIC INDICATE INDICATOR INDICATORS INITIAL \" +\n      \"INITIALIZE INITIATE INPUT INPUT-OUTPUT INSPECT \" +\n      \"INSTALLATION INTO INVALID INVOKE IS \" +\n      \"JUST JUSTIFIED KANJI KEEP KEY \" +\n      \"LABEL LAST LD LEADING LEFT \" +\n      \"LEFT-JUSTIFY LENGTH LENGTH-CHECK LESS LIBRARY \" +\n      \"LIKE LIMIT LIMITS LINAGE LINAGE-COUNTER \" +\n      \"LINE LINE-COUNTER LINES LINKAGE LOCAL-STORAGE \" +\n      \"LOCALE LOCALLY LOCK \" +\n      \"MEMBER MEMORY MERGE MESSAGE METACLASS \" +\n      \"MODE MODIFIED MODIFY MODULES MOVE \" +\n      \"MULTIPLE MULTIPLY NATIONAL NATIVE NEGATIVE \" +\n      \"NEXT NO NO-ECHO NONE NOT \" +\n      \"NULL NULL-KEY-MAP NULL-MAP NULLS NUMBER \" +\n      \"NUMERIC NUMERIC-EDITED OBJECT OBJECT-COMPUTER OCCURS \" +\n      \"OF OFF OMITTED ON ONLY \" +\n      \"OPEN OPTIONAL OR ORDER ORGANIZATION \" +\n      \"OTHER OUTPUT OVERFLOW OWNER PACKED-DECIMAL \" +\n      \"PADDING PAGE PAGE-COUNTER PARSE PERFORM \" +\n      \"PF PH PIC PICTURE PLUS \" +\n      \"POINTER POSITION POSITIVE PREFIX PRESENT \" +\n      \"PRINTING PRIOR PROCEDURE PROCEDURE-POINTER PROCEDURES \" +\n      \"PROCEED PROCESS PROCESSING PROGRAM PROGRAM-ID \" +\n      \"PROMPT PROTECTED PURGE QUEUE QUOTE \" +\n      \"QUOTES RANDOM RD READ READY \" +\n      \"REALM RECEIVE RECONNECT RECORD RECORD-NAME \" +\n      \"RECORDS RECURSIVE REDEFINES REEL REFERENCE \" +\n      \"REFERENCE-MONITOR REFERENCES RELATION RELATIVE RELEASE \" +\n      \"REMAINDER REMOVAL RENAMES REPEATED REPLACE \" +\n      \"REPLACING REPORT REPORTING REPORTS REPOSITORY \" +\n      \"REQUIRED RERUN RESERVE RESET RETAINING \" +\n      \"RETRIEVAL RETURN RETURN-CODE RETURNING REVERSE-VIDEO \" +\n      \"REVERSED REWIND REWRITE RF RH \" +\n      \"RIGHT RIGHT-JUSTIFY ROLLBACK ROLLING ROUNDED \" +\n      \"RUN SAME SCREEN SD SEARCH \" +\n      \"SECTION SECURE SECURITY SEGMENT SEGMENT-LIMIT \" +\n      \"SELECT SEND SENTENCE SEPARATE SEQUENCE \" +\n      \"SEQUENTIAL SET SHARED SIGN SIZE \" +\n      \"SKIP1 SKIP2 SKIP3 SORT SORT-MERGE \" +\n      \"SORT-RETURN SOURCE SOURCE-COMPUTER SPACE-FILL \" +\n      \"SPECIAL-NAMES STANDARD STANDARD-1 STANDARD-2 \" +\n      \"START STARTING STATUS STOP STORE \" +\n      \"STRING SUB-QUEUE-1 SUB-QUEUE-2 SUB-QUEUE-3 SUB-SCHEMA \" +\n      \"SUBFILE SUBSTITUTE SUBTRACT SUM SUPPRESS \" +\n      \"SYMBOLIC SYNC SYNCHRONIZED SYSIN SYSOUT \" +\n      \"TABLE TALLYING TAPE TENANT TERMINAL \" +\n      \"TERMINATE TEST TEXT THAN THEN \" +\n      \"THROUGH THRU TIME TIMES TITLE \" +\n      \"TO TOP TRAILING TRAILING-SIGN TRANSACTION \" +\n      \"TYPE TYPEDEF UNDERLINE UNEQUAL UNIT \" +\n      \"UNSTRING UNTIL UP UPDATE UPON \" +\n      \"USAGE USAGE-MODE USE USING VALID \" +\n      \"VALIDATE VALUE VALUES VARYING VLR \" +\n      \"WAIT WHEN WHEN-COMPILED WITH WITHIN \" +\n      \"WORDS WORKING-STORAGE WRITE XML XML-CODE \" +\n      \"XML-EVENT XML-NTEXT XML-TEXT ZERO ZERO-FILL \" );\n\n  var builtins = makeKeywords(\"- * ** / + < <= = > >= \");\n  var tests = {\n    digit: /\\d/,\n    digit_or_colon: /[\\d:]/,\n    hex: /[0-9a-f]/i,\n    sign: /[+-]/,\n    exponent: /e/i,\n    keyword_char: /[^\\s\\(\\[\\;\\)\\]]/,\n    symbol: /[\\w*+\\-]/\n  };\n  function isNumber(ch, stream){\n    // hex\n    if ( ch === '0' && stream.eat(/x/i) ) {\n      stream.eatWhile(tests.hex);\n      return true;\n    }\n    // leading sign\n    if ( ( ch == '+' || ch == '-' ) && ( tests.digit.test(stream.peek()) ) ) {\n      stream.eat(tests.sign);\n      ch = stream.next();\n    }\n    if ( tests.digit.test(ch) ) {\n      stream.eat(ch);\n      stream.eatWhile(tests.digit);\n      if ( '.' == stream.peek()) {\n        stream.eat('.');\n        stream.eatWhile(tests.digit);\n      }\n      if ( stream.eat(tests.exponent) ) {\n        stream.eat(tests.sign);\n        stream.eatWhile(tests.digit);\n      }\n      return true;\n    }\n    return false;\n  }\n  return {\n    startState: function () {\n      return {\n        indentStack: null,\n        indentation: 0,\n        mode: false\n      };\n    },\n    token: function (stream, state) {\n      if (state.indentStack == null && stream.sol()) {\n        // update indentation, but only if indentStack is empty\n        state.indentation = 6 ; //stream.indentation();\n      }\n      // skip spaces\n      if (stream.eatSpace()) {\n        return null;\n      }\n      var returnType = null;\n      switch(state.mode){\n      case \"string\": // multi-line string parsing mode\n        var next = false;\n        while ((next = stream.next()) != null) {\n          if (next == \"\\\"\" || next == \"\\'\") {\n            state.mode = false;\n            break;\n          }\n        }\n        returnType = STRING; // continue on in string mode\n        break;\n      default: // default parsing mode\n        var ch = stream.next();\n        var col = stream.column();\n        if (col >= 0 && col <= 5) {\n          returnType = COBOLLINENUM;\n        } else if (col >= 72 && col <= 79) {\n          stream.skipToEnd();\n          returnType = MODTAG;\n        } else if (ch == \"*\" && col == 6) { // comment\n          stream.skipToEnd(); // rest of the line is a comment\n          returnType = COMMENT;\n        } else if (ch == \"\\\"\" || ch == \"\\'\") {\n          state.mode = \"string\";\n          returnType = STRING;\n        } else if (ch == \"'\" && !( tests.digit_or_colon.test(stream.peek()) )) {\n          returnType = ATOM;\n        } else if (ch == \".\") {\n          returnType = PERIOD;\n        } else if (isNumber(ch,stream)){\n          returnType = NUMBER;\n        } else {\n          if (stream.current().match(tests.symbol)) {\n            while (col < 71) {\n              if (stream.eat(tests.symbol) === undefined) {\n                break;\n              } else {\n                col++;\n              }\n            }\n          }\n          if (keywords && keywords.propertyIsEnumerable(stream.current().toUpperCase())) {\n            returnType = KEYWORD;\n          } else if (builtins && builtins.propertyIsEnumerable(stream.current().toUpperCase())) {\n            returnType = BUILTIN;\n          } else if (atoms && atoms.propertyIsEnumerable(stream.current().toUpperCase())) {\n            returnType = ATOM;\n          } else returnType = null;\n        }\n      }\n      return returnType;\n    },\n    indent: function (state) {\n      if (state.indentStack == null) return state.indentation;\n      return state.indentStack.indent;\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-cobol\", \"cobol\");\n\n});\n"]},"metadata":{},"sourceType":"script"}