{"ast":null,"code":"import _regeneratorRuntime from\"/Users/akshatgarg/Documents/codedraw-server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/akshatgarg/Documents/codedraw-server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/akshatgarg/Documents/codedraw-server/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import CodeMirrorComponent from'./CodeEditor/CodeMirror';import IObox from'./CodeEditor/IObox';import LanguageSelector from'./CodeEditor/LanguageSelect';import SubmitButton from'./CodeEditor/Submitbutton';import React,{useState}from'react';import axios from'axios';export default function CodeEditor(){var _useState=useState(),_useState2=_slicedToArray(_useState,2),code=_useState2[0],setCode=_useState2[1];var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),input=_useState4[0],setInput=_useState4[1];var _useState5=useState('c++'),_useState6=_slicedToArray(_useState5,2),language=_useState6[0],setLanguage=_useState6[1];var _useState7=useState({output:\"\",memory:\"\",cpuTime:\"\",statusCode:\"\"}),_useState8=_slicedToArray(_useState7,2),output=_useState8[0],setOutput=_useState8[1];function postData(data){return new Promise(function(res,rej){axios.post(\"http://localhost:3000/execute\",data).then(function(result){res(result);}).catch(function(e){return console.log(e);});});}function codeChange(change){setCode(change.getValue());}function inputChange(e){setInput(e.target.value);}function languageChange(e){setLanguage(e.target.value);}function codeSubmit(){return _codeSubmit.apply(this,arguments);}function _codeSubmit(){_codeSubmit=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var sendLanguage,data,response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setOutput({output:\"Compiling...\"});sendLanguage='cpp';_context.t0=language;_context.next=_context.t0==='c++'?5:_context.t0==='c'?7:_context.t0==='python'?9:_context.t0==='java'?11:13;break;case 5:sendLanguage=\"cpp\";return _context.abrupt(\"break\",14);case 7:sendLanguage='c';return _context.abrupt(\"break\",14);case 9:sendLanguage=\"python3\";return _context.abrupt(\"break\",14);case 11:sendLanguage=\"java\";return _context.abrupt(\"break\",14);case 13:return _context.abrupt(\"break\",14);case 14:data={\"script\":code,\"language\":sendLanguage,\"stdin\":input};if(!code){_context.next=24;break;}console.log(data);_context.next=19;return postData(data);case 19:response=_context.sent;console.log(data);setOutput(response.data);_context.next=25;break;case 24:setOutput({output:\"\",memory:\"\",cpuTime:\"\",statusCode:\"\"});case 25:case\"end\":return _context.stop();}}},_callee);}));return _codeSubmit.apply(this,arguments);}return/*#__PURE__*/React.createElement(\"div\",{className:\"codeEditor\"},/*#__PURE__*/React.createElement(LanguageSelector,{value:language,onChange:languageChange}),/*#__PURE__*/React.createElement(CodeMirrorComponent,{onChange:codeChange,language:language}),/*#__PURE__*/React.createElement(SubmitButton,{onClick:codeSubmit}),/*#__PURE__*/React.createElement(IObox,{value:input,onChange:inputChange,output:output}));}","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw-server/client/src/Components/CodeEditor.jsx"],"names":["CodeMirrorComponent","IObox","LanguageSelector","SubmitButton","React","useState","axios","CodeEditor","code","setCode","input","setInput","language","setLanguage","output","memory","cpuTime","statusCode","setOutput","postData","data","Promise","res","rej","post","then","result","catch","e","console","log","codeChange","change","getValue","inputChange","target","value","languageChange","codeSubmit","sendLanguage","response"],"mappings":"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","sourcesContent":["import CodeMirrorComponent from './CodeEditor/CodeMirror'\nimport IObox from './CodeEditor/IObox';\nimport LanguageSelector from './CodeEditor/LanguageSelect';\nimport SubmitButton from './CodeEditor/Submitbutton';\nimport React,{useState} from 'react'\nimport axios from 'axios'\nexport default function CodeEditor(){\n  const [code, setCode] = useState();\n  const [input, setInput] = useState();\n  const [language, setLanguage]= useState('c++');\n  const [output, setOutput] = useState({\n    output:\"\",\n    memory:\"\",\n    cpuTime:\"\",\n    statusCode:\"\"\n  });\n  function postData(data){\n    return new Promise((res,rej)=>{\n      axios.post(\"http://localhost:3000/execute\",data).then((result)=>{\n        res(result);\n      }).catch(e => console.log(e));\n      \n    })\n  \n  }\n  function codeChange(change){\n    setCode(change.getValue());\n  }\n  function inputChange(e){\n    setInput(e.target.value);\n  }\n  function languageChange(e){\n    setLanguage(e.target.value);\n  }\n  async function codeSubmit(){\n    setOutput({output:\"Compiling...\"});\n    let sendLanguage = 'cpp'\n    switch(language){\n      case 'c++':\n        sendLanguage = \"cpp\"\n        break;\n      case 'c':\n        sendLanguage = 'c';\n        break;\n      case 'python':\n        sendLanguage = \"python3\";\n        break;\n      case 'java':\n          sendLanguage = \"java\";\n          break;\n     default:\n        break;\n    }\n    let data={\n      \"script\":code,\n      \"language\":sendLanguage,\n      \"stdin\":input\n    }\n    if(code){\n    console.log(data);  \n    let response = await postData(data);\n    console.log(data);\n    setOutput(response.data);\n    }else{\n      setOutput({\n        output:\"\",\n        memory:\"\",\n        cpuTime:\"\",\n        statusCode:\"\"\n      });\n    }\n    // post this code to compiler APIs\n  }\n  return <div className=\"codeEditor\">\n    <LanguageSelector  value={language} onChange={languageChange} />\n    <CodeMirrorComponent \n     onChange={codeChange}\n      language = {language}\n     />\n    <SubmitButton onClick={codeSubmit} />\n    <IObox value={input} onChange={inputChange} output={output} />\n\n  </div>\n}"]},"metadata":{},"sourceType":"module"}