{"ast":null,"code":"var _jsxFileName = \"/Users/akshatgarg/Documents/codedraw/src/Components/CodeEditor.jsx\";\nimport CodeMirrorComponent from './CodeEditor/CodeMirror';\nimport IObox from './CodeEditor/IObox';\nimport LanguageSelector from './CodeEditor/LanguageSelect';\nimport SubmitButton from './CodeEditor/Submitbutton';\nimport React, { useState } from 'react';\nexport default function CodeEditor() {\n  const [code, setCode] = useState('code...');\n  const [input, setInput] = useState();\n  const [language, setLanguage] = useState('c++');\n\n  function codeChange(change) {\n    setCode(change.getValue());\n  }\n\n  function inputChange(e) {\n    setInput(e.target.value);\n  }\n\n  function languageChange(e) {\n    setLanguage(e.target.value);\n  }\n\n  function codeSubmit() {\n    let codeJSON = JSON.stringify(code);\n    let inputJSON = JSON.stringify(input);\n    let languageJSON = JSON.stringify(language);\n    console.log(codeJSON, inputJSON, languageJSON); // post this code to compiler APIs\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"codeEditor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(LanguageSelector, {\n    value: language,\n    onChange: languageChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(CodeMirrorComponent, {\n    onChange: codeChange,\n    language: language,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(SubmitButton, {\n    onClick: codeSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(IObox, {\n    value: input,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw/src/Components/CodeEditor.jsx"],"names":["CodeMirrorComponent","IObox","LanguageSelector","SubmitButton","React","useState","CodeEditor","code","setCode","input","setInput","language","setLanguage","codeChange","change","getValue","inputChange","e","target","value","languageChange","codeSubmit","codeJSON","JSON","stringify","inputJSON","languageJSON","console","log"],"mappings":";AAAA,OAAOA,mBAAP,MAAgC,yBAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,gBAAP,MAA6B,6BAA7B;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AAEA,eAAe,SAASC,UAAT,GAAqB;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBH,QAAQ,CAAC,SAAD,CAAhC;AACA,QAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,EAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAAyBP,QAAQ,CAAC,KAAD,CAAvC;;AAEA,WAASQ,UAAT,CAAoBC,MAApB,EAA2B;AACzBN,IAAAA,OAAO,CAACM,MAAM,CAACC,QAAP,EAAD,CAAP;AACD;;AACD,WAASC,WAAT,CAAqBC,CAArB,EAAuB;AACrBP,IAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD;;AACD,WAASC,cAAT,CAAwBH,CAAxB,EAA0B;AACxBL,IAAAA,WAAW,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD;;AACD,WAASE,UAAT,GAAqB;AACnB,QAAIC,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAejB,IAAf,CAAf;AACA,QAAIkB,SAAS,GAAGF,IAAI,CAACC,SAAL,CAAef,KAAf,CAAhB;AACA,QAAIiB,YAAY,GAAGH,IAAI,CAACC,SAAL,CAAeb,QAAf,CAAnB;AACAgB,IAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ,EAAqBG,SAArB,EAA+BC,YAA/B,EAJmB,CAKnB;AACD;;AACD,sBAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACL,oBAAC,gBAAD;AAAmB,IAAA,KAAK,EAAEf,QAA1B;AAAoC,IAAA,QAAQ,EAAES,cAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADK,eAEL,oBAAC,mBAAD;AACC,IAAA,QAAQ,EAAEP,UADX;AAEE,IAAA,QAAQ,EAAIF,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFK,eAMP,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEU,UAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANO,eAOH,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEZ,KAAd;AAAqB,IAAA,QAAQ,EAAEO,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPG,CAAP;AAUD","sourcesContent":["import CodeMirrorComponent from './CodeEditor/CodeMirror'\nimport IObox from './CodeEditor/IObox';\nimport LanguageSelector from './CodeEditor/LanguageSelect';\nimport SubmitButton from './CodeEditor/Submitbutton';\nimport React,{useState} from 'react'\n\nexport default function CodeEditor(){\n  const [code, setCode] = useState('code...');\n  const [input, setInput] = useState();\n  const [language, setLanguage]= useState('c++');\n\n  function codeChange(change){\n    setCode(change.getValue());\n  }\n  function inputChange(e){\n    setInput(e.target.value);\n  }\n  function languageChange(e){\n    setLanguage(e.target.value);\n  }\n  function codeSubmit(){\n    let codeJSON = JSON.stringify(code);\n    let inputJSON = JSON.stringify(input);\n    let languageJSON = JSON.stringify(language);\n    console.log(codeJSON,inputJSON,languageJSON);  \n    // post this code to compiler APIs\n  }\n  return <div className=\"codeEditor\">\n    <LanguageSelector  value={language} onChange={languageChange} />\n    <CodeMirrorComponent \n     onChange={codeChange}\n      language = {language}\n     />\n  <SubmitButton onClick={codeSubmit} />\n      <IObox value={input} onChange={inputChange}/>\n\n  </div>\n}"]},"metadata":{},"sourceType":"module"}