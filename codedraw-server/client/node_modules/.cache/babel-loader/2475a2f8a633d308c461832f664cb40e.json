{"ast":null,"code":"var _jsxFileName = \"/Users/akshatgarg/Documents/codedraw/src/Components/CodeEditor.jsx\";\nimport CodeMirrorComponent from './CodeEditor/CodeMirror';\nimport IObox from './CodeEditor/IObox';\nimport React, { useState, useEffect } from 'react';\nexport default function CodeEditor() {\n  const [code, setCode] = useState('code...');\n  const [input, setInput] = useState();\n  const [language, setLanguage] = useState('c++');\n\n  function codeChange(change) {\n    setCode(change.getValue());\n  }\n\n  function inputChange(e) {\n    setInput(e.target.value);\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"codeEditor\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 10\n    }\n  }, /*#__PURE__*/React.createElement(\"select\", {\n    name: \"language\",\n    id: \"language\",\n    value: language,\n    onChange: e => {\n      setLanguage(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"c++\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 5\n    }\n  }, \"C++\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"c\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, \"C\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"python\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, \"python\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"javascript\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \"Javascript\")), /*#__PURE__*/React.createElement(CodeMirrorComponent, {\n    onChange: codeChange,\n    language: language,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 3\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"submit\",\n    onClick: () => {\n      let codeJSON = JSON.stringify(code);\n      let inputJSON = JSON.stringify(input);\n      let languageJSON = JSON.stringify(language);\n      console.log(codeJSON, inputJSON, languageJSON); // post this code to compiler APIs\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 1\n    }\n  }, \"submit\"), /*#__PURE__*/React.createElement(IObox, {\n    value: input,\n    onChange: inputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw/src/Components/CodeEditor.jsx"],"names":["CodeMirrorComponent","IObox","React","useState","useEffect","CodeEditor","code","setCode","input","setInput","language","setLanguage","codeChange","change","getValue","inputChange","e","target","value","codeJSON","JSON","stringify","inputJSON","languageJSON","console","log"],"mappings":";AAAA,OAAOA,mBAAP,MAAgC,yBAAhC;AACA,OAAOC,KAAP,MAAkB,oBAAlB;AACA,OAAOC,KAAP,IAAcC,QAAd,EAAwBC,SAAxB,QAAwC,OAAxC;AAEA,eAAe,SAASC,UAAT,GAAqB;AAClC,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBJ,QAAQ,CAAC,SAAD,CAAhC;AACA,QAAM,CAACK,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,EAAlC;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAAyBR,QAAQ,CAAC,KAAD,CAAvC;;AACA,WAASS,UAAT,CAAoBC,MAApB,EAA2B;AACzBN,IAAAA,OAAO,CAACM,MAAM,CAACC,QAAP,EAAD,CAAP;AACD;;AACD,WAASC,WAAT,CAAqBC,CAArB,EAAuB;AACrBP,IAAAA,QAAQ,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAR;AACD;;AACD,sBAAO;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACP;AAAQ,IAAA,IAAI,EAAC,UAAb;AAAwB,IAAA,EAAE,EAAC,UAA3B;AAAsC,IAAA,KAAK,EAAER,QAA7C;AAAuD,IAAA,QAAQ,EAAGM,CAAD,IAAK;AACpEL,MAAAA,WAAW,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAAX;AACD,KAFD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAGE;AAAQ,IAAA,KAAK,EAAC,KAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHF,eAIE;AAAQ,IAAA,KAAK,EAAC,GAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAJF,eAKE;AAAQ,IAAA,KAAK,EAAC,QAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALF,eAME;AAAQ,IAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBANF,CADO,eASP,oBAAC,mBAAD;AACE,IAAA,QAAQ,EAAEN,UADZ;AAEE,IAAA,QAAQ,EAAIF,QAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATO,eAcT;AAAQ,IAAA,SAAS,EAAC,QAAlB;AAA2B,IAAA,OAAO,EAAE,MAAI;AAChC,UAAIS,QAAQ,GAAGC,IAAI,CAACC,SAAL,CAAef,IAAf,CAAf;AACA,UAAIgB,SAAS,GAAGF,IAAI,CAACC,SAAL,CAAeb,KAAf,CAAhB;AACA,UAAIe,YAAY,GAAGH,IAAI,CAACC,SAAL,CAAeX,QAAf,CAAnB;AACAc,MAAAA,OAAO,CAACC,GAAR,CAAYN,QAAZ,EAAqBG,SAArB,EAA+BC,YAA/B,EAJgC,CAKhC;AACD,KANP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAdS,eAqBH,oBAAC,KAAD;AAAO,IAAA,KAAK,EAAEf,KAAd;AAAqB,IAAA,QAAQ,EAAEO,WAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IArBG,CAAP;AAwBD","sourcesContent":["import CodeMirrorComponent from './CodeEditor/CodeMirror'\nimport IObox from './CodeEditor/IObox';\nimport React,{useState, useEffect} from 'react'\n\nexport default function CodeEditor(){\n  const [code, setCode] = useState('code...');\n  const [input, setInput] = useState();\n  const [language, setLanguage]= useState('c++');\n  function codeChange(change){\n    setCode(change.getValue());\n  }\n  function inputChange(e){\n    setInput(e.target.value);\n  }\n  return <div className=\"codeEditor\">\n  <select name=\"language\" id=\"language\" value={language} onChange={(e)=>{\n    setLanguage(e.target.value);\n  }}>\n    <option value=\"c++\">C++</option>\n    <option value=\"c\">C</option>\n    <option value=\"python\">python</option>\n    <option value=\"javascript\">Javascript</option>\n  </select>\n  <CodeMirrorComponent \n    onChange={codeChange}\n    language = {language}\n  />\n  \n<button className=\"submit\" onClick={()=>{\n        let codeJSON = JSON.stringify(code);\n        let inputJSON = JSON.stringify(input);\n        let languageJSON = JSON.stringify(language);\n        console.log(codeJSON,inputJSON,languageJSON);  \n        // post this code to compiler APIs\n      }}>submit</button>\n      <IObox value={input} onChange={inputChange}/>\n\n  </div>\n}"]},"metadata":{},"sourceType":"module"}