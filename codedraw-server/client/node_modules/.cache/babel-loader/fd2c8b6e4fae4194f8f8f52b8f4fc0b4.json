{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar UserAgent = require(\"fbjs/lib/UserAgent\");\n\nvar isSoftNewlineEvent = require(\"./isSoftNewlineEvent\");\n\nvar isOSX = UserAgent.isPlatform('Mac OS X');\nvar KeyBindingUtil = {\n  /**\n   * Check whether the ctrlKey modifier is *not* being used in conjunction with\n   * the altKey modifier. If they are combined, the result is an `altGraph`\n   * key modifier, which should not be handled by this set of key bindings.\n   */\n  isCtrlKeyCommand: function isCtrlKeyCommand(e) {\n    return !!e.ctrlKey && !e.altKey;\n  },\n  isOptionKeyCommand: function isOptionKeyCommand(e) {\n    return isOSX && e.altKey;\n  },\n  usesMacOSHeuristics: function usesMacOSHeuristics() {\n    return isOSX;\n  },\n  hasCommandModifier: function hasCommandModifier(e) {\n    return isOSX ? !!e.metaKey && !e.altKey : KeyBindingUtil.isCtrlKeyCommand(e);\n  },\n  isSoftNewlineEvent: isSoftNewlineEvent\n};\nmodule.exports = KeyBindingUtil;","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw/node_modules/draft-js/lib/KeyBindingUtil.js"],"names":["UserAgent","require","isSoftNewlineEvent","isOSX","isPlatform","KeyBindingUtil","isCtrlKeyCommand","e","ctrlKey","altKey","isOptionKeyCommand","usesMacOSHeuristics","hasCommandModifier","metaKey","module","exports"],"mappings":"AAAA;;;;;;;;;;AAUA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,oBAAD,CAAvB;;AAEA,IAAIC,kBAAkB,GAAGD,OAAO,CAAC,sBAAD,CAAhC;;AAEA,IAAIE,KAAK,GAAGH,SAAS,CAACI,UAAV,CAAqB,UAArB,CAAZ;AACA,IAAIC,cAAc,GAAG;AACnB;;;;;AAKAC,EAAAA,gBAAgB,EAAE,SAASA,gBAAT,CAA0BC,CAA1B,EAA6B;AAC7C,WAAO,CAAC,CAACA,CAAC,CAACC,OAAJ,IAAe,CAACD,CAAC,CAACE,MAAzB;AACD,GARkB;AASnBC,EAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4BH,CAA5B,EAA+B;AACjD,WAAOJ,KAAK,IAAII,CAAC,CAACE,MAAlB;AACD,GAXkB;AAYnBE,EAAAA,mBAAmB,EAAE,SAASA,mBAAT,GAA+B;AAClD,WAAOR,KAAP;AACD,GAdkB;AAenBS,EAAAA,kBAAkB,EAAE,SAASA,kBAAT,CAA4BL,CAA5B,EAA+B;AACjD,WAAOJ,KAAK,GAAG,CAAC,CAACI,CAAC,CAACM,OAAJ,IAAe,CAACN,CAAC,CAACE,MAArB,GAA8BJ,cAAc,CAACC,gBAAf,CAAgCC,CAAhC,CAA1C;AACD,GAjBkB;AAkBnBL,EAAAA,kBAAkB,EAAEA;AAlBD,CAArB;AAoBAY,MAAM,CAACC,OAAP,GAAiBV,cAAjB","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n */\n'use strict';\n\nvar UserAgent = require(\"fbjs/lib/UserAgent\");\n\nvar isSoftNewlineEvent = require(\"./isSoftNewlineEvent\");\n\nvar isOSX = UserAgent.isPlatform('Mac OS X');\nvar KeyBindingUtil = {\n  /**\n   * Check whether the ctrlKey modifier is *not* being used in conjunction with\n   * the altKey modifier. If they are combined, the result is an `altGraph`\n   * key modifier, which should not be handled by this set of key bindings.\n   */\n  isCtrlKeyCommand: function isCtrlKeyCommand(e) {\n    return !!e.ctrlKey && !e.altKey;\n  },\n  isOptionKeyCommand: function isOptionKeyCommand(e) {\n    return isOSX && e.altKey;\n  },\n  usesMacOSHeuristics: function usesMacOSHeuristics() {\n    return isOSX;\n  },\n  hasCommandModifier: function hasCommandModifier(e) {\n    return isOSX ? !!e.metaKey && !e.altKey : KeyBindingUtil.isCtrlKeyCommand(e);\n  },\n  isSoftNewlineEvent: isSoftNewlineEvent\n};\nmodule.exports = KeyBindingUtil;"]},"metadata":{},"sourceType":"script"}