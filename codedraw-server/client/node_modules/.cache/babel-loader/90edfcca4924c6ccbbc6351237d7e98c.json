{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.registerHelper(\"wordChars\", \"r\", /[\\w.]/);\n  CodeMirror.defineMode(\"r\", function (config) {\n    function wordObj(words) {\n      var res = {};\n\n      for (var i = 0; i < words.length; ++i) res[words[i]] = true;\n\n      return res;\n    }\n\n    var commonAtoms = [\"NULL\", \"NA\", \"Inf\", \"NaN\", \"NA_integer_\", \"NA_real_\", \"NA_complex_\", \"NA_character_\", \"TRUE\", \"FALSE\"];\n    var commonBuiltins = [\"list\", \"quote\", \"bquote\", \"eval\", \"return\", \"call\", \"parse\", \"deparse\"];\n    var commonKeywords = [\"if\", \"else\", \"repeat\", \"while\", \"function\", \"for\", \"in\", \"next\", \"break\"];\n    var commonBlockKeywords = [\"if\", \"else\", \"repeat\", \"while\", \"function\", \"for\"];\n    CodeMirror.registerHelper(\"hintWords\", \"r\", commonAtoms.concat(commonBuiltins, commonKeywords));\n    var atoms = wordObj(commonAtoms);\n    var builtins = wordObj(commonBuiltins);\n    var keywords = wordObj(commonKeywords);\n    var blockkeywords = wordObj(commonBlockKeywords);\n    var opChars = /[+\\-*\\/^<>=!&|~$:]/;\n    var curPunc;\n\n    function tokenBase(stream, state) {\n      curPunc = null;\n      var ch = stream.next();\n\n      if (ch == \"#\") {\n        stream.skipToEnd();\n        return \"comment\";\n      } else if (ch == \"0\" && stream.eat(\"x\")) {\n        stream.eatWhile(/[\\da-f]/i);\n        return \"number\";\n      } else if (ch == \".\" && stream.eat(/\\d/)) {\n        stream.match(/\\d*(?:e[+\\-]?\\d+)?/);\n        return \"number\";\n      } else if (/\\d/.test(ch)) {\n        stream.match(/\\d*(?:\\.\\d+)?(?:e[+\\-]\\d+)?L?/);\n        return \"number\";\n      } else if (ch == \"'\" || ch == '\"') {\n        state.tokenize = tokenString(ch);\n        return \"string\";\n      } else if (ch == \"`\") {\n        stream.match(/[^`]+`/);\n        return \"variable-3\";\n      } else if (ch == \".\" && stream.match(/.[.\\d]+/)) {\n        return \"keyword\";\n      } else if (/[\\w\\.]/.test(ch) && ch != \"_\") {\n        stream.eatWhile(/[\\w\\.]/);\n        var word = stream.current();\n        if (atoms.propertyIsEnumerable(word)) return \"atom\";\n\n        if (keywords.propertyIsEnumerable(word)) {\n          // Block keywords start new blocks, except 'else if', which only starts\n          // one new block for the 'if', no block for the 'else'.\n          if (blockkeywords.propertyIsEnumerable(word) && !stream.match(/\\s*if(\\s+|$)/, false)) curPunc = \"block\";\n          return \"keyword\";\n        }\n\n        if (builtins.propertyIsEnumerable(word)) return \"builtin\";\n        return \"variable\";\n      } else if (ch == \"%\") {\n        if (stream.skipTo(\"%\")) stream.next();\n        return \"operator variable-2\";\n      } else if (ch == \"<\" && stream.eat(\"-\") || ch == \"<\" && stream.match(\"<-\") || ch == \"-\" && stream.match(/>>?/)) {\n        return \"operator arrow\";\n      } else if (ch == \"=\" && state.ctx.argList) {\n        return \"arg-is\";\n      } else if (opChars.test(ch)) {\n        if (ch == \"$\") return \"operator dollar\";\n        stream.eatWhile(opChars);\n        return \"operator\";\n      } else if (/[\\(\\){}\\[\\];]/.test(ch)) {\n        curPunc = ch;\n        if (ch == \";\") return \"semi\";\n        return null;\n      } else {\n        return null;\n      }\n    }\n\n    function tokenString(quote) {\n      return function (stream, state) {\n        if (stream.eat(\"\\\\\")) {\n          var ch = stream.next();\n          if (ch == \"x\") stream.match(/^[a-f0-9]{2}/i);else if ((ch == \"u\" || ch == \"U\") && stream.eat(\"{\") && stream.skipTo(\"}\")) stream.next();else if (ch == \"u\") stream.match(/^[a-f0-9]{4}/i);else if (ch == \"U\") stream.match(/^[a-f0-9]{8}/i);else if (/[0-7]/.test(ch)) stream.match(/^[0-7]{1,2}/);\n          return \"string-2\";\n        } else {\n          var next;\n\n          while ((next = stream.next()) != null) {\n            if (next == quote) {\n              state.tokenize = tokenBase;\n              break;\n            }\n\n            if (next == \"\\\\\") {\n              stream.backUp(1);\n              break;\n            }\n          }\n\n          return \"string\";\n        }\n      };\n    }\n\n    var ALIGN_YES = 1,\n        ALIGN_NO = 2,\n        BRACELESS = 4;\n\n    function push(state, type, stream) {\n      state.ctx = {\n        type: type,\n        indent: state.indent,\n        flags: 0,\n        column: stream.column(),\n        prev: state.ctx\n      };\n    }\n\n    function setFlag(state, flag) {\n      var ctx = state.ctx;\n      state.ctx = {\n        type: ctx.type,\n        indent: ctx.indent,\n        flags: ctx.flags | flag,\n        column: ctx.column,\n        prev: ctx.prev\n      };\n    }\n\n    function pop(state) {\n      state.indent = state.ctx.indent;\n      state.ctx = state.ctx.prev;\n    }\n\n    return {\n      startState: function () {\n        return {\n          tokenize: tokenBase,\n          ctx: {\n            type: \"top\",\n            indent: -config.indentUnit,\n            flags: ALIGN_NO\n          },\n          indent: 0,\n          afterIdent: false\n        };\n      },\n      token: function (stream, state) {\n        if (stream.sol()) {\n          if ((state.ctx.flags & 3) == 0) state.ctx.flags |= ALIGN_NO;\n          if (state.ctx.flags & BRACELESS) pop(state);\n          state.indent = stream.indentation();\n        }\n\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        if (style != \"comment\" && (state.ctx.flags & ALIGN_NO) == 0) setFlag(state, ALIGN_YES);\n        if ((curPunc == \";\" || curPunc == \"{\" || curPunc == \"}\") && state.ctx.type == \"block\") pop(state);\n        if (curPunc == \"{\") push(state, \"}\", stream);else if (curPunc == \"(\") {\n          push(state, \")\", stream);\n          if (state.afterIdent) state.ctx.argList = true;\n        } else if (curPunc == \"[\") push(state, \"]\", stream);else if (curPunc == \"block\") push(state, \"block\", stream);else if (curPunc == state.ctx.type) pop(state);else if (state.ctx.type == \"block\" && style != \"comment\") setFlag(state, BRACELESS);\n        state.afterIdent = style == \"variable\" || style == \"keyword\";\n        return style;\n      },\n      indent: function (state, textAfter) {\n        if (state.tokenize != tokenBase) return 0;\n        var firstChar = textAfter && textAfter.charAt(0),\n            ctx = state.ctx,\n            closing = firstChar == ctx.type;\n        if (ctx.flags & BRACELESS) ctx = ctx.prev;\n        if (ctx.type == \"block\") return ctx.indent + (firstChar == \"{\" ? 0 : config.indentUnit);else if (ctx.flags & ALIGN_YES) return ctx.column + (closing ? 0 : 1);else return ctx.indent + (closing ? 0 : config.indentUnit);\n      },\n      lineComment: \"#\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-rsrc\", \"r\");\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw/node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/r/r.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","registerHelper","defineMode","config","wordObj","words","res","i","length","commonAtoms","commonBuiltins","commonKeywords","commonBlockKeywords","concat","atoms","builtins","keywords","blockkeywords","opChars","curPunc","tokenBase","stream","state","ch","next","skipToEnd","eat","eatWhile","match","test","tokenize","tokenString","word","current","propertyIsEnumerable","skipTo","ctx","argList","quote","backUp","ALIGN_YES","ALIGN_NO","BRACELESS","push","type","indent","flags","column","prev","setFlag","flag","pop","startState","indentUnit","afterIdent","token","sol","indentation","eatSpace","style","textAfter","firstChar","charAt","closing","lineComment","defineMIME"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.registerHelper(\"wordChars\", \"r\", /[\\w.]/);\n\nCodeMirror.defineMode(\"r\", function(config) {\n  function wordObj(words) {\n    var res = {};\n    for (var i = 0; i < words.length; ++i) res[words[i]] = true;\n    return res;\n  }\n  var commonAtoms = [\"NULL\", \"NA\", \"Inf\", \"NaN\", \"NA_integer_\", \"NA_real_\", \"NA_complex_\", \"NA_character_\", \"TRUE\", \"FALSE\"];\n  var commonBuiltins = [\"list\", \"quote\", \"bquote\", \"eval\", \"return\", \"call\", \"parse\", \"deparse\"];\n  var commonKeywords = [\"if\", \"else\", \"repeat\", \"while\", \"function\", \"for\", \"in\", \"next\", \"break\"];\n  var commonBlockKeywords = [\"if\", \"else\", \"repeat\", \"while\", \"function\", \"for\"];\n\n  CodeMirror.registerHelper(\"hintWords\", \"r\", commonAtoms.concat(commonBuiltins, commonKeywords));\n\n  var atoms = wordObj(commonAtoms);\n  var builtins = wordObj(commonBuiltins);\n  var keywords = wordObj(commonKeywords);\n  var blockkeywords = wordObj(commonBlockKeywords);\n  var opChars = /[+\\-*\\/^<>=!&|~$:]/;\n  var curPunc;\n\n  function tokenBase(stream, state) {\n    curPunc = null;\n    var ch = stream.next();\n    if (ch == \"#\") {\n      stream.skipToEnd();\n      return \"comment\";\n    } else if (ch == \"0\" && stream.eat(\"x\")) {\n      stream.eatWhile(/[\\da-f]/i);\n      return \"number\";\n    } else if (ch == \".\" && stream.eat(/\\d/)) {\n      stream.match(/\\d*(?:e[+\\-]?\\d+)?/);\n      return \"number\";\n    } else if (/\\d/.test(ch)) {\n      stream.match(/\\d*(?:\\.\\d+)?(?:e[+\\-]\\d+)?L?/);\n      return \"number\";\n    } else if (ch == \"'\" || ch == '\"') {\n      state.tokenize = tokenString(ch);\n      return \"string\";\n    } else if (ch == \"`\") {\n      stream.match(/[^`]+`/);\n      return \"variable-3\";\n    } else if (ch == \".\" && stream.match(/.[.\\d]+/)) {\n      return \"keyword\";\n    } else if (/[\\w\\.]/.test(ch) && ch != \"_\") {\n      stream.eatWhile(/[\\w\\.]/);\n      var word = stream.current();\n      if (atoms.propertyIsEnumerable(word)) return \"atom\";\n      if (keywords.propertyIsEnumerable(word)) {\n        // Block keywords start new blocks, except 'else if', which only starts\n        // one new block for the 'if', no block for the 'else'.\n        if (blockkeywords.propertyIsEnumerable(word) &&\n            !stream.match(/\\s*if(\\s+|$)/, false))\n          curPunc = \"block\";\n        return \"keyword\";\n      }\n      if (builtins.propertyIsEnumerable(word)) return \"builtin\";\n      return \"variable\";\n    } else if (ch == \"%\") {\n      if (stream.skipTo(\"%\")) stream.next();\n      return \"operator variable-2\";\n    } else if (\n        (ch == \"<\" && stream.eat(\"-\")) ||\n        (ch == \"<\" && stream.match(\"<-\")) ||\n        (ch == \"-\" && stream.match(/>>?/))\n      ) {\n      return \"operator arrow\";\n    } else if (ch == \"=\" && state.ctx.argList) {\n      return \"arg-is\";\n    } else if (opChars.test(ch)) {\n      if (ch == \"$\") return \"operator dollar\";\n      stream.eatWhile(opChars);\n      return \"operator\";\n    } else if (/[\\(\\){}\\[\\];]/.test(ch)) {\n      curPunc = ch;\n      if (ch == \";\") return \"semi\";\n      return null;\n    } else {\n      return null;\n    }\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      if (stream.eat(\"\\\\\")) {\n        var ch = stream.next();\n        if (ch == \"x\") stream.match(/^[a-f0-9]{2}/i);\n        else if ((ch == \"u\" || ch == \"U\") && stream.eat(\"{\") && stream.skipTo(\"}\")) stream.next();\n        else if (ch == \"u\") stream.match(/^[a-f0-9]{4}/i);\n        else if (ch == \"U\") stream.match(/^[a-f0-9]{8}/i);\n        else if (/[0-7]/.test(ch)) stream.match(/^[0-7]{1,2}/);\n        return \"string-2\";\n      } else {\n        var next;\n        while ((next = stream.next()) != null) {\n          if (next == quote) { state.tokenize = tokenBase; break; }\n          if (next == \"\\\\\") { stream.backUp(1); break; }\n        }\n        return \"string\";\n      }\n    };\n  }\n\n  var ALIGN_YES = 1, ALIGN_NO = 2, BRACELESS = 4\n\n  function push(state, type, stream) {\n    state.ctx = {type: type,\n                 indent: state.indent,\n                 flags: 0,\n                 column: stream.column(),\n                 prev: state.ctx};\n  }\n  function setFlag(state, flag) {\n    var ctx = state.ctx\n    state.ctx = {type: ctx.type,\n                 indent: ctx.indent,\n                 flags: ctx.flags | flag,\n                 column: ctx.column,\n                 prev: ctx.prev}\n  }\n  function pop(state) {\n    state.indent = state.ctx.indent;\n    state.ctx = state.ctx.prev;\n  }\n\n  return {\n    startState: function() {\n      return {tokenize: tokenBase,\n              ctx: {type: \"top\",\n                    indent: -config.indentUnit,\n                    flags: ALIGN_NO},\n              indent: 0,\n              afterIdent: false};\n    },\n\n    token: function(stream, state) {\n      if (stream.sol()) {\n        if ((state.ctx.flags & 3) == 0) state.ctx.flags |= ALIGN_NO\n        if (state.ctx.flags & BRACELESS) pop(state)\n        state.indent = stream.indentation();\n      }\n      if (stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n      if (style != \"comment\" && (state.ctx.flags & ALIGN_NO) == 0) setFlag(state, ALIGN_YES)\n\n      if ((curPunc == \";\" || curPunc == \"{\" || curPunc == \"}\") && state.ctx.type == \"block\") pop(state);\n      if (curPunc == \"{\") push(state, \"}\", stream);\n      else if (curPunc == \"(\") {\n        push(state, \")\", stream);\n        if (state.afterIdent) state.ctx.argList = true;\n      }\n      else if (curPunc == \"[\") push(state, \"]\", stream);\n      else if (curPunc == \"block\") push(state, \"block\", stream);\n      else if (curPunc == state.ctx.type) pop(state);\n      else if (state.ctx.type == \"block\" && style != \"comment\") setFlag(state, BRACELESS)\n      state.afterIdent = style == \"variable\" || style == \"keyword\";\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      if (state.tokenize != tokenBase) return 0;\n      var firstChar = textAfter && textAfter.charAt(0), ctx = state.ctx,\n          closing = firstChar == ctx.type;\n      if (ctx.flags & BRACELESS) ctx = ctx.prev\n      if (ctx.type == \"block\") return ctx.indent + (firstChar == \"{\" ? 0 : config.indentUnit);\n      else if (ctx.flags & ALIGN_YES) return ctx.column + (closing ? 0 : 1);\n      else return ctx.indent + (closing ? 0 : config.indentUnit);\n    },\n\n    lineComment: \"#\"\n  };\n});\n\nCodeMirror.defineMIME(\"text/x-rsrc\", \"r\");\n\n});\n"]},"metadata":{},"sourceType":"script"}