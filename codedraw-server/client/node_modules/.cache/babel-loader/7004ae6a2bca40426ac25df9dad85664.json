{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function (name, states) {\n    CodeMirror.defineMode(name, function (config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function (config, states) {\n    ensureState(states, \"start\");\n    var states_ = {},\n        meta = states.meta || {},\n        hasIndentation = false;\n\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [],\n          orig = states[state];\n\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n\n    var mode = {\n      startState: function () {\n        return {\n          state: \"start\",\n          pending: null,\n          local: null,\n          localState: null,\n          indent: hasIndentation ? [] : null\n        };\n      },\n      copyState: function (state) {\n        var s = {\n          state: state.state,\n          pending: state.pending,\n          local: state.local,\n          localState: null,\n          indent: state.indent && state.indent.slice(0)\n        };\n        if (state.localState) s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack) s.stack = state.stack.slice(0);\n\n        for (var pers = state.persistentStates; pers; pers = pers.next) s.persistentStates = {\n          mode: pers.mode,\n          spec: pers.spec,\n          state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n          next: s.persistentStates\n        };\n\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function (state) {\n        return state.local && {\n          mode: state.local.mode,\n          state: state.localState\n        };\n      },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop)) mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name)) throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val;\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n\n    for (var i = 0; i < val.length; i++) result.push(val[i] && val[i].replace(/\\./g, \" \"));\n\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function (stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState),\n              m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current()))) stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode) enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent) state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent) state.indent.pop();\n          var token = rule.token;\n          if (token && token.apply) token = token(matches);\n\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n\n            for (var j = 2; j < matches.length; j++) if (matches[j]) state.pending.push({\n              text: matches[j],\n              token: rule.token[j - 1]\n            });\n\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next) if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers) state.persistentStates = {\n      mode: mode,\n      spec: spec.spec,\n      state: lState,\n      next: state.persistentStates\n    };\n    state.localState = lState;\n    state.local = {\n      mode: mode,\n      end: spec.end && toRegex(spec.end),\n      endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n      endToken: token && token.join ? token[token.length - 1] : token\n    };\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function (state, textAfter, line) {\n      if (state.local && state.local.mode.indent) return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1) return CodeMirror.Pass;\n      var pos = state.indent.length - 1,\n          rules = states[state.state];\n\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n\n        break;\n      }\n\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw-server/client/node_modules/@uiw/react-codemirror/node_modules/codemirror/addon/mode/simple.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineSimpleMode","name","states","defineMode","config","simpleMode","ensureState","states_","meta","hasIndentation","state","hasOwnProperty","list","orig","i","length","data","push","Rule","indent","dedent","mode","startState","pending","local","localState","copyState","s","slice","stack","pers","persistentStates","next","spec","token","tokenFunction","innerMode","indentFunction","prop","Error","toRegex","val","caret","flags","RegExp","ignoreCase","source","String","asToken","apply","replace","result","regex","stream","pend","shift","pos","text","end","match","tok","endToken","m","endScan","exec","current","start","index","curState","rule","matches","sol","pop","enterLocalMode","indentation","indentUnit","j","backUp","join","cmp","a","b","props","persistent","p","getMode","lState","forceEnd","indexOf","arr","textAfter","line","dontIndentStates","Pass","rules","scan","dedentIfLineStart"],"mappings":"AAAA;AACA;AAEA,CAAC,UAASA,GAAT,EAAc;AACb,MAAI,OAAOC,OAAP,IAAkB,QAAlB,IAA8B,OAAOC,MAAP,IAAiB,QAAnD,EAA6D;AAC3DF,IAAAA,GAAG,CAACG,OAAO,CAAC,sBAAD,CAAR,CAAH,CADF,KAEK,IAAI,OAAOC,MAAP,IAAiB,UAAjB,IAA+BA,MAAM,CAACC,GAA1C,EAA+C;AAClDD,IAAAA,MAAM,CAAC,CAAC,sBAAD,CAAD,EAA2BJ,GAA3B,CAAN,CADG,KAEA;AACHA,IAAAA,GAAG,CAACM,UAAD,CAAH;AACH,CAPD,EAOG,UAASA,UAAT,EAAqB;AACtB;;AAEAA,EAAAA,UAAU,CAACC,gBAAX,GAA8B,UAASC,IAAT,EAAeC,MAAf,EAAuB;AACnDH,IAAAA,UAAU,CAACI,UAAX,CAAsBF,IAAtB,EAA4B,UAASG,MAAT,EAAiB;AAC3C,aAAOL,UAAU,CAACM,UAAX,CAAsBD,MAAtB,EAA8BF,MAA9B,CAAP;AACD,KAFD;AAGD,GAJD;;AAMAH,EAAAA,UAAU,CAACM,UAAX,GAAwB,UAASD,MAAT,EAAiBF,MAAjB,EAAyB;AAC/CI,IAAAA,WAAW,CAACJ,MAAD,EAAS,OAAT,CAAX;AACA,QAAIK,OAAO,GAAG,EAAd;AAAA,QAAkBC,IAAI,GAAGN,MAAM,CAACM,IAAP,IAAe,EAAxC;AAAA,QAA4CC,cAAc,GAAG,KAA7D;;AACA,SAAK,IAAIC,KAAT,IAAkBR,MAAlB,EAA0B,IAAIQ,KAAK,IAAIF,IAAT,IAAiBN,MAAM,CAACS,cAAP,CAAsBD,KAAtB,CAArB,EAAmD;AAC3E,UAAIE,IAAI,GAAGL,OAAO,CAACG,KAAD,CAAP,GAAiB,EAA5B;AAAA,UAAgCG,IAAI,GAAGX,MAAM,CAACQ,KAAD,CAA7C;;AACA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,IAAI,CAACE,MAAzB,EAAiCD,CAAC,EAAlC,EAAsC;AACpC,YAAIE,IAAI,GAAGH,IAAI,CAACC,CAAD,CAAf;AACAF,QAAAA,IAAI,CAACK,IAAL,CAAU,IAAIC,IAAJ,CAASF,IAAT,EAAed,MAAf,CAAV;AACA,YAAIc,IAAI,CAACG,MAAL,IAAeH,IAAI,CAACI,MAAxB,EAAgCX,cAAc,GAAG,IAAjB;AACjC;AACF;;AACD,QAAIY,IAAI,GAAG;AACTC,MAAAA,UAAU,EAAE,YAAW;AACrB,eAAO;AAACZ,UAAAA,KAAK,EAAE,OAAR;AAAiBa,UAAAA,OAAO,EAAE,IAA1B;AACCC,UAAAA,KAAK,EAAE,IADR;AACcC,UAAAA,UAAU,EAAE,IAD1B;AAECN,UAAAA,MAAM,EAAEV,cAAc,GAAG,EAAH,GAAQ;AAF/B,SAAP;AAGD,OALQ;AAMTiB,MAAAA,SAAS,EAAE,UAAShB,KAAT,EAAgB;AACzB,YAAIiB,CAAC,GAAG;AAACjB,UAAAA,KAAK,EAAEA,KAAK,CAACA,KAAd;AAAqBa,UAAAA,OAAO,EAAEb,KAAK,CAACa,OAApC;AACCC,UAAAA,KAAK,EAAEd,KAAK,CAACc,KADd;AACqBC,UAAAA,UAAU,EAAE,IADjC;AAECN,UAAAA,MAAM,EAAET,KAAK,CAACS,MAAN,IAAgBT,KAAK,CAACS,MAAN,CAAaS,KAAb,CAAmB,CAAnB;AAFzB,SAAR;AAGA,YAAIlB,KAAK,CAACe,UAAV,EACEE,CAAC,CAACF,UAAF,GAAe1B,UAAU,CAAC2B,SAAX,CAAqBhB,KAAK,CAACc,KAAN,CAAYH,IAAjC,EAAuCX,KAAK,CAACe,UAA7C,CAAf;AACF,YAAIf,KAAK,CAACmB,KAAV,EACEF,CAAC,CAACE,KAAF,GAAUnB,KAAK,CAACmB,KAAN,CAAYD,KAAZ,CAAkB,CAAlB,CAAV;;AACF,aAAK,IAAIE,IAAI,GAAGpB,KAAK,CAACqB,gBAAtB,EAAwCD,IAAxC,EAA8CA,IAAI,GAAGA,IAAI,CAACE,IAA1D,EACEL,CAAC,CAACI,gBAAF,GAAqB;AAACV,UAAAA,IAAI,EAAES,IAAI,CAACT,IAAZ;AACCY,UAAAA,IAAI,EAAEH,IAAI,CAACG,IADZ;AAECvB,UAAAA,KAAK,EAAEoB,IAAI,CAACpB,KAAL,IAAcA,KAAK,CAACe,UAApB,GAAiCE,CAAC,CAACF,UAAnC,GAAgD1B,UAAU,CAAC2B,SAAX,CAAqBI,IAAI,CAACT,IAA1B,EAAgCS,IAAI,CAACpB,KAArC,CAFxD;AAGCsB,UAAAA,IAAI,EAAEL,CAAC,CAACI;AAHT,SAArB;;AAIF,eAAOJ,CAAP;AACD,OApBQ;AAqBTO,MAAAA,KAAK,EAAEC,aAAa,CAAC5B,OAAD,EAAUH,MAAV,CArBX;AAsBTgC,MAAAA,SAAS,EAAE,UAAS1B,KAAT,EAAgB;AAAE,eAAOA,KAAK,CAACc,KAAN,IAAe;AAACH,UAAAA,IAAI,EAAEX,KAAK,CAACc,KAAN,CAAYH,IAAnB;AAAyBX,UAAAA,KAAK,EAAEA,KAAK,CAACe;AAAtC,SAAtB;AAA0E,OAtB9F;AAuBTN,MAAAA,MAAM,EAAEkB,cAAc,CAAC9B,OAAD,EAAUC,IAAV;AAvBb,KAAX;AAyBA,QAAIA,IAAJ,EAAU,KAAK,IAAI8B,IAAT,IAAiB9B,IAAjB,EAAuB,IAAIA,IAAI,CAACG,cAAL,CAAoB2B,IAApB,CAAJ,EAC/BjB,IAAI,CAACiB,IAAD,CAAJ,GAAa9B,IAAI,CAAC8B,IAAD,CAAjB;AACF,WAAOjB,IAAP;AACD,GAvCD;;AAyCA,WAASf,WAAT,CAAqBJ,MAArB,EAA6BD,IAA7B,EAAmC;AACjC,QAAI,CAACC,MAAM,CAACS,cAAP,CAAsBV,IAAtB,CAAL,EACE,MAAM,IAAIsC,KAAJ,CAAU,qBAAqBtC,IAArB,GAA4B,iBAAtC,CAAN;AACH;;AAED,WAASuC,OAAT,CAAiBC,GAAjB,EAAsBC,KAAtB,EAA6B;AAC3B,QAAI,CAACD,GAAL,EAAU,OAAO,MAAP;AACV,QAAIE,KAAK,GAAG,EAAZ;;AACA,QAAIF,GAAG,YAAYG,MAAnB,EAA2B;AACzB,UAAIH,GAAG,CAACI,UAAR,EAAoBF,KAAK,GAAG,GAAR;AACpBF,MAAAA,GAAG,GAAGA,GAAG,CAACK,MAAV;AACD,KAHD,MAGO;AACLL,MAAAA,GAAG,GAAGM,MAAM,CAACN,GAAD,CAAZ;AACD;;AACD,WAAO,IAAIG,MAAJ,CAAW,CAACF,KAAK,KAAK,KAAV,GAAkB,EAAlB,GAAuB,GAAxB,IAA+B,KAA/B,GAAuCD,GAAvC,GAA6C,GAAxD,EAA6DE,KAA7D,CAAP;AACD;;AAED,WAASK,OAAT,CAAiBP,GAAjB,EAAsB;AACpB,QAAI,CAACA,GAAL,EAAU,OAAO,IAAP;AACV,QAAIA,GAAG,CAACQ,KAAR,EAAe,OAAOR,GAAP;AACf,QAAI,OAAOA,GAAP,IAAc,QAAlB,EAA4B,OAAOA,GAAG,CAACS,OAAJ,CAAY,KAAZ,EAAmB,GAAnB,CAAP;AAC5B,QAAIC,MAAM,GAAG,EAAb;;AACA,SAAK,IAAIrC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2B,GAAG,CAAC1B,MAAxB,EAAgCD,CAAC,EAAjC,EACEqC,MAAM,CAAClC,IAAP,CAAYwB,GAAG,CAAC3B,CAAD,CAAH,IAAU2B,GAAG,CAAC3B,CAAD,CAAH,CAAOoC,OAAP,CAAe,KAAf,EAAsB,GAAtB,CAAtB;;AACF,WAAOC,MAAP;AACD;;AAED,WAASjC,IAAT,CAAcF,IAAd,EAAoBd,MAApB,EAA4B;AAC1B,QAAIc,IAAI,CAACgB,IAAL,IAAahB,IAAI,CAACC,IAAtB,EAA4BX,WAAW,CAACJ,MAAD,EAASc,IAAI,CAACgB,IAAL,IAAahB,IAAI,CAACC,IAA3B,CAAX;AAC5B,SAAKmC,KAAL,GAAaZ,OAAO,CAACxB,IAAI,CAACoC,KAAN,CAApB;AACA,SAAKlB,KAAL,GAAac,OAAO,CAAChC,IAAI,CAACkB,KAAN,CAApB;AACA,SAAKlB,IAAL,GAAYA,IAAZ;AACD;;AAED,WAASmB,aAAT,CAAuBjC,MAAvB,EAA+BE,MAA/B,EAAuC;AACrC,WAAO,UAASiD,MAAT,EAAiB3C,KAAjB,EAAwB;AAC7B,UAAIA,KAAK,CAACa,OAAV,EAAmB;AACjB,YAAI+B,IAAI,GAAG5C,KAAK,CAACa,OAAN,CAAcgC,KAAd,EAAX;AACA,YAAI7C,KAAK,CAACa,OAAN,CAAcR,MAAd,IAAwB,CAA5B,EAA+BL,KAAK,CAACa,OAAN,GAAgB,IAAhB;AAC/B8B,QAAAA,MAAM,CAACG,GAAP,IAAcF,IAAI,CAACG,IAAL,CAAU1C,MAAxB;AACA,eAAOuC,IAAI,CAACpB,KAAZ;AACD;;AAED,UAAIxB,KAAK,CAACc,KAAV,EAAiB;AACf,YAAId,KAAK,CAACc,KAAN,CAAYkC,GAAZ,IAAmBL,MAAM,CAACM,KAAP,CAAajD,KAAK,CAACc,KAAN,CAAYkC,GAAzB,CAAvB,EAAsD;AACpD,cAAIE,GAAG,GAAGlD,KAAK,CAACc,KAAN,CAAYqC,QAAZ,IAAwB,IAAlC;AACAnD,UAAAA,KAAK,CAACc,KAAN,GAAcd,KAAK,CAACe,UAAN,GAAmB,IAAjC;AACA,iBAAOmC,GAAP;AACD,SAJD,MAIO;AACL,cAAIA,GAAG,GAAGlD,KAAK,CAACc,KAAN,CAAYH,IAAZ,CAAiBa,KAAjB,CAAuBmB,MAAvB,EAA+B3C,KAAK,CAACe,UAArC,CAAV;AAAA,cAA4DqC,CAA5D;AACA,cAAIpD,KAAK,CAACc,KAAN,CAAYuC,OAAZ,KAAwBD,CAAC,GAAGpD,KAAK,CAACc,KAAN,CAAYuC,OAAZ,CAAoBC,IAApB,CAAyBX,MAAM,CAACY,OAAP,EAAzB,CAA5B,CAAJ,EACEZ,MAAM,CAACG,GAAP,GAAaH,MAAM,CAACa,KAAP,GAAeJ,CAAC,CAACK,KAA9B;AACF,iBAAOP,GAAP;AACD;AACF;;AAED,UAAIQ,QAAQ,GAAGlE,MAAM,CAACQ,KAAK,CAACA,KAAP,CAArB;;AACA,WAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGsD,QAAQ,CAACrD,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACxC,YAAIuD,IAAI,GAAGD,QAAQ,CAACtD,CAAD,CAAnB;AACA,YAAIwD,OAAO,GAAG,CAAC,CAACD,IAAI,CAACrD,IAAL,CAAUuD,GAAX,IAAkBlB,MAAM,CAACkB,GAAP,EAAnB,KAAoClB,MAAM,CAACM,KAAP,CAAaU,IAAI,CAACjB,KAAlB,CAAlD;;AACA,YAAIkB,OAAJ,EAAa;AACX,cAAID,IAAI,CAACrD,IAAL,CAAUgB,IAAd,EAAoB;AAClBtB,YAAAA,KAAK,CAACA,KAAN,GAAc2D,IAAI,CAACrD,IAAL,CAAUgB,IAAxB;AACD,WAFD,MAEO,IAAIqC,IAAI,CAACrD,IAAL,CAAUC,IAAd,EAAoB;AACzB,aAACP,KAAK,CAACmB,KAAN,KAAgBnB,KAAK,CAACmB,KAAN,GAAc,EAA9B,CAAD,EAAoCZ,IAApC,CAAyCP,KAAK,CAACA,KAA/C;AACAA,YAAAA,KAAK,CAACA,KAAN,GAAc2D,IAAI,CAACrD,IAAL,CAAUC,IAAxB;AACD,WAHM,MAGA,IAAIoD,IAAI,CAACrD,IAAL,CAAUwD,GAAV,IAAiB9D,KAAK,CAACmB,KAAvB,IAAgCnB,KAAK,CAACmB,KAAN,CAAYd,MAAhD,EAAwD;AAC7DL,YAAAA,KAAK,CAACA,KAAN,GAAcA,KAAK,CAACmB,KAAN,CAAY2C,GAAZ,EAAd;AACD;;AAED,cAAIH,IAAI,CAACrD,IAAL,CAAUK,IAAd,EACEoD,cAAc,CAACrE,MAAD,EAASM,KAAT,EAAgB2D,IAAI,CAACrD,IAAL,CAAUK,IAA1B,EAAgCgD,IAAI,CAACnC,KAArC,CAAd;AACF,cAAImC,IAAI,CAACrD,IAAL,CAAUG,MAAd,EACET,KAAK,CAACS,MAAN,CAAaF,IAAb,CAAkBoC,MAAM,CAACqB,WAAP,KAAuBtE,MAAM,CAACuE,UAAhD;AACF,cAAIN,IAAI,CAACrD,IAAL,CAAUI,MAAd,EACEV,KAAK,CAACS,MAAN,CAAaqD,GAAb;AACF,cAAItC,KAAK,GAAGmC,IAAI,CAACnC,KAAjB;AACA,cAAIA,KAAK,IAAIA,KAAK,CAACe,KAAnB,EAA0Bf,KAAK,GAAGA,KAAK,CAACoC,OAAD,CAAb;;AAC1B,cAAIA,OAAO,CAACvD,MAAR,GAAiB,CAAjB,IAAsBsD,IAAI,CAACnC,KAA3B,IAAoC,OAAOmC,IAAI,CAACnC,KAAZ,IAAqB,QAA7D,EAAuE;AACrExB,YAAAA,KAAK,CAACa,OAAN,GAAgB,EAAhB;;AACA,iBAAK,IAAIqD,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,OAAO,CAACvD,MAA5B,EAAoC6D,CAAC,EAArC,EACE,IAAIN,OAAO,CAACM,CAAD,CAAX,EACElE,KAAK,CAACa,OAAN,CAAcN,IAAd,CAAmB;AAACwC,cAAAA,IAAI,EAAEa,OAAO,CAACM,CAAD,CAAd;AAAmB1C,cAAAA,KAAK,EAAEmC,IAAI,CAACnC,KAAL,CAAW0C,CAAC,GAAG,CAAf;AAA1B,aAAnB;;AACJvB,YAAAA,MAAM,CAACwB,MAAP,CAAcP,OAAO,CAAC,CAAD,CAAP,CAAWvD,MAAX,IAAqBuD,OAAO,CAAC,CAAD,CAAP,GAAaA,OAAO,CAAC,CAAD,CAAP,CAAWvD,MAAxB,GAAiC,CAAtD,CAAd;AACA,mBAAOmB,KAAK,CAAC,CAAD,CAAZ;AACD,WAPD,MAOO,IAAIA,KAAK,IAAIA,KAAK,CAAC4C,IAAnB,EAAyB;AAC9B,mBAAO5C,KAAK,CAAC,CAAD,CAAZ;AACD,WAFM,MAEA;AACL,mBAAOA,KAAP;AACD;AACF;AACF;;AACDmB,MAAAA,MAAM,CAACrB,IAAP;AACA,aAAO,IAAP;AACD,KA3DD;AA4DD;;AAED,WAAS+C,GAAT,CAAaC,CAAb,EAAgBC,CAAhB,EAAmB;AACjB,QAAID,CAAC,KAAKC,CAAV,EAAa,OAAO,IAAP;AACb,QAAI,CAACD,CAAD,IAAM,OAAOA,CAAP,IAAY,QAAlB,IAA8B,CAACC,CAA/B,IAAoC,OAAOA,CAAP,IAAY,QAApD,EAA8D,OAAO,KAAP;AAC9D,QAAIC,KAAK,GAAG,CAAZ;;AACA,SAAK,IAAI5C,IAAT,IAAiB0C,CAAjB,EAAoB,IAAIA,CAAC,CAACrE,cAAF,CAAiB2B,IAAjB,CAAJ,EAA4B;AAC9C,UAAI,CAAC2C,CAAC,CAACtE,cAAF,CAAiB2B,IAAjB,CAAD,IAA2B,CAACyC,GAAG,CAACC,CAAC,CAAC1C,IAAD,CAAF,EAAU2C,CAAC,CAAC3C,IAAD,CAAX,CAAnC,EAAuD,OAAO,KAAP;AACvD4C,MAAAA,KAAK;AACN;;AACD,SAAK,IAAI5C,IAAT,IAAiB2C,CAAjB,EAAoB,IAAIA,CAAC,CAACtE,cAAF,CAAiB2B,IAAjB,CAAJ,EAA4B4C,KAAK;;AACrD,WAAOA,KAAK,IAAI,CAAhB;AACD;;AAED,WAAST,cAAT,CAAwBrE,MAAxB,EAAgCM,KAAhC,EAAuCuB,IAAvC,EAA6CC,KAA7C,EAAoD;AAClD,QAAIJ,IAAJ;AACA,QAAIG,IAAI,CAACkD,UAAT,EAAqB,KAAK,IAAIC,CAAC,GAAG1E,KAAK,CAACqB,gBAAnB,EAAqCqD,CAAC,IAAI,CAACtD,IAA3C,EAAiDsD,CAAC,GAAGA,CAAC,CAACpD,IAAvD,EACnB,IAAIC,IAAI,CAACA,IAAL,GAAY8C,GAAG,CAAC9C,IAAI,CAACA,IAAN,EAAYmD,CAAC,CAACnD,IAAd,CAAf,GAAqCA,IAAI,CAACZ,IAAL,IAAa+D,CAAC,CAAC/D,IAAxD,EAA8DS,IAAI,GAAGsD,CAAP;AAChE,QAAI/D,IAAI,GAAGS,IAAI,GAAGA,IAAI,CAACT,IAAR,GAAeY,IAAI,CAACZ,IAAL,IAAatB,UAAU,CAACsF,OAAX,CAAmBjF,MAAnB,EAA2B6B,IAAI,CAACA,IAAhC,CAA3C;AACA,QAAIqD,MAAM,GAAGxD,IAAI,GAAGA,IAAI,CAACpB,KAAR,GAAgBX,UAAU,CAACuB,UAAX,CAAsBD,IAAtB,CAAjC;AACA,QAAIY,IAAI,CAACkD,UAAL,IAAmB,CAACrD,IAAxB,EACEpB,KAAK,CAACqB,gBAAN,GAAyB;AAACV,MAAAA,IAAI,EAAEA,IAAP;AAAaY,MAAAA,IAAI,EAAEA,IAAI,CAACA,IAAxB;AAA8BvB,MAAAA,KAAK,EAAE4E,MAArC;AAA6CtD,MAAAA,IAAI,EAAEtB,KAAK,CAACqB;AAAzD,KAAzB;AAEFrB,IAAAA,KAAK,CAACe,UAAN,GAAmB6D,MAAnB;AACA5E,IAAAA,KAAK,CAACc,KAAN,GAAc;AAACH,MAAAA,IAAI,EAAEA,IAAP;AACCqC,MAAAA,GAAG,EAAEzB,IAAI,CAACyB,GAAL,IAAYlB,OAAO,CAACP,IAAI,CAACyB,GAAN,CADzB;AAECK,MAAAA,OAAO,EAAE9B,IAAI,CAACyB,GAAL,IAAYzB,IAAI,CAACsD,QAAL,KAAkB,KAA9B,IAAuC/C,OAAO,CAACP,IAAI,CAACyB,GAAN,EAAW,KAAX,CAFxD;AAGCG,MAAAA,QAAQ,EAAE3B,KAAK,IAAIA,KAAK,CAAC4C,IAAf,GAAsB5C,KAAK,CAACA,KAAK,CAACnB,MAAN,GAAe,CAAhB,CAA3B,GAAgDmB;AAH3D,KAAd;AAID;;AAED,WAASsD,OAAT,CAAiB/C,GAAjB,EAAsBgD,GAAtB,EAA2B;AACzB,SAAK,IAAI3E,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG2E,GAAG,CAAC1E,MAAxB,EAAgCD,CAAC,EAAjC,EAAqC,IAAI2E,GAAG,CAAC3E,CAAD,CAAH,KAAW2B,GAAf,EAAoB,OAAO,IAAP;AAC1D;;AAED,WAASJ,cAAT,CAAwBnC,MAAxB,EAAgCM,IAAhC,EAAsC;AACpC,WAAO,UAASE,KAAT,EAAgBgF,SAAhB,EAA2BC,IAA3B,EAAiC;AACtC,UAAIjF,KAAK,CAACc,KAAN,IAAed,KAAK,CAACc,KAAN,CAAYH,IAAZ,CAAiBF,MAApC,EACE,OAAOT,KAAK,CAACc,KAAN,CAAYH,IAAZ,CAAiBF,MAAjB,CAAwBT,KAAK,CAACe,UAA9B,EAA0CiE,SAA1C,EAAqDC,IAArD,CAAP;AACF,UAAIjF,KAAK,CAACS,MAAN,IAAgB,IAAhB,IAAwBT,KAAK,CAACc,KAA9B,IAAuChB,IAAI,CAACoF,gBAAL,IAAyBJ,OAAO,CAAC9E,KAAK,CAACA,KAAP,EAAcF,IAAI,CAACoF,gBAAnB,CAAP,GAA8C,CAAC,CAAnH,EACE,OAAO7F,UAAU,CAAC8F,IAAlB;AAEF,UAAIrC,GAAG,GAAG9C,KAAK,CAACS,MAAN,CAAaJ,MAAb,GAAsB,CAAhC;AAAA,UAAmC+E,KAAK,GAAG5F,MAAM,CAACQ,KAAK,CAACA,KAAP,CAAjD;;AACAqF,MAAAA,IAAI,EAAE,SAAS;AACb,aAAK,IAAIjF,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGgF,KAAK,CAAC/E,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AACrC,cAAIuD,IAAI,GAAGyB,KAAK,CAAChF,CAAD,CAAhB;;AACA,cAAIuD,IAAI,CAACrD,IAAL,CAAUI,MAAV,IAAoBiD,IAAI,CAACrD,IAAL,CAAUgF,iBAAV,KAAgC,KAAxD,EAA+D;AAC7D,gBAAIlC,CAAC,GAAGO,IAAI,CAACjB,KAAL,CAAWY,IAAX,CAAgB0B,SAAhB,CAAR;;AACA,gBAAI5B,CAAC,IAAIA,CAAC,CAAC,CAAD,CAAV,EAAe;AACbN,cAAAA,GAAG;AACH,kBAAIa,IAAI,CAACrC,IAAL,IAAaqC,IAAI,CAACpD,IAAtB,EAA4B6E,KAAK,GAAG5F,MAAM,CAACmE,IAAI,CAACrC,IAAL,IAAaqC,IAAI,CAACpD,IAAnB,CAAd;AAC5ByE,cAAAA,SAAS,GAAGA,SAAS,CAAC9D,KAAV,CAAgBkC,CAAC,CAAC,CAAD,CAAD,CAAK/C,MAArB,CAAZ;AACA,uBAASgF,IAAT;AACD;AACF;AACF;;AACD;AACD;;AACD,aAAOvC,GAAG,GAAG,CAAN,GAAU,CAAV,GAAc9C,KAAK,CAACS,MAAN,CAAaqC,GAAb,CAArB;AACD,KAvBD;AAwBD;AACF,CApND","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineSimpleMode = function(name, states) {\n    CodeMirror.defineMode(name, function(config) {\n      return CodeMirror.simpleMode(config, states);\n    });\n  };\n\n  CodeMirror.simpleMode = function(config, states) {\n    ensureState(states, \"start\");\n    var states_ = {}, meta = states.meta || {}, hasIndentation = false;\n    for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n      var list = states_[state] = [], orig = states[state];\n      for (var i = 0; i < orig.length; i++) {\n        var data = orig[i];\n        list.push(new Rule(data, states));\n        if (data.indent || data.dedent) hasIndentation = true;\n      }\n    }\n    var mode = {\n      startState: function() {\n        return {state: \"start\", pending: null,\n                local: null, localState: null,\n                indent: hasIndentation ? [] : null};\n      },\n      copyState: function(state) {\n        var s = {state: state.state, pending: state.pending,\n                 local: state.local, localState: null,\n                 indent: state.indent && state.indent.slice(0)};\n        if (state.localState)\n          s.localState = CodeMirror.copyState(state.local.mode, state.localState);\n        if (state.stack)\n          s.stack = state.stack.slice(0);\n        for (var pers = state.persistentStates; pers; pers = pers.next)\n          s.persistentStates = {mode: pers.mode,\n                                spec: pers.spec,\n                                state: pers.state == state.localState ? s.localState : CodeMirror.copyState(pers.mode, pers.state),\n                                next: s.persistentStates};\n        return s;\n      },\n      token: tokenFunction(states_, config),\n      innerMode: function(state) { return state.local && {mode: state.local.mode, state: state.localState}; },\n      indent: indentFunction(states_, meta)\n    };\n    if (meta) for (var prop in meta) if (meta.hasOwnProperty(prop))\n      mode[prop] = meta[prop];\n    return mode;\n  };\n\n  function ensureState(states, name) {\n    if (!states.hasOwnProperty(name))\n      throw new Error(\"Undefined state \" + name + \" in simple mode\");\n  }\n\n  function toRegex(val, caret) {\n    if (!val) return /(?:)/;\n    var flags = \"\";\n    if (val instanceof RegExp) {\n      if (val.ignoreCase) flags = \"i\";\n      val = val.source;\n    } else {\n      val = String(val);\n    }\n    return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n  }\n\n  function asToken(val) {\n    if (!val) return null;\n    if (val.apply) return val\n    if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n    var result = [];\n    for (var i = 0; i < val.length; i++)\n      result.push(val[i] && val[i].replace(/\\./g, \" \"));\n    return result;\n  }\n\n  function Rule(data, states) {\n    if (data.next || data.push) ensureState(states, data.next || data.push);\n    this.regex = toRegex(data.regex);\n    this.token = asToken(data.token);\n    this.data = data;\n  }\n\n  function tokenFunction(states, config) {\n    return function(stream, state) {\n      if (state.pending) {\n        var pend = state.pending.shift();\n        if (state.pending.length == 0) state.pending = null;\n        stream.pos += pend.text.length;\n        return pend.token;\n      }\n\n      if (state.local) {\n        if (state.local.end && stream.match(state.local.end)) {\n          var tok = state.local.endToken || null;\n          state.local = state.localState = null;\n          return tok;\n        } else {\n          var tok = state.local.mode.token(stream, state.localState), m;\n          if (state.local.endScan && (m = state.local.endScan.exec(stream.current())))\n            stream.pos = stream.start + m.index;\n          return tok;\n        }\n      }\n\n      var curState = states[state.state];\n      for (var i = 0; i < curState.length; i++) {\n        var rule = curState[i];\n        var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n        if (matches) {\n          if (rule.data.next) {\n            state.state = rule.data.next;\n          } else if (rule.data.push) {\n            (state.stack || (state.stack = [])).push(state.state);\n            state.state = rule.data.push;\n          } else if (rule.data.pop && state.stack && state.stack.length) {\n            state.state = state.stack.pop();\n          }\n\n          if (rule.data.mode)\n            enterLocalMode(config, state, rule.data.mode, rule.token);\n          if (rule.data.indent)\n            state.indent.push(stream.indentation() + config.indentUnit);\n          if (rule.data.dedent)\n            state.indent.pop();\n          var token = rule.token\n          if (token && token.apply) token = token(matches)\n          if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n            state.pending = [];\n            for (var j = 2; j < matches.length; j++)\n              if (matches[j])\n                state.pending.push({text: matches[j], token: rule.token[j - 1]});\n            stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n            return token[0];\n          } else if (token && token.join) {\n            return token[0];\n          } else {\n            return token;\n          }\n        }\n      }\n      stream.next();\n      return null;\n    };\n  }\n\n  function cmp(a, b) {\n    if (a === b) return true;\n    if (!a || typeof a != \"object\" || !b || typeof b != \"object\") return false;\n    var props = 0;\n    for (var prop in a) if (a.hasOwnProperty(prop)) {\n      if (!b.hasOwnProperty(prop) || !cmp(a[prop], b[prop])) return false;\n      props++;\n    }\n    for (var prop in b) if (b.hasOwnProperty(prop)) props--;\n    return props == 0;\n  }\n\n  function enterLocalMode(config, state, spec, token) {\n    var pers;\n    if (spec.persistent) for (var p = state.persistentStates; p && !pers; p = p.next)\n      if (spec.spec ? cmp(spec.spec, p.spec) : spec.mode == p.mode) pers = p;\n    var mode = pers ? pers.mode : spec.mode || CodeMirror.getMode(config, spec.spec);\n    var lState = pers ? pers.state : CodeMirror.startState(mode);\n    if (spec.persistent && !pers)\n      state.persistentStates = {mode: mode, spec: spec.spec, state: lState, next: state.persistentStates};\n\n    state.localState = lState;\n    state.local = {mode: mode,\n                   end: spec.end && toRegex(spec.end),\n                   endScan: spec.end && spec.forceEnd !== false && toRegex(spec.end, false),\n                   endToken: token && token.join ? token[token.length - 1] : token};\n  }\n\n  function indexOf(val, arr) {\n    for (var i = 0; i < arr.length; i++) if (arr[i] === val) return true;\n  }\n\n  function indentFunction(states, meta) {\n    return function(state, textAfter, line) {\n      if (state.local && state.local.mode.indent)\n        return state.local.mode.indent(state.localState, textAfter, line);\n      if (state.indent == null || state.local || meta.dontIndentStates && indexOf(state.state, meta.dontIndentStates) > -1)\n        return CodeMirror.Pass;\n\n      var pos = state.indent.length - 1, rules = states[state.state];\n      scan: for (;;) {\n        for (var i = 0; i < rules.length; i++) {\n          var rule = rules[i];\n          if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n            var m = rule.regex.exec(textAfter);\n            if (m && m[0]) {\n              pos--;\n              if (rule.next || rule.push) rules = states[rule.next || rule.push];\n              textAfter = textAfter.slice(m[0].length);\n              continue scan;\n            }\n          }\n        }\n        break;\n      }\n      return pos < 0 ? 0 : state.indent[pos];\n    };\n  }\n});\n"]},"metadata":{},"sourceType":"script"}