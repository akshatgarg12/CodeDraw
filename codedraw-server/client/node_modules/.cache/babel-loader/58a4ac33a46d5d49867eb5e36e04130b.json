{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.runMode = function (string, modespec, callback, options) {\n    var mode = CodeMirror.getMode(CodeMirror.defaults, modespec);\n    var tabSize = options && options.tabSize || CodeMirror.defaults.tabSize; // Create a tokenizing callback function if passed-in callback is a DOM element.\n\n    if (callback.appendChild) {\n      var ie = /MSIE \\d/.test(navigator.userAgent);\n      var ie_lt9 = ie && (document.documentMode == null || document.documentMode < 9);\n      var node = callback,\n          col = 0;\n      node.innerHTML = \"\";\n\n      callback = function (text, style) {\n        if (text == \"\\n\") {\n          // Emitting LF or CRLF on IE8 or earlier results in an incorrect display.\n          // Emitting a carriage return makes everything ok.\n          node.appendChild(document.createTextNode(ie_lt9 ? '\\r' : text));\n          col = 0;\n          return;\n        }\n\n        var content = \"\"; // replace tabs\n\n        for (var pos = 0;;) {\n          var idx = text.indexOf(\"\\t\", pos);\n\n          if (idx == -1) {\n            content += text.slice(pos);\n            col += text.length - pos;\n            break;\n          } else {\n            col += idx - pos;\n            content += text.slice(pos, idx);\n            var size = tabSize - col % tabSize;\n            col += size;\n\n            for (var i = 0; i < size; ++i) content += \" \";\n\n            pos = idx + 1;\n          }\n        } // Create a node with token style and append it to the callback DOM element.\n\n\n        if (style) {\n          var sp = node.appendChild(document.createElement(\"span\"));\n          sp.className = \"cm-\" + style.replace(/ +/g, \" cm-\");\n          sp.appendChild(document.createTextNode(content));\n        } else {\n          node.appendChild(document.createTextNode(content));\n        }\n      };\n    }\n\n    var lines = CodeMirror.splitLines(string),\n        state = options && options.state || CodeMirror.startState(mode);\n\n    for (var i = 0, e = lines.length; i < e; ++i) {\n      if (i) callback(\"\\n\");\n      var stream = new CodeMirror.StringStream(lines[i], null, {\n        lookAhead: function (n) {\n          return lines[i + n];\n        },\n        baseToken: function () {}\n      });\n      if (!stream.string && mode.blankLine) mode.blankLine(state);\n\n      while (!stream.eol()) {\n        var style = mode.token(stream, state);\n        callback(stream.current(), style, i, stream.start, state);\n        stream.start = stream.pos;\n      }\n    }\n  };\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw/node_modules/codemirror/addon/runmode/runmode.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","runMode","string","modespec","callback","options","mode","getMode","defaults","tabSize","appendChild","ie","test","navigator","userAgent","ie_lt9","document","documentMode","node","col","innerHTML","text","style","createTextNode","content","pos","idx","indexOf","slice","length","size","i","sp","createElement","className","replace","lines","splitLines","state","startState","e","stream","StringStream","lookAhead","n","baseToken","blankLine","eol","token","current","start"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.runMode = function(string, modespec, callback, options) {\n  var mode = CodeMirror.getMode(CodeMirror.defaults, modespec);\n  var tabSize = (options && options.tabSize) || CodeMirror.defaults.tabSize;\n\n  // Create a tokenizing callback function if passed-in callback is a DOM element.\n  if (callback.appendChild) {\n    var ie = /MSIE \\d/.test(navigator.userAgent);\n    var ie_lt9 = ie && (document.documentMode == null || document.documentMode < 9);\n    var node = callback, col = 0;\n    node.innerHTML = \"\";\n    callback = function(text, style) {\n      if (text == \"\\n\") {\n        // Emitting LF or CRLF on IE8 or earlier results in an incorrect display.\n        // Emitting a carriage return makes everything ok.\n        node.appendChild(document.createTextNode(ie_lt9 ? '\\r' : text));\n        col = 0;\n        return;\n      }\n      var content = \"\";\n      // replace tabs\n      for (var pos = 0;;) {\n        var idx = text.indexOf(\"\\t\", pos);\n        if (idx == -1) {\n          content += text.slice(pos);\n          col += text.length - pos;\n          break;\n        } else {\n          col += idx - pos;\n          content += text.slice(pos, idx);\n          var size = tabSize - col % tabSize;\n          col += size;\n          for (var i = 0; i < size; ++i) content += \" \";\n          pos = idx + 1;\n        }\n      }\n      // Create a node with token style and append it to the callback DOM element.\n      if (style) {\n        var sp = node.appendChild(document.createElement(\"span\"));\n        sp.className = \"cm-\" + style.replace(/ +/g, \" cm-\");\n        sp.appendChild(document.createTextNode(content));\n      } else {\n        node.appendChild(document.createTextNode(content));\n      }\n    };\n  }\n\n  var lines = CodeMirror.splitLines(string), state = (options && options.state) || CodeMirror.startState(mode);\n  for (var i = 0, e = lines.length; i < e; ++i) {\n    if (i) callback(\"\\n\");\n    var stream = new CodeMirror.StringStream(lines[i], null, {\n      lookAhead: function(n) { return lines[i + n] },\n      baseToken: function() {}\n    });\n    if (!stream.string && mode.blankLine) mode.blankLine(state);\n    while (!stream.eol()) {\n      var style = mode.token(stream, state);\n      callback(stream.current(), style, i, stream.start, state);\n      stream.start = stream.pos;\n    }\n  }\n};\n\n});\n"]},"metadata":{},"sourceType":"script"}