{"ast":null,"code":"/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n *\n * This file is a fork of DraftEditorContents.react.js for tree nodes\n *\n * This is unstable and not part of the public API and should not be used by\n * production systems. This file may be update/removed without notice.\n */\n'use strict';\n\nvar _assign = require(\"object-assign\");\n\nfunction _extends() {\n  _extends = _assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nvar DraftEditorBlockNode = require(\"./DraftEditorBlockNode.react\");\n\nvar DraftOffsetKey = require(\"./DraftOffsetKey\");\n\nvar React = require(\"react\");\n\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\n/**\n * `DraftEditorContents` is the container component for all block components\n * rendered for a `DraftEditor`. It is optimized to aggressively avoid\n * re-rendering blocks whenever possible.\n *\n * This component is separate from `DraftEditor` because certain props\n * (for instance, ARIA props) must be allowed to update without affecting\n * the contents of the editor.\n */\n\n\nvar DraftEditorContentsExperimental = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(DraftEditorContentsExperimental, _React$Component);\n\n  function DraftEditorContentsExperimental() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = DraftEditorContentsExperimental.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var prevEditorState = this.props.editorState;\n    var nextEditorState = nextProps.editorState;\n    var prevDirectionMap = prevEditorState.getDirectionMap();\n    var nextDirectionMap = nextEditorState.getDirectionMap(); // Text direction has changed for one or more blocks. We must re-render.\n\n    if (prevDirectionMap !== nextDirectionMap) {\n      return true;\n    }\n\n    var didHaveFocus = prevEditorState.getSelection().getHasFocus();\n    var nowHasFocus = nextEditorState.getSelection().getHasFocus();\n\n    if (didHaveFocus !== nowHasFocus) {\n      return true;\n    }\n\n    var nextNativeContent = nextEditorState.getNativelyRenderedContent();\n    var wasComposing = prevEditorState.isInCompositionMode();\n    var nowComposing = nextEditorState.isInCompositionMode(); // If the state is unchanged or we're currently rendering a natively\n    // rendered state, there's nothing new to be done.\n\n    if (prevEditorState === nextEditorState || nextNativeContent !== null && nextEditorState.getCurrentContent() === nextNativeContent || wasComposing && nowComposing) {\n      return false;\n    }\n\n    var prevContent = prevEditorState.getCurrentContent();\n    var nextContent = nextEditorState.getCurrentContent();\n    var prevDecorator = prevEditorState.getDecorator();\n    var nextDecorator = nextEditorState.getDecorator();\n    return wasComposing !== nowComposing || prevContent !== nextContent || prevDecorator !== nextDecorator || nextEditorState.mustForceSelection();\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        blockRenderMap = _this$props.blockRenderMap,\n        blockRendererFn = _this$props.blockRendererFn,\n        blockStyleFn = _this$props.blockStyleFn,\n        customStyleMap = _this$props.customStyleMap,\n        customStyleFn = _this$props.customStyleFn,\n        editorState = _this$props.editorState,\n        editorKey = _this$props.editorKey,\n        textDirectionality = _this$props.textDirectionality;\n    var content = editorState.getCurrentContent();\n    var selection = editorState.getSelection();\n    var forceSelection = editorState.mustForceSelection();\n    var decorator = editorState.getDecorator();\n    var directionMap = nullthrows(editorState.getDirectionMap());\n    var blocksAsArray = content.getBlocksAsArray();\n    var rootBlock = blocksAsArray[0];\n    var processedBlocks = [];\n    var nodeBlock = rootBlock;\n\n    while (nodeBlock) {\n      var blockKey = nodeBlock.getKey();\n      var blockProps = {\n        blockRenderMap: blockRenderMap,\n        blockRendererFn: blockRendererFn,\n        blockStyleFn: blockStyleFn,\n        contentState: content,\n        customStyleFn: customStyleFn,\n        customStyleMap: customStyleMap,\n        decorator: decorator,\n        editorKey: editorKey,\n        editorState: editorState,\n        forceSelection: forceSelection,\n        selection: selection,\n        block: nodeBlock,\n        direction: textDirectionality ? textDirectionality : directionMap.get(blockKey),\n        tree: editorState.getBlockTree(blockKey)\n      };\n      var configForType = blockRenderMap.get(nodeBlock.getType()) || blockRenderMap.get('unstyled');\n      var wrapperTemplate = configForType.wrapper;\n      processedBlocks.push({\n        /* $FlowFixMe[incompatible-type] (>=0.112.0 site=www,mobile) This\n         * comment suppresses an error found when Flow v0.112 was deployed. To\n         * see the error delete this comment and run Flow. */\n        block: React.createElement(DraftEditorBlockNode, _extends({\n          key: blockKey\n        }, blockProps)),\n        wrapperTemplate: wrapperTemplate,\n        key: blockKey,\n        offsetKey: DraftOffsetKey.encode(blockKey, 0, 0)\n      });\n      var nextBlockKey = nodeBlock.getNextSiblingKey();\n      nodeBlock = nextBlockKey ? content.getBlockForKey(nextBlockKey) : null;\n    } // Group contiguous runs of blocks that have the same wrapperTemplate\n\n\n    var outputBlocks = [];\n\n    for (var ii = 0; ii < processedBlocks.length;) {\n      var info = processedBlocks[ii];\n\n      if (info.wrapperTemplate) {\n        var blocks = [];\n\n        do {\n          blocks.push(processedBlocks[ii].block);\n          ii++;\n        } while (ii < processedBlocks.length && processedBlocks[ii].wrapperTemplate === info.wrapperTemplate);\n\n        var wrapperElement = React.cloneElement(info.wrapperTemplate, {\n          key: info.key + '-wrap',\n          'data-offset-key': info.offsetKey\n        }, blocks);\n        outputBlocks.push(wrapperElement);\n      } else {\n        outputBlocks.push(info.block);\n        ii++;\n      }\n    }\n\n    return React.createElement(\"div\", {\n      \"data-contents\": \"true\"\n    }, outputBlocks);\n  };\n\n  return DraftEditorContentsExperimental;\n}(React.Component);\n\nmodule.exports = DraftEditorContentsExperimental;","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw/node_modules/draft-js/lib/DraftEditorContentsExperimental.react.js"],"names":["_assign","require","_extends","target","i","arguments","length","source","key","Object","prototype","hasOwnProperty","call","apply","_inheritsLoose","subClass","superClass","create","constructor","__proto__","DraftEditorBlockNode","DraftOffsetKey","React","nullthrows","DraftEditorContentsExperimental","_React$Component","_proto","shouldComponentUpdate","nextProps","prevEditorState","props","editorState","nextEditorState","prevDirectionMap","getDirectionMap","nextDirectionMap","didHaveFocus","getSelection","getHasFocus","nowHasFocus","nextNativeContent","getNativelyRenderedContent","wasComposing","isInCompositionMode","nowComposing","getCurrentContent","prevContent","nextContent","prevDecorator","getDecorator","nextDecorator","mustForceSelection","render","_this$props","blockRenderMap","blockRendererFn","blockStyleFn","customStyleMap","customStyleFn","editorKey","textDirectionality","content","selection","forceSelection","decorator","directionMap","blocksAsArray","getBlocksAsArray","rootBlock","processedBlocks","nodeBlock","blockKey","getKey","blockProps","contentState","block","direction","get","tree","getBlockTree","configForType","getType","wrapperTemplate","wrapper","push","createElement","offsetKey","encode","nextBlockKey","getNextSiblingKey","getBlockForKey","outputBlocks","ii","info","blocks","wrapperElement","cloneElement","Component","module","exports"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * \n * @emails oncall+draft_js\n *\n * This file is a fork of DraftEditorContents.react.js for tree nodes\n *\n * This is unstable and not part of the public API and should not be used by\n * production systems. This file may be update/removed without notice.\n */\n'use strict';\n\nvar _assign = require(\"object-assign\");\n\nfunction _extends() { _extends = _assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _inheritsLoose(subClass, superClass) { subClass.prototype = Object.create(superClass.prototype); subClass.prototype.constructor = subClass; subClass.__proto__ = superClass; }\n\nvar DraftEditorBlockNode = require(\"./DraftEditorBlockNode.react\");\n\nvar DraftOffsetKey = require(\"./DraftOffsetKey\");\n\nvar React = require(\"react\");\n\nvar nullthrows = require(\"fbjs/lib/nullthrows\");\n\n/**\n * `DraftEditorContents` is the container component for all block components\n * rendered for a `DraftEditor`. It is optimized to aggressively avoid\n * re-rendering blocks whenever possible.\n *\n * This component is separate from `DraftEditor` because certain props\n * (for instance, ARIA props) must be allowed to update without affecting\n * the contents of the editor.\n */\nvar DraftEditorContentsExperimental = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(DraftEditorContentsExperimental, _React$Component);\n\n  function DraftEditorContentsExperimental() {\n    return _React$Component.apply(this, arguments) || this;\n  }\n\n  var _proto = DraftEditorContentsExperimental.prototype;\n\n  _proto.shouldComponentUpdate = function shouldComponentUpdate(nextProps) {\n    var prevEditorState = this.props.editorState;\n    var nextEditorState = nextProps.editorState;\n    var prevDirectionMap = prevEditorState.getDirectionMap();\n    var nextDirectionMap = nextEditorState.getDirectionMap(); // Text direction has changed for one or more blocks. We must re-render.\n\n    if (prevDirectionMap !== nextDirectionMap) {\n      return true;\n    }\n\n    var didHaveFocus = prevEditorState.getSelection().getHasFocus();\n    var nowHasFocus = nextEditorState.getSelection().getHasFocus();\n\n    if (didHaveFocus !== nowHasFocus) {\n      return true;\n    }\n\n    var nextNativeContent = nextEditorState.getNativelyRenderedContent();\n    var wasComposing = prevEditorState.isInCompositionMode();\n    var nowComposing = nextEditorState.isInCompositionMode(); // If the state is unchanged or we're currently rendering a natively\n    // rendered state, there's nothing new to be done.\n\n    if (prevEditorState === nextEditorState || nextNativeContent !== null && nextEditorState.getCurrentContent() === nextNativeContent || wasComposing && nowComposing) {\n      return false;\n    }\n\n    var prevContent = prevEditorState.getCurrentContent();\n    var nextContent = nextEditorState.getCurrentContent();\n    var prevDecorator = prevEditorState.getDecorator();\n    var nextDecorator = nextEditorState.getDecorator();\n    return wasComposing !== nowComposing || prevContent !== nextContent || prevDecorator !== nextDecorator || nextEditorState.mustForceSelection();\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        blockRenderMap = _this$props.blockRenderMap,\n        blockRendererFn = _this$props.blockRendererFn,\n        blockStyleFn = _this$props.blockStyleFn,\n        customStyleMap = _this$props.customStyleMap,\n        customStyleFn = _this$props.customStyleFn,\n        editorState = _this$props.editorState,\n        editorKey = _this$props.editorKey,\n        textDirectionality = _this$props.textDirectionality;\n    var content = editorState.getCurrentContent();\n    var selection = editorState.getSelection();\n    var forceSelection = editorState.mustForceSelection();\n    var decorator = editorState.getDecorator();\n    var directionMap = nullthrows(editorState.getDirectionMap());\n    var blocksAsArray = content.getBlocksAsArray();\n    var rootBlock = blocksAsArray[0];\n    var processedBlocks = [];\n    var nodeBlock = rootBlock;\n\n    while (nodeBlock) {\n      var blockKey = nodeBlock.getKey();\n      var blockProps = {\n        blockRenderMap: blockRenderMap,\n        blockRendererFn: blockRendererFn,\n        blockStyleFn: blockStyleFn,\n        contentState: content,\n        customStyleFn: customStyleFn,\n        customStyleMap: customStyleMap,\n        decorator: decorator,\n        editorKey: editorKey,\n        editorState: editorState,\n        forceSelection: forceSelection,\n        selection: selection,\n        block: nodeBlock,\n        direction: textDirectionality ? textDirectionality : directionMap.get(blockKey),\n        tree: editorState.getBlockTree(blockKey)\n      };\n      var configForType = blockRenderMap.get(nodeBlock.getType()) || blockRenderMap.get('unstyled');\n      var wrapperTemplate = configForType.wrapper;\n      processedBlocks.push({\n        /* $FlowFixMe[incompatible-type] (>=0.112.0 site=www,mobile) This\n         * comment suppresses an error found when Flow v0.112 was deployed. To\n         * see the error delete this comment and run Flow. */\n        block: React.createElement(DraftEditorBlockNode, _extends({\n          key: blockKey\n        }, blockProps)),\n        wrapperTemplate: wrapperTemplate,\n        key: blockKey,\n        offsetKey: DraftOffsetKey.encode(blockKey, 0, 0)\n      });\n      var nextBlockKey = nodeBlock.getNextSiblingKey();\n      nodeBlock = nextBlockKey ? content.getBlockForKey(nextBlockKey) : null;\n    } // Group contiguous runs of blocks that have the same wrapperTemplate\n\n\n    var outputBlocks = [];\n\n    for (var ii = 0; ii < processedBlocks.length;) {\n      var info = processedBlocks[ii];\n\n      if (info.wrapperTemplate) {\n        var blocks = [];\n\n        do {\n          blocks.push(processedBlocks[ii].block);\n          ii++;\n        } while (ii < processedBlocks.length && processedBlocks[ii].wrapperTemplate === info.wrapperTemplate);\n\n        var wrapperElement = React.cloneElement(info.wrapperTemplate, {\n          key: info.key + '-wrap',\n          'data-offset-key': info.offsetKey\n        }, blocks);\n        outputBlocks.push(wrapperElement);\n      } else {\n        outputBlocks.push(info.block);\n        ii++;\n      }\n    }\n\n    return React.createElement(\"div\", {\n      \"data-contents\": \"true\"\n    }, outputBlocks);\n  };\n\n  return DraftEditorContentsExperimental;\n}(React.Component);\n\nmodule.exports = DraftEditorContentsExperimental;"]},"metadata":{},"sourceType":"script"}