{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n// mode(s) for the sequence chart dsl's mscgen, x√π and msgenny\n// For more information on mscgen, see the site of the original author:\n// http://www.mcternan.me.uk/mscgen\n//\n// This mode for mscgen and the two derivative languages were\n// originally made for use in the mscgen_js interpreter\n// (https://sverweij.github.io/mscgen_js)\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  var languages = {\n    mscgen: {\n      \"keywords\": [\"msc\"],\n      \"options\": [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\"],\n      \"constants\": [\"true\", \"false\", \"on\", \"off\"],\n      \"attributes\": [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\"],\n      \"brackets\": [\"\\\\{\", \"\\\\}\"],\n      // [ and  ] are brackets too, but these get handled in with lists\n      \"arcsWords\": [\"note\", \"abox\", \"rbox\", \"box\"],\n      \"arcsOthers\": [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n      \"singlecomment\": [\"//\", \"#\"],\n      \"operators\": [\"=\"]\n    },\n    xu: {\n      \"keywords\": [\"msc\", \"xu\"],\n      \"options\": [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n      \"constants\": [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n      \"attributes\": [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\", \"title\", \"deactivate\", \"activate\", \"activation\"],\n      \"brackets\": [\"\\\\{\", \"\\\\}\"],\n      // [ and  ] are brackets too, but these get handled in with lists\n      \"arcsWords\": [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n      \"arcsOthers\": [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n      \"singlecomment\": [\"//\", \"#\"],\n      \"operators\": [\"=\"]\n    },\n    msgenny: {\n      \"keywords\": null,\n      \"options\": [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n      \"constants\": [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n      \"attributes\": null,\n      \"brackets\": [\"\\\\{\", \"\\\\}\"],\n      \"arcsWords\": [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n      \"arcsOthers\": [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n      \"singlecomment\": [\"//\", \"#\"],\n      \"operators\": [\"=\"]\n    }\n  };\n  CodeMirror.defineMode(\"mscgen\", function (_, modeConfig) {\n    var language = languages[modeConfig && modeConfig.language || \"mscgen\"];\n    return {\n      startState: startStateFn,\n      copyState: copyStateFn,\n      token: produceTokenFunction(language),\n      lineComment: \"#\",\n      blockCommentStart: \"/*\",\n      blockCommentEnd: \"*/\"\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-mscgen\", \"mscgen\");\n  CodeMirror.defineMIME(\"text/x-xu\", {\n    name: \"mscgen\",\n    language: \"xu\"\n  });\n  CodeMirror.defineMIME(\"text/x-msgenny\", {\n    name: \"mscgen\",\n    language: \"msgenny\"\n  });\n\n  function wordRegexpBoundary(pWords) {\n    return new RegExp(\"\\\\b(\" + pWords.join(\"|\") + \")\\\\b\", \"i\");\n  }\n\n  function wordRegexp(pWords) {\n    return new RegExp(\"(\" + pWords.join(\"|\") + \")\", \"i\");\n  }\n\n  function startStateFn() {\n    return {\n      inComment: false,\n      inString: false,\n      inAttributeList: false,\n      inScript: false\n    };\n  }\n\n  function copyStateFn(pState) {\n    return {\n      inComment: pState.inComment,\n      inString: pState.inString,\n      inAttributeList: pState.inAttributeList,\n      inScript: pState.inScript\n    };\n  }\n\n  function produceTokenFunction(pConfig) {\n    return function (pStream, pState) {\n      if (pStream.match(wordRegexp(pConfig.brackets), true, true)) {\n        return \"bracket\";\n      }\n      /* comments */\n\n\n      if (!pState.inComment) {\n        if (pStream.match(/\\/\\*[^\\*\\/]*/, true, true)) {\n          pState.inComment = true;\n          return \"comment\";\n        }\n\n        if (pStream.match(wordRegexp(pConfig.singlecomment), true, true)) {\n          pStream.skipToEnd();\n          return \"comment\";\n        }\n      }\n\n      if (pState.inComment) {\n        if (pStream.match(/[^\\*\\/]*\\*\\//, true, true)) pState.inComment = false;else pStream.skipToEnd();\n        return \"comment\";\n      }\n      /* strings */\n\n\n      if (!pState.inString && pStream.match(/\\\"(\\\\\\\"|[^\\\"])*/, true, true)) {\n        pState.inString = true;\n        return \"string\";\n      }\n\n      if (pState.inString) {\n        if (pStream.match(/[^\\\"]*\\\"/, true, true)) pState.inString = false;else pStream.skipToEnd();\n        return \"string\";\n      }\n      /* keywords & operators */\n\n\n      if (!!pConfig.keywords && pStream.match(wordRegexpBoundary(pConfig.keywords), true, true)) return \"keyword\";\n      if (pStream.match(wordRegexpBoundary(pConfig.options), true, true)) return \"keyword\";\n      if (pStream.match(wordRegexpBoundary(pConfig.arcsWords), true, true)) return \"keyword\";\n      if (pStream.match(wordRegexp(pConfig.arcsOthers), true, true)) return \"keyword\";\n      if (!!pConfig.operators && pStream.match(wordRegexp(pConfig.operators), true, true)) return \"operator\";\n      if (!!pConfig.constants && pStream.match(wordRegexp(pConfig.constants), true, true)) return \"variable\";\n      /* attribute lists */\n\n      if (!pConfig.inAttributeList && !!pConfig.attributes && pStream.match(/\\[/, true, true)) {\n        pConfig.inAttributeList = true;\n        return \"bracket\";\n      }\n\n      if (pConfig.inAttributeList) {\n        if (pConfig.attributes !== null && pStream.match(wordRegexpBoundary(pConfig.attributes), true, true)) {\n          return \"attribute\";\n        }\n\n        if (pStream.match(/]/, true, true)) {\n          pConfig.inAttributeList = false;\n          return \"bracket\";\n        }\n      }\n\n      pStream.next();\n      return \"base\";\n    };\n  }\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw/node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/mscgen/mscgen.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","languages","mscgen","xu","msgenny","defineMode","_","modeConfig","language","startState","startStateFn","copyState","copyStateFn","token","produceTokenFunction","lineComment","blockCommentStart","blockCommentEnd","defineMIME","name","wordRegexpBoundary","pWords","RegExp","join","wordRegexp","inComment","inString","inAttributeList","inScript","pState","pConfig","pStream","match","brackets","singlecomment","skipToEnd","keywords","options","arcsWords","arcsOthers","operators","constants","attributes","next"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// mode(s) for the sequence chart dsl's mscgen, x√π and msgenny\n// For more information on mscgen, see the site of the original author:\n// http://www.mcternan.me.uk/mscgen\n//\n// This mode for mscgen and the two derivative languages were\n// originally made for use in the mscgen_js interpreter\n// (https://sverweij.github.io/mscgen_js)\n\n(function(mod) {\n  if ( typeof exports == \"object\" && typeof module == \"object\")// CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if ( typeof define == \"function\" && define.amd)// AMD\n    define([\"../../lib/codemirror\"], mod);\n  else// Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var languages = {\n    mscgen: {\n      \"keywords\" : [\"msc\"],\n      \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\"],\n      \"constants\" : [\"true\", \"false\", \"on\", \"off\"],\n      \"attributes\" : [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\"],\n      \"brackets\" : [\"\\\\{\", \"\\\\}\"], // [ and  ] are brackets too, but these get handled in with lists\n      \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\"],\n      \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n      \"singlecomment\" : [\"//\", \"#\"],\n      \"operators\" : [\"=\"]\n    },\n    xu: {\n      \"keywords\" : [\"msc\", \"xu\"],\n      \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n      \"constants\" : [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n      \"attributes\" : [\"label\", \"idurl\", \"id\", \"url\", \"linecolor\", \"linecolour\", \"textcolor\", \"textcolour\", \"textbgcolor\", \"textbgcolour\", \"arclinecolor\", \"arclinecolour\", \"arctextcolor\", \"arctextcolour\", \"arctextbgcolor\", \"arctextbgcolour\", \"arcskip\", \"title\", \"deactivate\", \"activate\", \"activation\"],\n      \"brackets\" : [\"\\\\{\", \"\\\\}\"],  // [ and  ] are brackets too, but these get handled in with lists\n      \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n      \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n      \"singlecomment\" : [\"//\", \"#\"],\n      \"operators\" : [\"=\"]\n    },\n    msgenny: {\n      \"keywords\" : null,\n      \"options\" : [\"hscale\", \"width\", \"arcgradient\", \"wordwraparcs\", \"wordwrapentities\", \"watermark\"],\n      \"constants\" : [\"true\", \"false\", \"on\", \"off\", \"auto\"],\n      \"attributes\" : null,\n      \"brackets\" : [\"\\\\{\", \"\\\\}\"],\n      \"arcsWords\" : [\"note\", \"abox\", \"rbox\", \"box\", \"alt\", \"else\", \"opt\", \"break\", \"par\", \"seq\", \"strict\", \"neg\", \"critical\", \"ignore\", \"consider\", \"assert\", \"loop\", \"ref\", \"exc\"],\n      \"arcsOthers\" : [\"\\\\|\\\\|\\\\|\", \"\\\\.\\\\.\\\\.\", \"---\", \"--\", \"<->\", \"==\", \"<<=>>\", \"<=>\", \"\\\\.\\\\.\", \"<<>>\", \"::\", \"<:>\", \"->\", \"=>>\", \"=>\", \">>\", \":>\", \"<-\", \"<<=\", \"<=\", \"<<\", \"<:\", \"x-\", \"-x\"],\n      \"singlecomment\" : [\"//\", \"#\"],\n      \"operators\" : [\"=\"]\n    }\n  }\n\n  CodeMirror.defineMode(\"mscgen\", function(_, modeConfig) {\n    var language = languages[modeConfig && modeConfig.language || \"mscgen\"]\n    return {\n      startState: startStateFn,\n      copyState: copyStateFn,\n      token: produceTokenFunction(language),\n      lineComment : \"#\",\n      blockCommentStart : \"/*\",\n      blockCommentEnd : \"*/\"\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-mscgen\", \"mscgen\");\n  CodeMirror.defineMIME(\"text/x-xu\", {name: \"mscgen\", language: \"xu\"});\n  CodeMirror.defineMIME(\"text/x-msgenny\", {name: \"mscgen\", language: \"msgenny\"});\n\n  function wordRegexpBoundary(pWords) {\n    return new RegExp(\"\\\\b(\" + pWords.join(\"|\") + \")\\\\b\", \"i\");\n  }\n\n  function wordRegexp(pWords) {\n    return new RegExp(\"(\" + pWords.join(\"|\") + \")\", \"i\");\n  }\n\n  function startStateFn() {\n    return {\n      inComment : false,\n      inString : false,\n      inAttributeList : false,\n      inScript : false\n    };\n  }\n\n  function copyStateFn(pState) {\n    return {\n      inComment : pState.inComment,\n      inString : pState.inString,\n      inAttributeList : pState.inAttributeList,\n      inScript : pState.inScript\n    };\n  }\n\n  function produceTokenFunction(pConfig) {\n\n    return function(pStream, pState) {\n      if (pStream.match(wordRegexp(pConfig.brackets), true, true)) {\n        return \"bracket\";\n      }\n      /* comments */\n      if (!pState.inComment) {\n        if (pStream.match(/\\/\\*[^\\*\\/]*/, true, true)) {\n          pState.inComment = true;\n          return \"comment\";\n        }\n        if (pStream.match(wordRegexp(pConfig.singlecomment), true, true)) {\n          pStream.skipToEnd();\n          return \"comment\";\n        }\n      }\n      if (pState.inComment) {\n        if (pStream.match(/[^\\*\\/]*\\*\\//, true, true))\n          pState.inComment = false;\n        else\n          pStream.skipToEnd();\n        return \"comment\";\n      }\n      /* strings */\n      if (!pState.inString && pStream.match(/\\\"(\\\\\\\"|[^\\\"])*/, true, true)) {\n        pState.inString = true;\n        return \"string\";\n      }\n      if (pState.inString) {\n        if (pStream.match(/[^\\\"]*\\\"/, true, true))\n          pState.inString = false;\n        else\n          pStream.skipToEnd();\n        return \"string\";\n      }\n      /* keywords & operators */\n      if (!!pConfig.keywords && pStream.match(wordRegexpBoundary(pConfig.keywords), true, true))\n        return \"keyword\";\n\n      if (pStream.match(wordRegexpBoundary(pConfig.options), true, true))\n        return \"keyword\";\n\n      if (pStream.match(wordRegexpBoundary(pConfig.arcsWords), true, true))\n        return \"keyword\";\n\n      if (pStream.match(wordRegexp(pConfig.arcsOthers), true, true))\n        return \"keyword\";\n\n      if (!!pConfig.operators && pStream.match(wordRegexp(pConfig.operators), true, true))\n        return \"operator\";\n\n      if (!!pConfig.constants && pStream.match(wordRegexp(pConfig.constants), true, true))\n        return \"variable\";\n\n      /* attribute lists */\n      if (!pConfig.inAttributeList && !!pConfig.attributes && pStream.match(/\\[/, true, true)) {\n        pConfig.inAttributeList = true;\n        return \"bracket\";\n      }\n      if (pConfig.inAttributeList) {\n        if (pConfig.attributes !== null && pStream.match(wordRegexpBoundary(pConfig.attributes), true, true)) {\n          return \"attribute\";\n        }\n        if (pStream.match(/]/, true, true)) {\n          pConfig.inAttributeList = false;\n          return \"bracket\";\n        }\n      }\n\n      pStream.next();\n      return \"base\";\n    };\n  }\n\n});\n"]},"metadata":{},"sourceType":"script"}