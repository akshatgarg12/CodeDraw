{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/*\n  DTD mode\n  Ported to CodeMirror by Peter Kroon <plakroon@gmail.com>\n  Report bugs/issues here: https://github.com/codemirror/CodeMirror/issues\n  GitHub: @peterkroon\n*/\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"dtd\", function (config) {\n    var indentUnit = config.indentUnit,\n        type;\n\n    function ret(style, tp) {\n      type = tp;\n      return style;\n    }\n\n    function tokenBase(stream, state) {\n      var ch = stream.next();\n\n      if (ch == \"<\" && stream.eat(\"!\")) {\n        if (stream.eatWhile(/[\\-]/)) {\n          state.tokenize = tokenSGMLComment;\n          return tokenSGMLComment(stream, state);\n        } else if (stream.eatWhile(/[\\w]/)) return ret(\"keyword\", \"doindent\");\n      } else if (ch == \"<\" && stream.eat(\"?\")) {\n        //xml declaration\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return ret(\"meta\", ch);\n      } else if (ch == \"#\" && stream.eatWhile(/[\\w]/)) return ret(\"atom\", \"tag\");else if (ch == \"|\") return ret(\"keyword\", \"seperator\");else if (ch.match(/[\\(\\)\\[\\]\\-\\.,\\+\\?>]/)) return ret(null, ch); //if(ch === \">\") return ret(null, \"endtag\"); else\n      else if (ch.match(/[\\[\\]]/)) return ret(\"rule\", ch);else if (ch == \"\\\"\" || ch == \"'\") {\n          state.tokenize = tokenString(ch);\n          return state.tokenize(stream, state);\n        } else if (stream.eatWhile(/[a-zA-Z\\?\\+\\d]/)) {\n          var sc = stream.current();\n          if (sc.substr(sc.length - 1, sc.length).match(/\\?|\\+/) !== null) stream.backUp(1);\n          return ret(\"tag\", \"tag\");\n        } else if (ch == \"%\" || ch == \"*\") return ret(\"number\", \"number\");else {\n          stream.eatWhile(/[\\w\\\\\\-_%.{,]/);\n          return ret(null, null);\n        }\n    }\n\n    function tokenSGMLComment(stream, state) {\n      var dashes = 0,\n          ch;\n\n      while ((ch = stream.next()) != null) {\n        if (dashes >= 2 && ch == \">\") {\n          state.tokenize = tokenBase;\n          break;\n        }\n\n        dashes = ch == \"-\" ? dashes + 1 : 0;\n      }\n\n      return ret(\"comment\", \"comment\");\n    }\n\n    function tokenString(quote) {\n      return function (stream, state) {\n        var escaped = false,\n            ch;\n\n        while ((ch = stream.next()) != null) {\n          if (ch == quote && !escaped) {\n            state.tokenize = tokenBase;\n            break;\n          }\n\n          escaped = !escaped && ch == \"\\\\\";\n        }\n\n        return ret(\"string\", \"tag\");\n      };\n    }\n\n    function inBlock(style, terminator) {\n      return function (stream, state) {\n        while (!stream.eol()) {\n          if (stream.match(terminator)) {\n            state.tokenize = tokenBase;\n            break;\n          }\n\n          stream.next();\n        }\n\n        return style;\n      };\n    }\n\n    return {\n      startState: function (base) {\n        return {\n          tokenize: tokenBase,\n          baseIndent: base || 0,\n          stack: []\n        };\n      },\n      token: function (stream, state) {\n        if (stream.eatSpace()) return null;\n        var style = state.tokenize(stream, state);\n        var context = state.stack[state.stack.length - 1];\n        if (stream.current() == \"[\" || type === \"doindent\" || type == \"[\") state.stack.push(\"rule\");else if (type === \"endtag\") state.stack[state.stack.length - 1] = \"endtag\";else if (stream.current() == \"]\" || type == \"]\" || type == \">\" && context == \"rule\") state.stack.pop();else if (type == \"[\") state.stack.push(\"[\");\n        return style;\n      },\n      indent: function (state, textAfter) {\n        var n = state.stack.length;\n        if (textAfter.match(/\\]\\s+|\\]/)) n = n - 1;else if (textAfter.substr(textAfter.length - 1, textAfter.length) === \">\") {\n          if (textAfter.substr(0, 1) === \"<\") {} else if (type == \"doindent\" && textAfter.length > 1) {} else if (type == \"doindent\") n--;else if (type == \">\" && textAfter.length > 1) {} else if (type == \"tag\" && textAfter !== \">\") {} else if (type == \"tag\" && state.stack[state.stack.length - 1] == \"rule\") n--;else if (type == \"tag\") n++;else if (textAfter === \">\" && state.stack[state.stack.length - 1] == \"rule\" && type === \">\") n--;else if (textAfter === \">\" && state.stack[state.stack.length - 1] == \"rule\") {} else if (textAfter.substr(0, 1) !== \"<\" && textAfter.substr(0, 1) === \">\") n = n - 1;else if (textAfter === \">\") {} else n = n - 1; //over rule them all\n\n\n          if (type == null || type == \"]\") n--;\n        }\n        return state.baseIndent + n * indentUnit;\n      },\n      electricChars: \"]>\"\n    };\n  });\n  CodeMirror.defineMIME(\"application/xml-dtd\", \"dtd\");\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw-server/client/node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/dtd/dtd.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","indentUnit","type","ret","style","tp","tokenBase","stream","state","ch","next","eat","eatWhile","tokenize","tokenSGMLComment","inBlock","match","tokenString","sc","current","substr","length","backUp","dashes","quote","escaped","terminator","eol","startState","base","baseIndent","stack","token","eatSpace","context","push","pop","indent","textAfter","n","electricChars","defineMIME"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/*\n  DTD mode\n  Ported to CodeMirror by Peter Kroon <plakroon@gmail.com>\n  Report bugs/issues here: https://github.com/codemirror/CodeMirror/issues\n  GitHub: @peterkroon\n*/\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"dtd\", function(config) {\n  var indentUnit = config.indentUnit, type;\n  function ret(style, tp) {type = tp; return style;}\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n\n    if (ch == \"<\" && stream.eat(\"!\") ) {\n      if (stream.eatWhile(/[\\-]/)) {\n        state.tokenize = tokenSGMLComment;\n        return tokenSGMLComment(stream, state);\n      } else if (stream.eatWhile(/[\\w]/)) return ret(\"keyword\", \"doindent\");\n    } else if (ch == \"<\" && stream.eat(\"?\")) { //xml declaration\n      state.tokenize = inBlock(\"meta\", \"?>\");\n      return ret(\"meta\", ch);\n    } else if (ch == \"#\" && stream.eatWhile(/[\\w]/)) return ret(\"atom\", \"tag\");\n    else if (ch == \"|\") return ret(\"keyword\", \"seperator\");\n    else if (ch.match(/[\\(\\)\\[\\]\\-\\.,\\+\\?>]/)) return ret(null, ch);//if(ch === \">\") return ret(null, \"endtag\"); else\n    else if (ch.match(/[\\[\\]]/)) return ret(\"rule\", ch);\n    else if (ch == \"\\\"\" || ch == \"'\") {\n      state.tokenize = tokenString(ch);\n      return state.tokenize(stream, state);\n    } else if (stream.eatWhile(/[a-zA-Z\\?\\+\\d]/)) {\n      var sc = stream.current();\n      if( sc.substr(sc.length-1,sc.length).match(/\\?|\\+/) !== null )stream.backUp(1);\n      return ret(\"tag\", \"tag\");\n    } else if (ch == \"%\" || ch == \"*\" ) return ret(\"number\", \"number\");\n    else {\n      stream.eatWhile(/[\\w\\\\\\-_%.{,]/);\n      return ret(null, null);\n    }\n  }\n\n  function tokenSGMLComment(stream, state) {\n    var dashes = 0, ch;\n    while ((ch = stream.next()) != null) {\n      if (dashes >= 2 && ch == \">\") {\n        state.tokenize = tokenBase;\n        break;\n      }\n      dashes = (ch == \"-\") ? dashes + 1 : 0;\n    }\n    return ret(\"comment\", \"comment\");\n  }\n\n  function tokenString(quote) {\n    return function(stream, state) {\n      var escaped = false, ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == quote && !escaped) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        escaped = !escaped && ch == \"\\\\\";\n      }\n      return ret(\"string\", \"tag\");\n    };\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = tokenBase;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    };\n  }\n\n  return {\n    startState: function(base) {\n      return {tokenize: tokenBase,\n              baseIndent: base || 0,\n              stack: []};\n    },\n\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      var style = state.tokenize(stream, state);\n\n      var context = state.stack[state.stack.length-1];\n      if (stream.current() == \"[\" || type === \"doindent\" || type == \"[\") state.stack.push(\"rule\");\n      else if (type === \"endtag\") state.stack[state.stack.length-1] = \"endtag\";\n      else if (stream.current() == \"]\" || type == \"]\" || (type == \">\" && context == \"rule\")) state.stack.pop();\n      else if (type == \"[\") state.stack.push(\"[\");\n      return style;\n    },\n\n    indent: function(state, textAfter) {\n      var n = state.stack.length;\n\n      if( textAfter.match(/\\]\\s+|\\]/) )n=n-1;\n      else if(textAfter.substr(textAfter.length-1, textAfter.length) === \">\"){\n        if(textAfter.substr(0,1) === \"<\") {}\n        else if( type == \"doindent\" && textAfter.length > 1 ) {}\n        else if( type == \"doindent\")n--;\n        else if( type == \">\" && textAfter.length > 1) {}\n        else if( type == \"tag\" && textAfter !== \">\") {}\n        else if( type == \"tag\" && state.stack[state.stack.length-1] == \"rule\")n--;\n        else if( type == \"tag\")n++;\n        else if( textAfter === \">\" && state.stack[state.stack.length-1] == \"rule\" && type === \">\")n--;\n        else if( textAfter === \">\" && state.stack[state.stack.length-1] == \"rule\") {}\n        else if( textAfter.substr(0,1) !== \"<\" && textAfter.substr(0,1) === \">\" )n=n-1;\n        else if( textAfter === \">\") {}\n        else n=n-1;\n        //over rule them all\n        if(type == null || type == \"]\")n--;\n      }\n\n      return state.baseIndent + n * indentUnit;\n    },\n\n    electricChars: \"]>\"\n  };\n});\n\nCodeMirror.defineMIME(\"application/xml-dtd\", \"dtd\");\n\n});\n"]},"metadata":{},"sourceType":"script"}