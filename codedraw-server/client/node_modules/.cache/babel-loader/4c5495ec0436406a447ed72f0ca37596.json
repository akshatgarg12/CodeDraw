{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode('smalltalk', function (config) {\n    var specialChars = /[+\\-\\/\\\\*~<>=@%|&?!.,:;^]/;\n    var keywords = /true|false|nil|self|super|thisContext/;\n\n    var Context = function Context(tokenizer, parent) {\n      this.next = tokenizer;\n      this.parent = parent;\n    };\n\n    var Token = function Token(name, context, eos) {\n      this.name = name;\n      this.context = context;\n      this.eos = eos;\n    };\n\n    var State = function State() {\n      this.context = new Context(next, null);\n      this.expectVariable = true;\n      this.indentation = 0;\n      this.userIndentationDelta = 0;\n    };\n\n    State.prototype.userIndent = function (indentation) {\n      this.userIndentationDelta = indentation > 0 ? indentation / config.indentUnit - this.indentation : 0;\n    };\n\n    var next = function next(stream, context, state) {\n      var token = new Token(null, context, false);\n      var aChar = stream.next();\n\n      if (aChar === '\"') {\n        token = nextComment(stream, new Context(nextComment, context));\n      } else if (aChar === '\\'') {\n        token = nextString(stream, new Context(nextString, context));\n      } else if (aChar === '#') {\n        if (stream.peek() === '\\'') {\n          stream.next();\n          token = nextSymbol(stream, new Context(nextSymbol, context));\n        } else {\n          if (stream.eatWhile(/[^\\s.{}\\[\\]()]/)) token.name = 'string-2';else token.name = 'meta';\n        }\n      } else if (aChar === '$') {\n        if (stream.next() === '<') {\n          stream.eatWhile(/[^\\s>]/);\n          stream.next();\n        }\n\n        token.name = 'string-2';\n      } else if (aChar === '|' && state.expectVariable) {\n        token.context = new Context(nextTemporaries, context);\n      } else if (/[\\[\\]{}()]/.test(aChar)) {\n        token.name = 'bracket';\n        token.eos = /[\\[{(]/.test(aChar);\n\n        if (aChar === '[') {\n          state.indentation++;\n        } else if (aChar === ']') {\n          state.indentation = Math.max(0, state.indentation - 1);\n        }\n      } else if (specialChars.test(aChar)) {\n        stream.eatWhile(specialChars);\n        token.name = 'operator';\n        token.eos = aChar !== ';'; // ; cascaded message expression\n      } else if (/\\d/.test(aChar)) {\n        stream.eatWhile(/[\\w\\d]/);\n        token.name = 'number';\n      } else if (/[\\w_]/.test(aChar)) {\n        stream.eatWhile(/[\\w\\d_]/);\n        token.name = state.expectVariable ? keywords.test(stream.current()) ? 'keyword' : 'variable' : null;\n      } else {\n        token.eos = state.expectVariable;\n      }\n\n      return token;\n    };\n\n    var nextComment = function nextComment(stream, context) {\n      stream.eatWhile(/[^\"]/);\n      return new Token('comment', stream.eat('\"') ? context.parent : context, true);\n    };\n\n    var nextString = function nextString(stream, context) {\n      stream.eatWhile(/[^']/);\n      return new Token('string', stream.eat('\\'') ? context.parent : context, false);\n    };\n\n    var nextSymbol = function nextSymbol(stream, context) {\n      stream.eatWhile(/[^']/);\n      return new Token('string-2', stream.eat('\\'') ? context.parent : context, false);\n    };\n\n    var nextTemporaries = function nextTemporaries(stream, context) {\n      var token = new Token(null, context, false);\n      var aChar = stream.next();\n\n      if (aChar === '|') {\n        token.context = context.parent;\n        token.eos = true;\n      } else {\n        stream.eatWhile(/[^|]/);\n        token.name = 'variable';\n      }\n\n      return token;\n    };\n\n    return {\n      startState: function startState() {\n        return new State();\n      },\n      token: function token(stream, state) {\n        state.userIndent(stream.indentation());\n\n        if (stream.eatSpace()) {\n          return null;\n        }\n\n        var token = state.context.next(stream, state.context, state);\n        state.context = token.context;\n        state.expectVariable = token.eos;\n        return token.name;\n      },\n      blankLine: function blankLine(state) {\n        state.userIndent(0);\n      },\n      indent: function indent(state, textAfter) {\n        var i = state.context.next === next && textAfter && textAfter.charAt(0) === ']' ? -1 : state.userIndentationDelta;\n        return (state.indentation + i) * config.indentUnit;\n      },\n      electricChars: ']'\n    };\n  });\n  CodeMirror.defineMIME('text/x-stsrc', {\n    name: 'smalltalk'\n  });\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw-server/client/node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/smalltalk/smalltalk.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","specialChars","keywords","Context","tokenizer","parent","next","Token","name","context","eos","State","expectVariable","indentation","userIndentationDelta","prototype","userIndent","indentUnit","stream","state","token","aChar","nextComment","nextString","peek","nextSymbol","eatWhile","nextTemporaries","test","Math","max","current","eat","startState","eatSpace","blankLine","indent","textAfter","i","charAt","electricChars","defineMIME"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('smalltalk', function(config) {\n\n  var specialChars = /[+\\-\\/\\\\*~<>=@%|&?!.,:;^]/;\n  var keywords = /true|false|nil|self|super|thisContext/;\n\n  var Context = function(tokenizer, parent) {\n    this.next = tokenizer;\n    this.parent = parent;\n  };\n\n  var Token = function(name, context, eos) {\n    this.name = name;\n    this.context = context;\n    this.eos = eos;\n  };\n\n  var State = function() {\n    this.context = new Context(next, null);\n    this.expectVariable = true;\n    this.indentation = 0;\n    this.userIndentationDelta = 0;\n  };\n\n  State.prototype.userIndent = function(indentation) {\n    this.userIndentationDelta = indentation > 0 ? (indentation / config.indentUnit - this.indentation) : 0;\n  };\n\n  var next = function(stream, context, state) {\n    var token = new Token(null, context, false);\n    var aChar = stream.next();\n\n    if (aChar === '\"') {\n      token = nextComment(stream, new Context(nextComment, context));\n\n    } else if (aChar === '\\'') {\n      token = nextString(stream, new Context(nextString, context));\n\n    } else if (aChar === '#') {\n      if (stream.peek() === '\\'') {\n        stream.next();\n        token = nextSymbol(stream, new Context(nextSymbol, context));\n      } else {\n        if (stream.eatWhile(/[^\\s.{}\\[\\]()]/))\n          token.name = 'string-2';\n        else\n          token.name = 'meta';\n      }\n\n    } else if (aChar === '$') {\n      if (stream.next() === '<') {\n        stream.eatWhile(/[^\\s>]/);\n        stream.next();\n      }\n      token.name = 'string-2';\n\n    } else if (aChar === '|' && state.expectVariable) {\n      token.context = new Context(nextTemporaries, context);\n\n    } else if (/[\\[\\]{}()]/.test(aChar)) {\n      token.name = 'bracket';\n      token.eos = /[\\[{(]/.test(aChar);\n\n      if (aChar === '[') {\n        state.indentation++;\n      } else if (aChar === ']') {\n        state.indentation = Math.max(0, state.indentation - 1);\n      }\n\n    } else if (specialChars.test(aChar)) {\n      stream.eatWhile(specialChars);\n      token.name = 'operator';\n      token.eos = aChar !== ';'; // ; cascaded message expression\n\n    } else if (/\\d/.test(aChar)) {\n      stream.eatWhile(/[\\w\\d]/);\n      token.name = 'number';\n\n    } else if (/[\\w_]/.test(aChar)) {\n      stream.eatWhile(/[\\w\\d_]/);\n      token.name = state.expectVariable ? (keywords.test(stream.current()) ? 'keyword' : 'variable') : null;\n\n    } else {\n      token.eos = state.expectVariable;\n    }\n\n    return token;\n  };\n\n  var nextComment = function(stream, context) {\n    stream.eatWhile(/[^\"]/);\n    return new Token('comment', stream.eat('\"') ? context.parent : context, true);\n  };\n\n  var nextString = function(stream, context) {\n    stream.eatWhile(/[^']/);\n    return new Token('string', stream.eat('\\'') ? context.parent : context, false);\n  };\n\n  var nextSymbol = function(stream, context) {\n    stream.eatWhile(/[^']/);\n    return new Token('string-2', stream.eat('\\'') ? context.parent : context, false);\n  };\n\n  var nextTemporaries = function(stream, context) {\n    var token = new Token(null, context, false);\n    var aChar = stream.next();\n\n    if (aChar === '|') {\n      token.context = context.parent;\n      token.eos = true;\n\n    } else {\n      stream.eatWhile(/[^|]/);\n      token.name = 'variable';\n    }\n\n    return token;\n  };\n\n  return {\n    startState: function() {\n      return new State;\n    },\n\n    token: function(stream, state) {\n      state.userIndent(stream.indentation());\n\n      if (stream.eatSpace()) {\n        return null;\n      }\n\n      var token = state.context.next(stream, state.context, state);\n      state.context = token.context;\n      state.expectVariable = token.eos;\n\n      return token.name;\n    },\n\n    blankLine: function(state) {\n      state.userIndent(0);\n    },\n\n    indent: function(state, textAfter) {\n      var i = state.context.next === next && textAfter && textAfter.charAt(0) === ']' ? -1 : state.userIndentationDelta;\n      return (state.indentation + i) * config.indentUnit;\n    },\n\n    electricChars: ']'\n  };\n\n});\n\nCodeMirror.defineMIME('text/x-stsrc', {name: 'smalltalk'});\n\n});\n"]},"metadata":{},"sourceType":"script"}