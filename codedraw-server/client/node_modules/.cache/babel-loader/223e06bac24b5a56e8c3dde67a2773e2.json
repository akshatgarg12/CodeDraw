{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"spreadsheet\", function () {\n    return {\n      startState: function () {\n        return {\n          stringType: null,\n          stack: []\n        };\n      },\n      token: function (stream, state) {\n        if (!stream) return; //check for state changes\n\n        if (state.stack.length === 0) {\n          //strings\n          if (stream.peek() == '\"' || stream.peek() == \"'\") {\n            state.stringType = stream.peek();\n            stream.next(); // Skip quote\n\n            state.stack.unshift(\"string\");\n          }\n        } //return state\n        //stack has\n\n\n        switch (state.stack[0]) {\n          case \"string\":\n            while (state.stack[0] === \"string\" && !stream.eol()) {\n              if (stream.peek() === state.stringType) {\n                stream.next(); // Skip quote\n\n                state.stack.shift(); // Clear flag\n              } else if (stream.peek() === \"\\\\\") {\n                stream.next();\n                stream.next();\n              } else {\n                stream.match(/^.[^\\\\\\\"\\']*/);\n              }\n            }\n\n            return \"string\";\n\n          case \"characterClass\":\n            while (state.stack[0] === \"characterClass\" && !stream.eol()) {\n              if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./))) state.stack.shift();\n            }\n\n            return \"operator\";\n        }\n\n        var peek = stream.peek(); //no stack\n\n        switch (peek) {\n          case \"[\":\n            stream.next();\n            state.stack.unshift(\"characterClass\");\n            return \"bracket\";\n\n          case \":\":\n            stream.next();\n            return \"operator\";\n\n          case \"\\\\\":\n            if (stream.match(/\\\\[a-z]+/)) return \"string-2\";else {\n              stream.next();\n              return \"atom\";\n            }\n\n          case \".\":\n          case \",\":\n          case \";\":\n          case \"*\":\n          case \"-\":\n          case \"+\":\n          case \"^\":\n          case \"<\":\n          case \"/\":\n          case \"=\":\n            stream.next();\n            return \"atom\";\n\n          case \"$\":\n            stream.next();\n            return \"builtin\";\n        }\n\n        if (stream.match(/\\d+/)) {\n          if (stream.match(/^\\w+/)) return \"error\";\n          return \"number\";\n        } else if (stream.match(/^[a-zA-Z_]\\w*/)) {\n          if (stream.match(/(?=[\\(.])/, false)) return \"keyword\";\n          return \"variable-2\";\n        } else if ([\"[\", \"]\", \"(\", \")\", \"{\", \"}\"].indexOf(peek) != -1) {\n          stream.next();\n          return \"bracket\";\n        } else if (!stream.eatSpace()) {\n          stream.next();\n        }\n\n        return null;\n      }\n    };\n  });\n  CodeMirror.defineMIME(\"text/x-spreadsheet\", \"spreadsheet\");\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw-server/client/node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/spreadsheet/spreadsheet.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","startState","stringType","stack","token","stream","state","length","peek","next","unshift","eol","shift","match","indexOf","eatSpace","defineMIME"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"spreadsheet\", function () {\n    return {\n      startState: function () {\n        return {\n          stringType: null,\n          stack: []\n        };\n      },\n      token: function (stream, state) {\n        if (!stream) return;\n\n        //check for state changes\n        if (state.stack.length === 0) {\n          //strings\n          if ((stream.peek() == '\"') || (stream.peek() == \"'\")) {\n            state.stringType = stream.peek();\n            stream.next(); // Skip quote\n            state.stack.unshift(\"string\");\n          }\n        }\n\n        //return state\n        //stack has\n        switch (state.stack[0]) {\n        case \"string\":\n          while (state.stack[0] === \"string\" && !stream.eol()) {\n            if (stream.peek() === state.stringType) {\n              stream.next(); // Skip quote\n              state.stack.shift(); // Clear flag\n            } else if (stream.peek() === \"\\\\\") {\n              stream.next();\n              stream.next();\n            } else {\n              stream.match(/^.[^\\\\\\\"\\']*/);\n            }\n          }\n          return \"string\";\n\n        case \"characterClass\":\n          while (state.stack[0] === \"characterClass\" && !stream.eol()) {\n            if (!(stream.match(/^[^\\]\\\\]+/) || stream.match(/^\\\\./)))\n              state.stack.shift();\n          }\n          return \"operator\";\n        }\n\n        var peek = stream.peek();\n\n        //no stack\n        switch (peek) {\n        case \"[\":\n          stream.next();\n          state.stack.unshift(\"characterClass\");\n          return \"bracket\";\n        case \":\":\n          stream.next();\n          return \"operator\";\n        case \"\\\\\":\n          if (stream.match(/\\\\[a-z]+/)) return \"string-2\";\n          else {\n            stream.next();\n            return \"atom\";\n          }\n        case \".\":\n        case \",\":\n        case \";\":\n        case \"*\":\n        case \"-\":\n        case \"+\":\n        case \"^\":\n        case \"<\":\n        case \"/\":\n        case \"=\":\n          stream.next();\n          return \"atom\";\n        case \"$\":\n          stream.next();\n          return \"builtin\";\n        }\n\n        if (stream.match(/\\d+/)) {\n          if (stream.match(/^\\w+/)) return \"error\";\n          return \"number\";\n        } else if (stream.match(/^[a-zA-Z_]\\w*/)) {\n          if (stream.match(/(?=[\\(.])/, false)) return \"keyword\";\n          return \"variable-2\";\n        } else if ([\"[\", \"]\", \"(\", \")\", \"{\", \"}\"].indexOf(peek) != -1) {\n          stream.next();\n          return \"bracket\";\n        } else if (!stream.eatSpace()) {\n          stream.next();\n        }\n        return null;\n      }\n    };\n  });\n\n  CodeMirror.defineMIME(\"text/x-spreadsheet\", \"spreadsheet\");\n});\n"]},"metadata":{},"sourceType":"script"}