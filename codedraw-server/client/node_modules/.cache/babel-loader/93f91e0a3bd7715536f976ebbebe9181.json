{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode('mllike', function (_config, parserConfig) {\n    var words = {\n      'as': 'keyword',\n      'do': 'keyword',\n      'else': 'keyword',\n      'end': 'keyword',\n      'exception': 'keyword',\n      'fun': 'keyword',\n      'functor': 'keyword',\n      'if': 'keyword',\n      'in': 'keyword',\n      'include': 'keyword',\n      'let': 'keyword',\n      'of': 'keyword',\n      'open': 'keyword',\n      'rec': 'keyword',\n      'struct': 'keyword',\n      'then': 'keyword',\n      'type': 'keyword',\n      'val': 'keyword',\n      'while': 'keyword',\n      'with': 'keyword'\n    };\n    var extraWords = parserConfig.extraWords || {};\n\n    for (var prop in extraWords) {\n      if (extraWords.hasOwnProperty(prop)) {\n        words[prop] = parserConfig.extraWords[prop];\n      }\n    }\n\n    var hintWords = [];\n\n    for (var k in words) {\n      hintWords.push(k);\n    }\n\n    CodeMirror.registerHelper(\"hintWords\", \"mllike\", hintWords);\n\n    function tokenBase(stream, state) {\n      var ch = stream.next();\n\n      if (ch === '\"') {\n        state.tokenize = tokenString;\n        return state.tokenize(stream, state);\n      }\n\n      if (ch === '{') {\n        if (stream.eat('|')) {\n          state.longString = true;\n          state.tokenize = tokenLongString;\n          return state.tokenize(stream, state);\n        }\n      }\n\n      if (ch === '(') {\n        if (stream.eat('*')) {\n          state.commentLevel++;\n          state.tokenize = tokenComment;\n          return state.tokenize(stream, state);\n        }\n      }\n\n      if (ch === '~' || ch === '?') {\n        stream.eatWhile(/\\w/);\n        return 'variable-2';\n      }\n\n      if (ch === '`') {\n        stream.eatWhile(/\\w/);\n        return 'quote';\n      }\n\n      if (ch === '/' && parserConfig.slashComments && stream.eat('/')) {\n        stream.skipToEnd();\n        return 'comment';\n      }\n\n      if (/\\d/.test(ch)) {\n        if (ch === '0' && stream.eat(/[bB]/)) {\n          stream.eatWhile(/[01]/);\n        }\n\n        if (ch === '0' && stream.eat(/[xX]/)) {\n          stream.eatWhile(/[0-9a-fA-F]/);\n        }\n\n        if (ch === '0' && stream.eat(/[oO]/)) {\n          stream.eatWhile(/[0-7]/);\n        } else {\n          stream.eatWhile(/[\\d_]/);\n\n          if (stream.eat('.')) {\n            stream.eatWhile(/[\\d]/);\n          }\n\n          if (stream.eat(/[eE]/)) {\n            stream.eatWhile(/[\\d\\-+]/);\n          }\n        }\n\n        return 'number';\n      }\n\n      if (/[+\\-*&%=<>!?|@\\.~:]/.test(ch)) {\n        return 'operator';\n      }\n\n      if (/[\\w\\xa1-\\uffff]/.test(ch)) {\n        stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n        var cur = stream.current();\n        return words.hasOwnProperty(cur) ? words[cur] : 'variable';\n      }\n\n      return null;\n    }\n\n    function tokenString(stream, state) {\n      var next,\n          end = false,\n          escaped = false;\n\n      while ((next = stream.next()) != null) {\n        if (next === '\"' && !escaped) {\n          end = true;\n          break;\n        }\n\n        escaped = !escaped && next === '\\\\';\n      }\n\n      if (end && !escaped) {\n        state.tokenize = tokenBase;\n      }\n\n      return 'string';\n    }\n\n    ;\n\n    function tokenComment(stream, state) {\n      var prev, next;\n\n      while (state.commentLevel > 0 && (next = stream.next()) != null) {\n        if (prev === '(' && next === '*') state.commentLevel++;\n        if (prev === '*' && next === ')') state.commentLevel--;\n        prev = next;\n      }\n\n      if (state.commentLevel <= 0) {\n        state.tokenize = tokenBase;\n      }\n\n      return 'comment';\n    }\n\n    function tokenLongString(stream, state) {\n      var prev, next;\n\n      while (state.longString && (next = stream.next()) != null) {\n        if (prev === '|' && next === '}') state.longString = false;\n        prev = next;\n      }\n\n      if (!state.longString) {\n        state.tokenize = tokenBase;\n      }\n\n      return 'string';\n    }\n\n    return {\n      startState: function () {\n        return {\n          tokenize: tokenBase,\n          commentLevel: 0,\n          longString: false\n        };\n      },\n      token: function (stream, state) {\n        if (stream.eatSpace()) return null;\n        return state.tokenize(stream, state);\n      },\n      blockCommentStart: \"(*\",\n      blockCommentEnd: \"*)\",\n      lineComment: parserConfig.slashComments ? \"//\" : null\n    };\n  });\n  CodeMirror.defineMIME('text/x-ocaml', {\n    name: 'mllike',\n    extraWords: {\n      'and': 'keyword',\n      'assert': 'keyword',\n      'begin': 'keyword',\n      'class': 'keyword',\n      'constraint': 'keyword',\n      'done': 'keyword',\n      'downto': 'keyword',\n      'external': 'keyword',\n      'function': 'keyword',\n      'initializer': 'keyword',\n      'lazy': 'keyword',\n      'match': 'keyword',\n      'method': 'keyword',\n      'module': 'keyword',\n      'mutable': 'keyword',\n      'new': 'keyword',\n      'nonrec': 'keyword',\n      'object': 'keyword',\n      'private': 'keyword',\n      'sig': 'keyword',\n      'to': 'keyword',\n      'try': 'keyword',\n      'value': 'keyword',\n      'virtual': 'keyword',\n      'when': 'keyword',\n      // builtins\n      'raise': 'builtin',\n      'failwith': 'builtin',\n      'true': 'builtin',\n      'false': 'builtin',\n      // Pervasives builtins\n      'asr': 'builtin',\n      'land': 'builtin',\n      'lor': 'builtin',\n      'lsl': 'builtin',\n      'lsr': 'builtin',\n      'lxor': 'builtin',\n      'mod': 'builtin',\n      'or': 'builtin',\n      // More Pervasives\n      'raise_notrace': 'builtin',\n      'trace': 'builtin',\n      'exit': 'builtin',\n      'print_string': 'builtin',\n      'print_endline': 'builtin',\n      'int': 'type',\n      'float': 'type',\n      'bool': 'type',\n      'char': 'type',\n      'string': 'type',\n      'unit': 'type',\n      // Modules\n      'List': 'builtin'\n    }\n  });\n  CodeMirror.defineMIME('text/x-fsharp', {\n    name: 'mllike',\n    extraWords: {\n      'abstract': 'keyword',\n      'assert': 'keyword',\n      'base': 'keyword',\n      'begin': 'keyword',\n      'class': 'keyword',\n      'default': 'keyword',\n      'delegate': 'keyword',\n      'do!': 'keyword',\n      'done': 'keyword',\n      'downcast': 'keyword',\n      'downto': 'keyword',\n      'elif': 'keyword',\n      'extern': 'keyword',\n      'finally': 'keyword',\n      'for': 'keyword',\n      'function': 'keyword',\n      'global': 'keyword',\n      'inherit': 'keyword',\n      'inline': 'keyword',\n      'interface': 'keyword',\n      'internal': 'keyword',\n      'lazy': 'keyword',\n      'let!': 'keyword',\n      'match': 'keyword',\n      'member': 'keyword',\n      'module': 'keyword',\n      'mutable': 'keyword',\n      'namespace': 'keyword',\n      'new': 'keyword',\n      'null': 'keyword',\n      'override': 'keyword',\n      'private': 'keyword',\n      'public': 'keyword',\n      'return!': 'keyword',\n      'return': 'keyword',\n      'select': 'keyword',\n      'static': 'keyword',\n      'to': 'keyword',\n      'try': 'keyword',\n      'upcast': 'keyword',\n      'use!': 'keyword',\n      'use': 'keyword',\n      'void': 'keyword',\n      'when': 'keyword',\n      'yield!': 'keyword',\n      'yield': 'keyword',\n      // Reserved words\n      'atomic': 'keyword',\n      'break': 'keyword',\n      'checked': 'keyword',\n      'component': 'keyword',\n      'const': 'keyword',\n      'constraint': 'keyword',\n      'constructor': 'keyword',\n      'continue': 'keyword',\n      'eager': 'keyword',\n      'event': 'keyword',\n      'external': 'keyword',\n      'fixed': 'keyword',\n      'method': 'keyword',\n      'mixin': 'keyword',\n      'object': 'keyword',\n      'parallel': 'keyword',\n      'process': 'keyword',\n      'protected': 'keyword',\n      'pure': 'keyword',\n      'sealed': 'keyword',\n      'tailcall': 'keyword',\n      'trait': 'keyword',\n      'virtual': 'keyword',\n      'volatile': 'keyword',\n      // builtins\n      'List': 'builtin',\n      'Seq': 'builtin',\n      'Map': 'builtin',\n      'Set': 'builtin',\n      'Option': 'builtin',\n      'int': 'builtin',\n      'string': 'builtin',\n      'not': 'builtin',\n      'true': 'builtin',\n      'false': 'builtin',\n      'raise': 'builtin',\n      'failwith': 'builtin'\n    },\n    slashComments: true\n  });\n  CodeMirror.defineMIME('text/x-sml', {\n    name: 'mllike',\n    extraWords: {\n      'abstype': 'keyword',\n      'and': 'keyword',\n      'andalso': 'keyword',\n      'case': 'keyword',\n      'datatype': 'keyword',\n      'fn': 'keyword',\n      'handle': 'keyword',\n      'infix': 'keyword',\n      'infixr': 'keyword',\n      'local': 'keyword',\n      'nonfix': 'keyword',\n      'op': 'keyword',\n      'orelse': 'keyword',\n      'raise': 'keyword',\n      'withtype': 'keyword',\n      'eqtype': 'keyword',\n      'sharing': 'keyword',\n      'sig': 'keyword',\n      'signature': 'keyword',\n      'structure': 'keyword',\n      'where': 'keyword',\n      'true': 'keyword',\n      'false': 'keyword',\n      // types\n      'int': 'builtin',\n      'real': 'builtin',\n      'string': 'builtin',\n      'char': 'builtin',\n      'bool': 'builtin'\n    },\n    slashComments: true\n  });\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw-server/client/node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/mllike/mllike.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","_config","parserConfig","words","extraWords","prop","hasOwnProperty","hintWords","k","push","registerHelper","tokenBase","stream","state","ch","next","tokenize","tokenString","eat","longString","tokenLongString","commentLevel","tokenComment","eatWhile","slashComments","skipToEnd","test","cur","current","end","escaped","prev","startState","token","eatSpace","blockCommentStart","blockCommentEnd","lineComment","defineMIME","name"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('mllike', function(_config, parserConfig) {\n  var words = {\n    'as': 'keyword',\n    'do': 'keyword',\n    'else': 'keyword',\n    'end': 'keyword',\n    'exception': 'keyword',\n    'fun': 'keyword',\n    'functor': 'keyword',\n    'if': 'keyword',\n    'in': 'keyword',\n    'include': 'keyword',\n    'let': 'keyword',\n    'of': 'keyword',\n    'open': 'keyword',\n    'rec': 'keyword',\n    'struct': 'keyword',\n    'then': 'keyword',\n    'type': 'keyword',\n    'val': 'keyword',\n    'while': 'keyword',\n    'with': 'keyword'\n  };\n\n  var extraWords = parserConfig.extraWords || {};\n  for (var prop in extraWords) {\n    if (extraWords.hasOwnProperty(prop)) {\n      words[prop] = parserConfig.extraWords[prop];\n    }\n  }\n  var hintWords = [];\n  for (var k in words) { hintWords.push(k); }\n  CodeMirror.registerHelper(\"hintWords\", \"mllike\", hintWords);\n\n  function tokenBase(stream, state) {\n    var ch = stream.next();\n\n    if (ch === '\"') {\n      state.tokenize = tokenString;\n      return state.tokenize(stream, state);\n    }\n    if (ch === '{') {\n      if (stream.eat('|')) {\n        state.longString = true;\n        state.tokenize = tokenLongString;\n        return state.tokenize(stream, state);\n      }\n    }\n    if (ch === '(') {\n      if (stream.eat('*')) {\n        state.commentLevel++;\n        state.tokenize = tokenComment;\n        return state.tokenize(stream, state);\n      }\n    }\n    if (ch === '~' || ch === '?') {\n      stream.eatWhile(/\\w/);\n      return 'variable-2';\n    }\n    if (ch === '`') {\n      stream.eatWhile(/\\w/);\n      return 'quote';\n    }\n    if (ch === '/' && parserConfig.slashComments && stream.eat('/')) {\n      stream.skipToEnd();\n      return 'comment';\n    }\n    if (/\\d/.test(ch)) {\n      if (ch === '0' && stream.eat(/[bB]/)) {\n        stream.eatWhile(/[01]/);\n      } if (ch === '0' && stream.eat(/[xX]/)) {\n        stream.eatWhile(/[0-9a-fA-F]/)\n      } if (ch === '0' && stream.eat(/[oO]/)) {\n        stream.eatWhile(/[0-7]/);\n      } else {\n        stream.eatWhile(/[\\d_]/);\n        if (stream.eat('.')) {\n          stream.eatWhile(/[\\d]/);\n        }\n        if (stream.eat(/[eE]/)) {\n          stream.eatWhile(/[\\d\\-+]/);\n        }\n      }\n      return 'number';\n    }\n    if ( /[+\\-*&%=<>!?|@\\.~:]/.test(ch)) {\n      return 'operator';\n    }\n    if (/[\\w\\xa1-\\uffff]/.test(ch)) {\n      stream.eatWhile(/[\\w\\xa1-\\uffff]/);\n      var cur = stream.current();\n      return words.hasOwnProperty(cur) ? words[cur] : 'variable';\n    }\n    return null\n  }\n\n  function tokenString(stream, state) {\n    var next, end = false, escaped = false;\n    while ((next = stream.next()) != null) {\n      if (next === '\"' && !escaped) {\n        end = true;\n        break;\n      }\n      escaped = !escaped && next === '\\\\';\n    }\n    if (end && !escaped) {\n      state.tokenize = tokenBase;\n    }\n    return 'string';\n  };\n\n  function tokenComment(stream, state) {\n    var prev, next;\n    while(state.commentLevel > 0 && (next = stream.next()) != null) {\n      if (prev === '(' && next === '*') state.commentLevel++;\n      if (prev === '*' && next === ')') state.commentLevel--;\n      prev = next;\n    }\n    if (state.commentLevel <= 0) {\n      state.tokenize = tokenBase;\n    }\n    return 'comment';\n  }\n\n  function tokenLongString(stream, state) {\n    var prev, next;\n    while (state.longString && (next = stream.next()) != null) {\n      if (prev === '|' && next === '}') state.longString = false;\n      prev = next;\n    }\n    if (!state.longString) {\n      state.tokenize = tokenBase;\n    }\n    return 'string';\n  }\n\n  return {\n    startState: function() {return {tokenize: tokenBase, commentLevel: 0, longString: false};},\n    token: function(stream, state) {\n      if (stream.eatSpace()) return null;\n      return state.tokenize(stream, state);\n    },\n\n    blockCommentStart: \"(*\",\n    blockCommentEnd: \"*)\",\n    lineComment: parserConfig.slashComments ? \"//\" : null\n  };\n});\n\nCodeMirror.defineMIME('text/x-ocaml', {\n  name: 'mllike',\n  extraWords: {\n    'and': 'keyword',\n    'assert': 'keyword',\n    'begin': 'keyword',\n    'class': 'keyword',\n    'constraint': 'keyword',\n    'done': 'keyword',\n    'downto': 'keyword',\n    'external': 'keyword',\n    'function': 'keyword',\n    'initializer': 'keyword',\n    'lazy': 'keyword',\n    'match': 'keyword',\n    'method': 'keyword',\n    'module': 'keyword',\n    'mutable': 'keyword',\n    'new': 'keyword',\n    'nonrec': 'keyword',\n    'object': 'keyword',\n    'private': 'keyword',\n    'sig': 'keyword',\n    'to': 'keyword',\n    'try': 'keyword',\n    'value': 'keyword',\n    'virtual': 'keyword',\n    'when': 'keyword',\n\n    // builtins\n    'raise': 'builtin',\n    'failwith': 'builtin',\n    'true': 'builtin',\n    'false': 'builtin',\n\n    // Pervasives builtins\n    'asr': 'builtin',\n    'land': 'builtin',\n    'lor': 'builtin',\n    'lsl': 'builtin',\n    'lsr': 'builtin',\n    'lxor': 'builtin',\n    'mod': 'builtin',\n    'or': 'builtin',\n\n    // More Pervasives\n    'raise_notrace': 'builtin',\n    'trace': 'builtin',\n    'exit': 'builtin',\n    'print_string': 'builtin',\n    'print_endline': 'builtin',\n\n     'int': 'type',\n     'float': 'type',\n     'bool': 'type',\n     'char': 'type',\n     'string': 'type',\n     'unit': 'type',\n\n     // Modules\n     'List': 'builtin'\n  }\n});\n\nCodeMirror.defineMIME('text/x-fsharp', {\n  name: 'mllike',\n  extraWords: {\n    'abstract': 'keyword',\n    'assert': 'keyword',\n    'base': 'keyword',\n    'begin': 'keyword',\n    'class': 'keyword',\n    'default': 'keyword',\n    'delegate': 'keyword',\n    'do!': 'keyword',\n    'done': 'keyword',\n    'downcast': 'keyword',\n    'downto': 'keyword',\n    'elif': 'keyword',\n    'extern': 'keyword',\n    'finally': 'keyword',\n    'for': 'keyword',\n    'function': 'keyword',\n    'global': 'keyword',\n    'inherit': 'keyword',\n    'inline': 'keyword',\n    'interface': 'keyword',\n    'internal': 'keyword',\n    'lazy': 'keyword',\n    'let!': 'keyword',\n    'match': 'keyword',\n    'member': 'keyword',\n    'module': 'keyword',\n    'mutable': 'keyword',\n    'namespace': 'keyword',\n    'new': 'keyword',\n    'null': 'keyword',\n    'override': 'keyword',\n    'private': 'keyword',\n    'public': 'keyword',\n    'return!': 'keyword',\n    'return': 'keyword',\n    'select': 'keyword',\n    'static': 'keyword',\n    'to': 'keyword',\n    'try': 'keyword',\n    'upcast': 'keyword',\n    'use!': 'keyword',\n    'use': 'keyword',\n    'void': 'keyword',\n    'when': 'keyword',\n    'yield!': 'keyword',\n    'yield': 'keyword',\n\n    // Reserved words\n    'atomic': 'keyword',\n    'break': 'keyword',\n    'checked': 'keyword',\n    'component': 'keyword',\n    'const': 'keyword',\n    'constraint': 'keyword',\n    'constructor': 'keyword',\n    'continue': 'keyword',\n    'eager': 'keyword',\n    'event': 'keyword',\n    'external': 'keyword',\n    'fixed': 'keyword',\n    'method': 'keyword',\n    'mixin': 'keyword',\n    'object': 'keyword',\n    'parallel': 'keyword',\n    'process': 'keyword',\n    'protected': 'keyword',\n    'pure': 'keyword',\n    'sealed': 'keyword',\n    'tailcall': 'keyword',\n    'trait': 'keyword',\n    'virtual': 'keyword',\n    'volatile': 'keyword',\n\n    // builtins\n    'List': 'builtin',\n    'Seq': 'builtin',\n    'Map': 'builtin',\n    'Set': 'builtin',\n    'Option': 'builtin',\n    'int': 'builtin',\n    'string': 'builtin',\n    'not': 'builtin',\n    'true': 'builtin',\n    'false': 'builtin',\n\n    'raise': 'builtin',\n    'failwith': 'builtin'\n  },\n  slashComments: true\n});\n\n\nCodeMirror.defineMIME('text/x-sml', {\n  name: 'mllike',\n  extraWords: {\n    'abstype': 'keyword',\n    'and': 'keyword',\n    'andalso': 'keyword',\n    'case': 'keyword',\n    'datatype': 'keyword',\n    'fn': 'keyword',\n    'handle': 'keyword',\n    'infix': 'keyword',\n    'infixr': 'keyword',\n    'local': 'keyword',\n    'nonfix': 'keyword',\n    'op': 'keyword',\n    'orelse': 'keyword',\n    'raise': 'keyword',\n    'withtype': 'keyword',\n    'eqtype': 'keyword',\n    'sharing': 'keyword',\n    'sig': 'keyword',\n    'signature': 'keyword',\n    'structure': 'keyword',\n    'where': 'keyword',\n    'true': 'keyword',\n    'false': 'keyword',\n\n    // types\n    'int': 'builtin',\n    'real': 'builtin',\n    'string': 'builtin',\n    'char': 'builtin',\n    'bool': 'builtin'\n  },\n  slashComments: true\n});\n\n});\n"]},"metadata":{},"sourceType":"script"}