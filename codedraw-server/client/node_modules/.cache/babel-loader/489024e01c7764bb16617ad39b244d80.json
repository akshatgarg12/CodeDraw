{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/**\n * Link to the project's GitHub page:\n * https://github.com/duralog/CodeMirror\n */\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode('livescript', function () {\n    var tokenBase = function (stream, state) {\n      var next_rule = state.next || \"start\";\n\n      if (next_rule) {\n        state.next = state.next;\n        var nr = Rules[next_rule];\n\n        if (nr.splice) {\n          for (var i$ = 0; i$ < nr.length; ++i$) {\n            var r = nr[i$];\n\n            if (r.regex && stream.match(r.regex)) {\n              state.next = r.next || state.next;\n              return r.token;\n            }\n          }\n\n          stream.next();\n          return 'error';\n        }\n\n        if (stream.match(r = Rules[next_rule])) {\n          if (r.regex && stream.match(r.regex)) {\n            state.next = r.next;\n            return r.token;\n          } else {\n            stream.next();\n            return 'error';\n          }\n        }\n      }\n\n      stream.next();\n      return 'error';\n    };\n\n    var external = {\n      startState: function () {\n        return {\n          next: 'start',\n          lastToken: {\n            style: null,\n            indent: 0,\n            content: \"\"\n          }\n        };\n      },\n      token: function (stream, state) {\n        while (stream.pos == stream.start) var style = tokenBase(stream, state);\n\n        state.lastToken = {\n          style: style,\n          indent: stream.indentation(),\n          content: stream.current()\n        };\n        return style.replace(/\\./g, ' ');\n      },\n      indent: function (state) {\n        var indentation = state.lastToken.indent;\n\n        if (state.lastToken.content.match(indenter)) {\n          indentation += 2;\n        }\n\n        return indentation;\n      }\n    };\n    return external;\n  });\n  var identifier = '(?![\\\\d\\\\s])[$\\\\w\\\\xAA-\\\\uFFDC](?:(?!\\\\s)[$\\\\w\\\\xAA-\\\\uFFDC]|-[A-Za-z])*';\n  var indenter = RegExp('(?:[({[=:]|[-~]>|\\\\b(?:e(?:lse|xport)|d(?:o|efault)|t(?:ry|hen)|finally|import(?:\\\\s*all)?|const|var|let|new|catch(?:\\\\s*' + identifier + ')?))\\\\s*$');\n  var keywordend = '(?![$\\\\w]|-[A-Za-z]|\\\\s*:(?![:=]))';\n  var stringfill = {\n    token: 'string',\n    regex: '.+'\n  };\n  var Rules = {\n    start: [{\n      token: 'comment.doc',\n      regex: '/\\\\*',\n      next: 'comment'\n    }, {\n      token: 'comment',\n      regex: '#.*'\n    }, {\n      token: 'keyword',\n      regex: '(?:t(?:h(?:is|row|en)|ry|ypeof!?)|c(?:on(?:tinue|st)|a(?:se|tch)|lass)|i(?:n(?:stanceof)?|mp(?:ort(?:\\\\s+all)?|lements)|[fs])|d(?:e(?:fault|lete|bugger)|o)|f(?:or(?:\\\\s+own)?|inally|unction)|s(?:uper|witch)|e(?:lse|x(?:tends|port)|val)|a(?:nd|rguments)|n(?:ew|ot)|un(?:less|til)|w(?:hile|ith)|o[fr]|return|break|let|var|loop)' + keywordend\n    }, {\n      token: 'constant.language',\n      regex: '(?:true|false|yes|no|on|off|null|void|undefined)' + keywordend\n    }, {\n      token: 'invalid.illegal',\n      regex: '(?:p(?:ackage|r(?:ivate|otected)|ublic)|i(?:mplements|nterface)|enum|static|yield)' + keywordend\n    }, {\n      token: 'language.support.class',\n      regex: '(?:R(?:e(?:gExp|ferenceError)|angeError)|S(?:tring|yntaxError)|E(?:rror|valError)|Array|Boolean|Date|Function|Number|Object|TypeError|URIError)' + keywordend\n    }, {\n      token: 'language.support.function',\n      regex: '(?:is(?:NaN|Finite)|parse(?:Int|Float)|Math|JSON|(?:en|de)codeURI(?:Component)?)' + keywordend\n    }, {\n      token: 'variable.language',\n      regex: '(?:t(?:hat|il|o)|f(?:rom|allthrough)|it|by|e)' + keywordend\n    }, {\n      token: 'identifier',\n      regex: identifier + '\\\\s*:(?![:=])'\n    }, {\n      token: 'variable',\n      regex: identifier\n    }, {\n      token: 'keyword.operator',\n      regex: '(?:\\\\.{3}|\\\\s+\\\\?)'\n    }, {\n      token: 'keyword.variable',\n      regex: '(?:@+|::|\\\\.\\\\.)',\n      next: 'key'\n    }, {\n      token: 'keyword.operator',\n      regex: '\\\\.\\\\s*',\n      next: 'key'\n    }, {\n      token: 'string',\n      regex: '\\\\\\\\\\\\S[^\\\\s,;)}\\\\]]*'\n    }, {\n      token: 'string.doc',\n      regex: '\\'\\'\\'',\n      next: 'qdoc'\n    }, {\n      token: 'string.doc',\n      regex: '\"\"\"',\n      next: 'qqdoc'\n    }, {\n      token: 'string',\n      regex: '\\'',\n      next: 'qstring'\n    }, {\n      token: 'string',\n      regex: '\"',\n      next: 'qqstring'\n    }, {\n      token: 'string',\n      regex: '`',\n      next: 'js'\n    }, {\n      token: 'string',\n      regex: '<\\\\[',\n      next: 'words'\n    }, {\n      token: 'string.regex',\n      regex: '//',\n      next: 'heregex'\n    }, {\n      token: 'string.regex',\n      regex: '\\\\/(?:[^[\\\\/\\\\n\\\\\\\\]*(?:(?:\\\\\\\\.|\\\\[[^\\\\]\\\\n\\\\\\\\]*(?:\\\\\\\\.[^\\\\]\\\\n\\\\\\\\]*)*\\\\])[^[\\\\/\\\\n\\\\\\\\]*)*)\\\\/[gimy$]{0,4}',\n      next: 'key'\n    }, {\n      token: 'constant.numeric',\n      regex: '(?:0x[\\\\da-fA-F][\\\\da-fA-F_]*|(?:[2-9]|[12]\\\\d|3[0-6])r[\\\\da-zA-Z][\\\\da-zA-Z_]*|(?:\\\\d[\\\\d_]*(?:\\\\.\\\\d[\\\\d_]*)?|\\\\.\\\\d[\\\\d_]*)(?:e[+-]?\\\\d[\\\\d_]*)?[\\\\w$]*)'\n    }, {\n      token: 'lparen',\n      regex: '[({[]'\n    }, {\n      token: 'rparen',\n      regex: '[)}\\\\]]',\n      next: 'key'\n    }, {\n      token: 'keyword.operator',\n      regex: '\\\\S+'\n    }, {\n      token: 'text',\n      regex: '\\\\s+'\n    }],\n    heregex: [{\n      token: 'string.regex',\n      regex: '.*?//[gimy$?]{0,4}',\n      next: 'start'\n    }, {\n      token: 'string.regex',\n      regex: '\\\\s*#{'\n    }, {\n      token: 'comment.regex',\n      regex: '\\\\s+(?:#.*)?'\n    }, {\n      token: 'string.regex',\n      regex: '\\\\S+'\n    }],\n    key: [{\n      token: 'keyword.operator',\n      regex: '[.?@!]+'\n    }, {\n      token: 'identifier',\n      regex: identifier,\n      next: 'start'\n    }, {\n      token: 'text',\n      regex: '',\n      next: 'start'\n    }],\n    comment: [{\n      token: 'comment.doc',\n      regex: '.*?\\\\*/',\n      next: 'start'\n    }, {\n      token: 'comment.doc',\n      regex: '.+'\n    }],\n    qdoc: [{\n      token: 'string',\n      regex: \".*?'''\",\n      next: 'key'\n    }, stringfill],\n    qqdoc: [{\n      token: 'string',\n      regex: '.*?\"\"\"',\n      next: 'key'\n    }, stringfill],\n    qstring: [{\n      token: 'string',\n      regex: '[^\\\\\\\\\\']*(?:\\\\\\\\.[^\\\\\\\\\\']*)*\\'',\n      next: 'key'\n    }, stringfill],\n    qqstring: [{\n      token: 'string',\n      regex: '[^\\\\\\\\\"]*(?:\\\\\\\\.[^\\\\\\\\\"]*)*\"',\n      next: 'key'\n    }, stringfill],\n    js: [{\n      token: 'string',\n      regex: '[^\\\\\\\\`]*(?:\\\\\\\\.[^\\\\\\\\`]*)*`',\n      next: 'key'\n    }, stringfill],\n    words: [{\n      token: 'string',\n      regex: '.*?\\\\]>',\n      next: 'key'\n    }, stringfill]\n  };\n\n  for (var idx in Rules) {\n    var r = Rules[idx];\n\n    if (r.splice) {\n      for (var i = 0, len = r.length; i < len; ++i) {\n        var rr = r[i];\n\n        if (typeof rr.regex === 'string') {\n          Rules[idx][i].regex = new RegExp('^' + rr.regex);\n        }\n      }\n    } else if (typeof rr.regex === 'string') {\n      Rules[idx].regex = new RegExp('^' + r.regex);\n    }\n  }\n\n  CodeMirror.defineMIME('text/x-livescript', 'livescript');\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw-server/client/node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/livescript/livescript.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","tokenBase","stream","state","next_rule","next","nr","Rules","splice","i$","length","r","regex","match","token","external","startState","lastToken","style","indent","content","pos","start","indentation","current","replace","indenter","identifier","RegExp","keywordend","stringfill","heregex","key","comment","qdoc","qqdoc","qstring","qqstring","js","words","idx","i","len","rr","defineMIME"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n/**\n * Link to the project's GitHub page:\n * https://github.com/duralog/CodeMirror\n */\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode('livescript', function(){\n    var tokenBase = function(stream, state) {\n      var next_rule = state.next || \"start\";\n      if (next_rule) {\n        state.next = state.next;\n        var nr = Rules[next_rule];\n        if (nr.splice) {\n          for (var i$ = 0; i$ < nr.length; ++i$) {\n            var r = nr[i$];\n            if (r.regex && stream.match(r.regex)) {\n              state.next = r.next || state.next;\n              return r.token;\n            }\n          }\n          stream.next();\n          return 'error';\n        }\n        if (stream.match(r = Rules[next_rule])) {\n          if (r.regex && stream.match(r.regex)) {\n            state.next = r.next;\n            return r.token;\n          } else {\n            stream.next();\n            return 'error';\n          }\n        }\n      }\n      stream.next();\n      return 'error';\n    };\n    var external = {\n      startState: function(){\n        return {\n          next: 'start',\n          lastToken: {style: null, indent: 0, content: \"\"}\n        };\n      },\n      token: function(stream, state){\n        while (stream.pos == stream.start)\n          var style = tokenBase(stream, state);\n        state.lastToken = {\n          style: style,\n          indent: stream.indentation(),\n          content: stream.current()\n        };\n        return style.replace(/\\./g, ' ');\n      },\n      indent: function(state){\n        var indentation = state.lastToken.indent;\n        if (state.lastToken.content.match(indenter)) {\n          indentation += 2;\n        }\n        return indentation;\n      }\n    };\n    return external;\n  });\n\n  var identifier = '(?![\\\\d\\\\s])[$\\\\w\\\\xAA-\\\\uFFDC](?:(?!\\\\s)[$\\\\w\\\\xAA-\\\\uFFDC]|-[A-Za-z])*';\n  var indenter = RegExp('(?:[({[=:]|[-~]>|\\\\b(?:e(?:lse|xport)|d(?:o|efault)|t(?:ry|hen)|finally|import(?:\\\\s*all)?|const|var|let|new|catch(?:\\\\s*' + identifier + ')?))\\\\s*$');\n  var keywordend = '(?![$\\\\w]|-[A-Za-z]|\\\\s*:(?![:=]))';\n  var stringfill = {\n    token: 'string',\n    regex: '.+'\n  };\n  var Rules = {\n    start: [\n      {\n        token: 'comment.doc',\n        regex: '/\\\\*',\n        next: 'comment'\n      }, {\n        token: 'comment',\n        regex: '#.*'\n      }, {\n        token: 'keyword',\n        regex: '(?:t(?:h(?:is|row|en)|ry|ypeof!?)|c(?:on(?:tinue|st)|a(?:se|tch)|lass)|i(?:n(?:stanceof)?|mp(?:ort(?:\\\\s+all)?|lements)|[fs])|d(?:e(?:fault|lete|bugger)|o)|f(?:or(?:\\\\s+own)?|inally|unction)|s(?:uper|witch)|e(?:lse|x(?:tends|port)|val)|a(?:nd|rguments)|n(?:ew|ot)|un(?:less|til)|w(?:hile|ith)|o[fr]|return|break|let|var|loop)' + keywordend\n      }, {\n        token: 'constant.language',\n        regex: '(?:true|false|yes|no|on|off|null|void|undefined)' + keywordend\n      }, {\n        token: 'invalid.illegal',\n        regex: '(?:p(?:ackage|r(?:ivate|otected)|ublic)|i(?:mplements|nterface)|enum|static|yield)' + keywordend\n      }, {\n        token: 'language.support.class',\n        regex: '(?:R(?:e(?:gExp|ferenceError)|angeError)|S(?:tring|yntaxError)|E(?:rror|valError)|Array|Boolean|Date|Function|Number|Object|TypeError|URIError)' + keywordend\n      }, {\n        token: 'language.support.function',\n        regex: '(?:is(?:NaN|Finite)|parse(?:Int|Float)|Math|JSON|(?:en|de)codeURI(?:Component)?)' + keywordend\n      }, {\n        token: 'variable.language',\n        regex: '(?:t(?:hat|il|o)|f(?:rom|allthrough)|it|by|e)' + keywordend\n      }, {\n        token: 'identifier',\n        regex: identifier + '\\\\s*:(?![:=])'\n      }, {\n        token: 'variable',\n        regex: identifier\n      }, {\n        token: 'keyword.operator',\n        regex: '(?:\\\\.{3}|\\\\s+\\\\?)'\n      }, {\n        token: 'keyword.variable',\n        regex: '(?:@+|::|\\\\.\\\\.)',\n        next: 'key'\n      }, {\n        token: 'keyword.operator',\n        regex: '\\\\.\\\\s*',\n        next: 'key'\n      }, {\n        token: 'string',\n        regex: '\\\\\\\\\\\\S[^\\\\s,;)}\\\\]]*'\n      }, {\n        token: 'string.doc',\n        regex: '\\'\\'\\'',\n        next: 'qdoc'\n      }, {\n        token: 'string.doc',\n        regex: '\"\"\"',\n        next: 'qqdoc'\n      }, {\n        token: 'string',\n        regex: '\\'',\n        next: 'qstring'\n      }, {\n        token: 'string',\n        regex: '\"',\n        next: 'qqstring'\n      }, {\n        token: 'string',\n        regex: '`',\n        next: 'js'\n      }, {\n        token: 'string',\n        regex: '<\\\\[',\n        next: 'words'\n      }, {\n        token: 'string.regex',\n        regex: '//',\n        next: 'heregex'\n      }, {\n        token: 'string.regex',\n        regex: '\\\\/(?:[^[\\\\/\\\\n\\\\\\\\]*(?:(?:\\\\\\\\.|\\\\[[^\\\\]\\\\n\\\\\\\\]*(?:\\\\\\\\.[^\\\\]\\\\n\\\\\\\\]*)*\\\\])[^[\\\\/\\\\n\\\\\\\\]*)*)\\\\/[gimy$]{0,4}',\n        next: 'key'\n      }, {\n        token: 'constant.numeric',\n        regex: '(?:0x[\\\\da-fA-F][\\\\da-fA-F_]*|(?:[2-9]|[12]\\\\d|3[0-6])r[\\\\da-zA-Z][\\\\da-zA-Z_]*|(?:\\\\d[\\\\d_]*(?:\\\\.\\\\d[\\\\d_]*)?|\\\\.\\\\d[\\\\d_]*)(?:e[+-]?\\\\d[\\\\d_]*)?[\\\\w$]*)'\n      }, {\n        token: 'lparen',\n        regex: '[({[]'\n      }, {\n        token: 'rparen',\n        regex: '[)}\\\\]]',\n        next: 'key'\n      }, {\n        token: 'keyword.operator',\n        regex: '\\\\S+'\n      }, {\n        token: 'text',\n        regex: '\\\\s+'\n      }\n    ],\n    heregex: [\n      {\n        token: 'string.regex',\n        regex: '.*?//[gimy$?]{0,4}',\n        next: 'start'\n      }, {\n        token: 'string.regex',\n        regex: '\\\\s*#{'\n      }, {\n        token: 'comment.regex',\n        regex: '\\\\s+(?:#.*)?'\n      }, {\n        token: 'string.regex',\n        regex: '\\\\S+'\n      }\n    ],\n    key: [\n      {\n        token: 'keyword.operator',\n        regex: '[.?@!]+'\n      }, {\n        token: 'identifier',\n        regex: identifier,\n        next: 'start'\n      }, {\n        token: 'text',\n        regex: '',\n        next: 'start'\n      }\n    ],\n    comment: [\n      {\n        token: 'comment.doc',\n        regex: '.*?\\\\*/',\n        next: 'start'\n      }, {\n        token: 'comment.doc',\n        regex: '.+'\n      }\n    ],\n    qdoc: [\n      {\n        token: 'string',\n        regex: \".*?'''\",\n        next: 'key'\n      }, stringfill\n    ],\n    qqdoc: [\n      {\n        token: 'string',\n        regex: '.*?\"\"\"',\n        next: 'key'\n      }, stringfill\n    ],\n    qstring: [\n      {\n        token: 'string',\n        regex: '[^\\\\\\\\\\']*(?:\\\\\\\\.[^\\\\\\\\\\']*)*\\'',\n        next: 'key'\n      }, stringfill\n    ],\n    qqstring: [\n      {\n        token: 'string',\n        regex: '[^\\\\\\\\\"]*(?:\\\\\\\\.[^\\\\\\\\\"]*)*\"',\n        next: 'key'\n      }, stringfill\n    ],\n    js: [\n      {\n        token: 'string',\n        regex: '[^\\\\\\\\`]*(?:\\\\\\\\.[^\\\\\\\\`]*)*`',\n        next: 'key'\n      }, stringfill\n    ],\n    words: [\n      {\n        token: 'string',\n        regex: '.*?\\\\]>',\n        next: 'key'\n      }, stringfill\n    ]\n  };\n  for (var idx in Rules) {\n    var r = Rules[idx];\n    if (r.splice) {\n      for (var i = 0, len = r.length; i < len; ++i) {\n        var rr = r[i];\n        if (typeof rr.regex === 'string') {\n          Rules[idx][i].regex = new RegExp('^' + rr.regex);\n        }\n      }\n    } else if (typeof rr.regex === 'string') {\n      Rules[idx].regex = new RegExp('^' + r.regex);\n    }\n  }\n\n  CodeMirror.defineMIME('text/x-livescript', 'livescript');\n\n});\n"]},"metadata":{},"sourceType":"script"}