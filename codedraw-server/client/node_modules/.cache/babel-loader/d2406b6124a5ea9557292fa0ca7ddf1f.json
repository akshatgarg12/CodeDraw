{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../python/python\"), require(\"../stex/stex\"), require(\"../../addon/mode/overlay\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../python/python\", \"../stex/stex\", \"../../addon/mode/overlay\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode('rst', function (config, options) {\n    var rx_strong = /^\\*\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*\\*/;\n    var rx_emphasis = /^\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*/;\n    var rx_literal = /^``[^`\\s](?:[^`]*[^`\\s])``/;\n    var rx_number = /^(?:[\\d]+(?:[\\.,]\\d+)*)/;\n    var rx_positive = /^(?:\\s\\+[\\d]+(?:[\\.,]\\d+)*)/;\n    var rx_negative = /^(?:\\s\\-[\\d]+(?:[\\.,]\\d+)*)/;\n    var rx_uri_protocol = \"[Hh][Tt][Tt][Pp][Ss]?://\";\n    var rx_uri_domain = \"(?:[\\\\d\\\\w.-]+)\\\\.(?:\\\\w{2,6})\";\n    var rx_uri_path = \"(?:/[\\\\d\\\\w\\\\#\\\\%\\\\&\\\\-\\\\.\\\\,\\\\/\\\\:\\\\=\\\\?\\\\~]+)*\";\n    var rx_uri = new RegExp(\"^\" + rx_uri_protocol + rx_uri_domain + rx_uri_path);\n    var overlay = {\n      token: function (stream) {\n        if (stream.match(rx_strong) && stream.match(/\\W+|$/, false)) return 'strong';\n        if (stream.match(rx_emphasis) && stream.match(/\\W+|$/, false)) return 'em';\n        if (stream.match(rx_literal) && stream.match(/\\W+|$/, false)) return 'string-2';\n        if (stream.match(rx_number)) return 'number';\n        if (stream.match(rx_positive)) return 'positive';\n        if (stream.match(rx_negative)) return 'negative';\n        if (stream.match(rx_uri)) return 'link';\n\n        while (stream.next() != null) {\n          if (stream.match(rx_strong, false)) break;\n          if (stream.match(rx_emphasis, false)) break;\n          if (stream.match(rx_literal, false)) break;\n          if (stream.match(rx_number, false)) break;\n          if (stream.match(rx_positive, false)) break;\n          if (stream.match(rx_negative, false)) break;\n          if (stream.match(rx_uri, false)) break;\n        }\n\n        return null;\n      }\n    };\n    var mode = CodeMirror.getMode(config, options.backdrop || 'rst-base');\n    return CodeMirror.overlayMode(mode, overlay, true); // combine\n  }, 'python', 'stex'); ///////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////\n\n  CodeMirror.defineMode('rst-base', function (config) {\n    ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n    function format(string) {\n      var args = Array.prototype.slice.call(arguments, 1);\n      return string.replace(/{(\\d+)}/g, function (match, n) {\n        return typeof args[n] != 'undefined' ? args[n] : match;\n      });\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    var mode_python = CodeMirror.getMode(config, 'python');\n    var mode_stex = CodeMirror.getMode(config, 'stex'); ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    var SEPA = \"\\\\s+\";\n    var TAIL = \"(?:\\\\s*|\\\\W|$)\",\n        rx_TAIL = new RegExp(format('^{0}', TAIL));\n    var NAME = \"(?:[^\\\\W\\\\d_](?:[\\\\w!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\",\n        rx_NAME = new RegExp(format('^{0}', NAME));\n    var NAME_WWS = \"(?:[^\\\\W\\\\d_](?:[\\\\w\\\\s!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\";\n    var REF_NAME = format('(?:{0}|`{1}`)', NAME, NAME_WWS);\n    var TEXT1 = \"(?:[^\\\\s\\\\|](?:[^\\\\|]*[^\\\\s\\\\|])?)\";\n    var TEXT2 = \"(?:[^\\\\`]+)\",\n        rx_TEXT2 = new RegExp(format('^{0}', TEXT2));\n    var rx_section = new RegExp(\"^([!'#$%&\\\"()*+,-./:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\1{3,}\\\\s*$\");\n    var rx_explicit = new RegExp(format('^\\\\.\\\\.{0}', SEPA));\n    var rx_link = new RegExp(format('^_{0}:{1}|^__:{1}', REF_NAME, TAIL));\n    var rx_directive = new RegExp(format('^{0}::{1}', REF_NAME, TAIL));\n    var rx_substitution = new RegExp(format('^\\\\|{0}\\\\|{1}{2}::{3}', TEXT1, SEPA, REF_NAME, TAIL));\n    var rx_footnote = new RegExp(format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]{1}', REF_NAME, TAIL));\n    var rx_citation = new RegExp(format('^\\\\[{0}\\\\]{1}', REF_NAME, TAIL));\n    var rx_substitution_ref = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n    var rx_footnote_ref = new RegExp(format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]_', REF_NAME));\n    var rx_citation_ref = new RegExp(format('^\\\\[{0}\\\\]_', REF_NAME));\n    var rx_link_ref1 = new RegExp(format('^{0}__?', REF_NAME));\n    var rx_link_ref2 = new RegExp(format('^`{0}`_', TEXT2));\n    var rx_role_pre = new RegExp(format('^:{0}:`{1}`{2}', NAME, TEXT2, TAIL));\n    var rx_role_suf = new RegExp(format('^`{1}`:{0}:{2}', NAME, TEXT2, TAIL));\n    var rx_role = new RegExp(format('^:{0}:{1}', NAME, TAIL));\n    var rx_directive_name = new RegExp(format('^{0}', REF_NAME));\n    var rx_directive_tail = new RegExp(format('^::{0}', TAIL));\n    var rx_substitution_text = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n    var rx_substitution_sepa = new RegExp(format('^{0}', SEPA));\n    var rx_substitution_name = new RegExp(format('^{0}', REF_NAME));\n    var rx_substitution_tail = new RegExp(format('^::{0}', TAIL));\n    var rx_link_head = new RegExp(\"^_\");\n    var rx_link_name = new RegExp(format('^{0}|_', REF_NAME));\n    var rx_link_tail = new RegExp(format('^:{0}', TAIL));\n    var rx_verbatim = new RegExp('^::\\\\s*$');\n    var rx_examples = new RegExp('^\\\\s+(?:>>>|In \\\\[\\\\d+\\\\]:)\\\\s'); ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n    function to_normal(stream, state) {\n      var token = null;\n\n      if (stream.sol() && stream.match(rx_examples, false)) {\n        change(state, to_mode, {\n          mode: mode_python,\n          local: CodeMirror.startState(mode_python)\n        });\n      } else if (stream.sol() && stream.match(rx_explicit)) {\n        change(state, to_explicit);\n        token = 'meta';\n      } else if (stream.sol() && stream.match(rx_section)) {\n        change(state, to_normal);\n        token = 'header';\n      } else if (phase(state) == rx_role_pre || stream.match(rx_role_pre, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_role_pre, 1));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_role_pre, 2));\n            stream.match(rx_NAME);\n            token = 'keyword';\n\n            if (stream.current().match(/^(?:math|latex)/)) {\n              state.tmp_stex = true;\n            }\n\n            break;\n\n          case 2:\n            change(state, to_normal, context(rx_role_pre, 3));\n            stream.match(/^:`/);\n            token = 'meta';\n            break;\n\n          case 3:\n            if (state.tmp_stex) {\n              state.tmp_stex = undefined;\n              state.tmp = {\n                mode: mode_stex,\n                local: CodeMirror.startState(mode_stex)\n              };\n            }\n\n            if (state.tmp) {\n              if (stream.peek() == '`') {\n                change(state, to_normal, context(rx_role_pre, 4));\n                state.tmp = undefined;\n                break;\n              }\n\n              token = state.tmp.mode.token(stream, state.tmp.local);\n              break;\n            }\n\n            change(state, to_normal, context(rx_role_pre, 4));\n            stream.match(rx_TEXT2);\n            token = 'string';\n            break;\n\n          case 4:\n            change(state, to_normal, context(rx_role_pre, 5));\n            stream.match(/^`/);\n            token = 'meta';\n            break;\n\n          case 5:\n            change(state, to_normal, context(rx_role_pre, 6));\n            stream.match(rx_TAIL);\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_role_suf || stream.match(rx_role_suf, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_role_suf, 1));\n            stream.match(/^`/);\n            token = 'meta';\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_role_suf, 2));\n            stream.match(rx_TEXT2);\n            token = 'string';\n            break;\n\n          case 2:\n            change(state, to_normal, context(rx_role_suf, 3));\n            stream.match(/^`:/);\n            token = 'meta';\n            break;\n\n          case 3:\n            change(state, to_normal, context(rx_role_suf, 4));\n            stream.match(rx_NAME);\n            token = 'keyword';\n            break;\n\n          case 4:\n            change(state, to_normal, context(rx_role_suf, 5));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n\n          case 5:\n            change(state, to_normal, context(rx_role_suf, 6));\n            stream.match(rx_TAIL);\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_role || stream.match(rx_role, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_role, 1));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_role, 2));\n            stream.match(rx_NAME);\n            token = 'keyword';\n            break;\n\n          case 2:\n            change(state, to_normal, context(rx_role, 3));\n            stream.match(/^:/);\n            token = 'meta';\n            break;\n\n          case 3:\n            change(state, to_normal, context(rx_role, 4));\n            stream.match(rx_TAIL);\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_substitution_ref || stream.match(rx_substitution_ref, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_normal, context(rx_substitution_ref, 1));\n            stream.match(rx_substitution_text);\n            token = 'variable-2';\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_substitution_ref, 2));\n            if (stream.match(/^_?_?/)) token = 'link';\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (stream.match(rx_footnote_ref)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else if (stream.match(rx_citation_ref)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else if (stream.match(rx_link_ref1)) {\n        change(state, to_normal);\n\n        if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n          token = 'link';\n        }\n      } else if (phase(state) == rx_link_ref2 || stream.match(rx_link_ref2, false)) {\n        switch (stage(state)) {\n          case 0:\n            if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n              change(state, to_normal, context(rx_link_ref2, 1));\n            } else {\n              stream.match(rx_link_ref2);\n            }\n\n            break;\n\n          case 1:\n            change(state, to_normal, context(rx_link_ref2, 2));\n            stream.match(/^`/);\n            token = 'link';\n            break;\n\n          case 2:\n            change(state, to_normal, context(rx_link_ref2, 3));\n            stream.match(rx_TEXT2);\n            break;\n\n          case 3:\n            change(state, to_normal, context(rx_link_ref2, 4));\n            stream.match(/^`_/);\n            token = 'link';\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (stream.match(rx_verbatim)) {\n        change(state, to_verbatim);\n      } else {\n        if (stream.next()) change(state, to_normal);\n      }\n\n      return token;\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    function to_explicit(stream, state) {\n      var token = null;\n\n      if (phase(state) == rx_substitution || stream.match(rx_substitution, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_explicit, context(rx_substitution, 1));\n            stream.match(rx_substitution_text);\n            token = 'variable-2';\n            break;\n\n          case 1:\n            change(state, to_explicit, context(rx_substitution, 2));\n            stream.match(rx_substitution_sepa);\n            break;\n\n          case 2:\n            change(state, to_explicit, context(rx_substitution, 3));\n            stream.match(rx_substitution_name);\n            token = 'keyword';\n            break;\n\n          case 3:\n            change(state, to_explicit, context(rx_substitution, 4));\n            stream.match(rx_substitution_tail);\n            token = 'meta';\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_directive || stream.match(rx_directive, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_explicit, context(rx_directive, 1));\n            stream.match(rx_directive_name);\n            token = 'keyword';\n            if (stream.current().match(/^(?:math|latex)/)) state.tmp_stex = true;else if (stream.current().match(/^python/)) state.tmp_py = true;\n            break;\n\n          case 1:\n            change(state, to_explicit, context(rx_directive, 2));\n            stream.match(rx_directive_tail);\n            token = 'meta';\n\n            if (stream.match(/^latex\\s*$/) || state.tmp_stex) {\n              state.tmp_stex = undefined;\n              change(state, to_mode, {\n                mode: mode_stex,\n                local: CodeMirror.startState(mode_stex)\n              });\n            }\n\n            break;\n\n          case 2:\n            change(state, to_explicit, context(rx_directive, 3));\n\n            if (stream.match(/^python\\s*$/) || state.tmp_py) {\n              state.tmp_py = undefined;\n              change(state, to_mode, {\n                mode: mode_python,\n                local: CodeMirror.startState(mode_python)\n              });\n            }\n\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (phase(state) == rx_link || stream.match(rx_link, false)) {\n        switch (stage(state)) {\n          case 0:\n            change(state, to_explicit, context(rx_link, 1));\n            stream.match(rx_link_head);\n            stream.match(rx_link_name);\n            token = 'link';\n            break;\n\n          case 1:\n            change(state, to_explicit, context(rx_link, 2));\n            stream.match(rx_link_tail);\n            token = 'meta';\n            break;\n\n          default:\n            change(state, to_normal);\n        }\n      } else if (stream.match(rx_footnote)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else if (stream.match(rx_citation)) {\n        change(state, to_normal);\n        token = 'quote';\n      } else {\n        stream.eatSpace();\n\n        if (stream.eol()) {\n          change(state, to_normal);\n        } else {\n          stream.skipToEnd();\n          change(state, to_comment);\n          token = 'comment';\n        }\n      }\n\n      return token;\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    function to_comment(stream, state) {\n      return as_block(stream, state, 'comment');\n    }\n\n    function to_verbatim(stream, state) {\n      return as_block(stream, state, 'meta');\n    }\n\n    function as_block(stream, state, token) {\n      if (stream.eol() || stream.eatSpace()) {\n        stream.skipToEnd();\n        return token;\n      } else {\n        change(state, to_normal);\n        return null;\n      }\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    function to_mode(stream, state) {\n      if (state.ctx.mode && state.ctx.local) {\n        if (stream.sol()) {\n          if (!stream.eatSpace()) change(state, to_normal);\n          return null;\n        }\n\n        return state.ctx.mode.token(stream, state.ctx.local);\n      }\n\n      change(state, to_normal);\n      return null;\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    function context(phase, stage, mode, local) {\n      return {\n        phase: phase,\n        stage: stage,\n        mode: mode,\n        local: local\n      };\n    }\n\n    function change(state, tok, ctx) {\n      state.tok = tok;\n      state.ctx = ctx || {};\n    }\n\n    function stage(state) {\n      return state.ctx.stage || 0;\n    }\n\n    function phase(state) {\n      return state.ctx.phase;\n    } ///////////////////////////////////////////////////////////////////////////\n    ///////////////////////////////////////////////////////////////////////////\n\n\n    return {\n      startState: function () {\n        return {\n          tok: to_normal,\n          ctx: context(undefined, 0)\n        };\n      },\n      copyState: function (state) {\n        var ctx = state.ctx,\n            tmp = state.tmp;\n        if (ctx.local) ctx = {\n          mode: ctx.mode,\n          local: CodeMirror.copyState(ctx.mode, ctx.local)\n        };\n        if (tmp) tmp = {\n          mode: tmp.mode,\n          local: CodeMirror.copyState(tmp.mode, tmp.local)\n        };\n        return {\n          tok: state.tok,\n          ctx: ctx,\n          tmp: tmp\n        };\n      },\n      innerMode: function (state) {\n        return state.tmp ? {\n          state: state.tmp.local,\n          mode: state.tmp.mode\n        } : state.ctx.mode ? {\n          state: state.ctx.local,\n          mode: state.ctx.mode\n        } : null;\n      },\n      token: function (stream, state) {\n        return state.tok(stream, state);\n      }\n    };\n  }, 'python', 'stex'); ///////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////\n\n  CodeMirror.defineMIME('text/x-rst', 'rst'); ///////////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////////\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw/node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/rst/rst.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","options","rx_strong","rx_emphasis","rx_literal","rx_number","rx_positive","rx_negative","rx_uri_protocol","rx_uri_domain","rx_uri_path","rx_uri","RegExp","overlay","token","stream","match","next","mode","getMode","backdrop","overlayMode","format","string","args","Array","prototype","slice","call","arguments","replace","n","mode_python","mode_stex","SEPA","TAIL","rx_TAIL","NAME","rx_NAME","NAME_WWS","REF_NAME","TEXT1","TEXT2","rx_TEXT2","rx_section","rx_explicit","rx_link","rx_directive","rx_substitution","rx_footnote","rx_citation","rx_substitution_ref","rx_footnote_ref","rx_citation_ref","rx_link_ref1","rx_link_ref2","rx_role_pre","rx_role_suf","rx_role","rx_directive_name","rx_directive_tail","rx_substitution_text","rx_substitution_sepa","rx_substitution_name","rx_substitution_tail","rx_link_head","rx_link_name","rx_link_tail","rx_verbatim","rx_examples","to_normal","state","sol","change","to_mode","local","startState","to_explicit","phase","stage","context","current","tmp_stex","undefined","tmp","peek","to_verbatim","tmp_py","eatSpace","eol","skipToEnd","to_comment","as_block","ctx","tok","copyState","innerMode","defineMIME"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../python/python\"), require(\"../stex/stex\"), require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../python/python\", \"../stex/stex\", \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode('rst', function (config, options) {\n\n  var rx_strong = /^\\*\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*\\*/;\n  var rx_emphasis = /^\\*[^\\*\\s](?:[^\\*]*[^\\*\\s])?\\*/;\n  var rx_literal = /^``[^`\\s](?:[^`]*[^`\\s])``/;\n\n  var rx_number = /^(?:[\\d]+(?:[\\.,]\\d+)*)/;\n  var rx_positive = /^(?:\\s\\+[\\d]+(?:[\\.,]\\d+)*)/;\n  var rx_negative = /^(?:\\s\\-[\\d]+(?:[\\.,]\\d+)*)/;\n\n  var rx_uri_protocol = \"[Hh][Tt][Tt][Pp][Ss]?://\";\n  var rx_uri_domain = \"(?:[\\\\d\\\\w.-]+)\\\\.(?:\\\\w{2,6})\";\n  var rx_uri_path = \"(?:/[\\\\d\\\\w\\\\#\\\\%\\\\&\\\\-\\\\.\\\\,\\\\/\\\\:\\\\=\\\\?\\\\~]+)*\";\n  var rx_uri = new RegExp(\"^\" + rx_uri_protocol + rx_uri_domain + rx_uri_path);\n\n  var overlay = {\n    token: function (stream) {\n\n      if (stream.match(rx_strong) && stream.match (/\\W+|$/, false))\n        return 'strong';\n      if (stream.match(rx_emphasis) && stream.match (/\\W+|$/, false))\n        return 'em';\n      if (stream.match(rx_literal) && stream.match (/\\W+|$/, false))\n        return 'string-2';\n      if (stream.match(rx_number))\n        return 'number';\n      if (stream.match(rx_positive))\n        return 'positive';\n      if (stream.match(rx_negative))\n        return 'negative';\n      if (stream.match(rx_uri))\n        return 'link';\n\n      while (stream.next() != null) {\n        if (stream.match(rx_strong, false)) break;\n        if (stream.match(rx_emphasis, false)) break;\n        if (stream.match(rx_literal, false)) break;\n        if (stream.match(rx_number, false)) break;\n        if (stream.match(rx_positive, false)) break;\n        if (stream.match(rx_negative, false)) break;\n        if (stream.match(rx_uri, false)) break;\n      }\n\n      return null;\n    }\n  };\n\n  var mode = CodeMirror.getMode(\n    config, options.backdrop || 'rst-base'\n  );\n\n  return CodeMirror.overlayMode(mode, overlay, true); // combine\n}, 'python', 'stex');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nCodeMirror.defineMode('rst-base', function (config) {\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function format(string) {\n    var args = Array.prototype.slice.call(arguments, 1);\n    return string.replace(/{(\\d+)}/g, function (match, n) {\n      return typeof args[n] != 'undefined' ? args[n] : match;\n    });\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  var mode_python = CodeMirror.getMode(config, 'python');\n  var mode_stex = CodeMirror.getMode(config, 'stex');\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  var SEPA = \"\\\\s+\";\n  var TAIL = \"(?:\\\\s*|\\\\W|$)\",\n  rx_TAIL = new RegExp(format('^{0}', TAIL));\n\n  var NAME =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\",\n  rx_NAME = new RegExp(format('^{0}', NAME));\n  var NAME_WWS =\n    \"(?:[^\\\\W\\\\d_](?:[\\\\w\\\\s!\\\"#$%&'()\\\\*\\\\+,\\\\-\\\\.\\/:;<=>\\\\?]*[^\\\\W_])?)\";\n  var REF_NAME = format('(?:{0}|`{1}`)', NAME, NAME_WWS);\n\n  var TEXT1 = \"(?:[^\\\\s\\\\|](?:[^\\\\|]*[^\\\\s\\\\|])?)\";\n  var TEXT2 = \"(?:[^\\\\`]+)\",\n  rx_TEXT2 = new RegExp(format('^{0}', TEXT2));\n\n  var rx_section = new RegExp(\n    \"^([!'#$%&\\\"()*+,-./:;<=>?@\\\\[\\\\\\\\\\\\]^_`{|}~])\\\\1{3,}\\\\s*$\");\n  var rx_explicit = new RegExp(\n    format('^\\\\.\\\\.{0}', SEPA));\n  var rx_link = new RegExp(\n    format('^_{0}:{1}|^__:{1}', REF_NAME, TAIL));\n  var rx_directive = new RegExp(\n    format('^{0}::{1}', REF_NAME, TAIL));\n  var rx_substitution = new RegExp(\n    format('^\\\\|{0}\\\\|{1}{2}::{3}', TEXT1, SEPA, REF_NAME, TAIL));\n  var rx_footnote = new RegExp(\n    format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]{1}', REF_NAME, TAIL));\n  var rx_citation = new RegExp(\n    format('^\\\\[{0}\\\\]{1}', REF_NAME, TAIL));\n\n  var rx_substitution_ref = new RegExp(\n    format('^\\\\|{0}\\\\|', TEXT1));\n  var rx_footnote_ref = new RegExp(\n    format('^\\\\[(?:\\\\d+|#{0}?|\\\\*)]_', REF_NAME));\n  var rx_citation_ref = new RegExp(\n    format('^\\\\[{0}\\\\]_', REF_NAME));\n  var rx_link_ref1 = new RegExp(\n    format('^{0}__?', REF_NAME));\n  var rx_link_ref2 = new RegExp(\n    format('^`{0}`_', TEXT2));\n\n  var rx_role_pre = new RegExp(\n    format('^:{0}:`{1}`{2}', NAME, TEXT2, TAIL));\n  var rx_role_suf = new RegExp(\n    format('^`{1}`:{0}:{2}', NAME, TEXT2, TAIL));\n  var rx_role = new RegExp(\n    format('^:{0}:{1}', NAME, TAIL));\n\n  var rx_directive_name = new RegExp(format('^{0}', REF_NAME));\n  var rx_directive_tail = new RegExp(format('^::{0}', TAIL));\n  var rx_substitution_text = new RegExp(format('^\\\\|{0}\\\\|', TEXT1));\n  var rx_substitution_sepa = new RegExp(format('^{0}', SEPA));\n  var rx_substitution_name = new RegExp(format('^{0}', REF_NAME));\n  var rx_substitution_tail = new RegExp(format('^::{0}', TAIL));\n  var rx_link_head = new RegExp(\"^_\");\n  var rx_link_name = new RegExp(format('^{0}|_', REF_NAME));\n  var rx_link_tail = new RegExp(format('^:{0}', TAIL));\n\n  var rx_verbatim = new RegExp('^::\\\\s*$');\n  var rx_examples = new RegExp('^\\\\s+(?:>>>|In \\\\[\\\\d+\\\\]:)\\\\s');\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_normal(stream, state) {\n    var token = null;\n\n    if (stream.sol() && stream.match(rx_examples, false)) {\n      change(state, to_mode, {\n        mode: mode_python, local: CodeMirror.startState(mode_python)\n      });\n    } else if (stream.sol() && stream.match(rx_explicit)) {\n      change(state, to_explicit);\n      token = 'meta';\n    } else if (stream.sol() && stream.match(rx_section)) {\n      change(state, to_normal);\n      token = 'header';\n    } else if (phase(state) == rx_role_pre ||\n               stream.match(rx_role_pre, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role_pre, 1));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role_pre, 2));\n        stream.match(rx_NAME);\n        token = 'keyword';\n\n        if (stream.current().match(/^(?:math|latex)/)) {\n          state.tmp_stex = true;\n        }\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role_pre, 3));\n        stream.match(/^:`/);\n        token = 'meta';\n        break;\n      case 3:\n        if (state.tmp_stex) {\n          state.tmp_stex = undefined; state.tmp = {\n            mode: mode_stex, local: CodeMirror.startState(mode_stex)\n          };\n        }\n\n        if (state.tmp) {\n          if (stream.peek() == '`') {\n            change(state, to_normal, context(rx_role_pre, 4));\n            state.tmp = undefined;\n            break;\n          }\n\n          token = state.tmp.mode.token(stream, state.tmp.local);\n          break;\n        }\n\n        change(state, to_normal, context(rx_role_pre, 4));\n        stream.match(rx_TEXT2);\n        token = 'string';\n        break;\n      case 4:\n        change(state, to_normal, context(rx_role_pre, 5));\n        stream.match(/^`/);\n        token = 'meta';\n        break;\n      case 5:\n        change(state, to_normal, context(rx_role_pre, 6));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_role_suf ||\n               stream.match(rx_role_suf, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role_suf, 1));\n        stream.match(/^`/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role_suf, 2));\n        stream.match(rx_TEXT2);\n        token = 'string';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role_suf, 3));\n        stream.match(/^`:/);\n        token = 'meta';\n        break;\n      case 3:\n        change(state, to_normal, context(rx_role_suf, 4));\n        stream.match(rx_NAME);\n        token = 'keyword';\n        break;\n      case 4:\n        change(state, to_normal, context(rx_role_suf, 5));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 5:\n        change(state, to_normal, context(rx_role_suf, 6));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_role || stream.match(rx_role, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_role, 1));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_role, 2));\n        stream.match(rx_NAME);\n        token = 'keyword';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_role, 3));\n        stream.match(/^:/);\n        token = 'meta';\n        break;\n      case 3:\n        change(state, to_normal, context(rx_role, 4));\n        stream.match(rx_TAIL);\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_substitution_ref ||\n               stream.match(rx_substitution_ref, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_normal, context(rx_substitution_ref, 1));\n        stream.match(rx_substitution_text);\n        token = 'variable-2';\n        break;\n      case 1:\n        change(state, to_normal, context(rx_substitution_ref, 2));\n        if (stream.match(/^_?_?/)) token = 'link';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_footnote_ref)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_citation_ref)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_link_ref1)) {\n      change(state, to_normal);\n      if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n        token = 'link';\n      }\n    } else if (phase(state) == rx_link_ref2 ||\n               stream.match(rx_link_ref2, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        if (!stream.peek() || stream.peek().match(/^\\W$/)) {\n          change(state, to_normal, context(rx_link_ref2, 1));\n        } else {\n          stream.match(rx_link_ref2);\n        }\n        break;\n      case 1:\n        change(state, to_normal, context(rx_link_ref2, 2));\n        stream.match(/^`/);\n        token = 'link';\n        break;\n      case 2:\n        change(state, to_normal, context(rx_link_ref2, 3));\n        stream.match(rx_TEXT2);\n        break;\n      case 3:\n        change(state, to_normal, context(rx_link_ref2, 4));\n        stream.match(/^`_/);\n        token = 'link';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_verbatim)) {\n      change(state, to_verbatim);\n    }\n\n    else {\n      if (stream.next()) change(state, to_normal);\n    }\n\n    return token;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_explicit(stream, state) {\n    var token = null;\n\n    if (phase(state) == rx_substitution ||\n        stream.match(rx_substitution, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_substitution, 1));\n        stream.match(rx_substitution_text);\n        token = 'variable-2';\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_substitution, 2));\n        stream.match(rx_substitution_sepa);\n        break;\n      case 2:\n        change(state, to_explicit, context(rx_substitution, 3));\n        stream.match(rx_substitution_name);\n        token = 'keyword';\n        break;\n      case 3:\n        change(state, to_explicit, context(rx_substitution, 4));\n        stream.match(rx_substitution_tail);\n        token = 'meta';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_directive ||\n               stream.match(rx_directive, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_directive, 1));\n        stream.match(rx_directive_name);\n        token = 'keyword';\n\n        if (stream.current().match(/^(?:math|latex)/))\n          state.tmp_stex = true;\n        else if (stream.current().match(/^python/))\n          state.tmp_py = true;\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_directive, 2));\n        stream.match(rx_directive_tail);\n        token = 'meta';\n\n        if (stream.match(/^latex\\s*$/) || state.tmp_stex) {\n          state.tmp_stex = undefined; change(state, to_mode, {\n            mode: mode_stex, local: CodeMirror.startState(mode_stex)\n          });\n        }\n        break;\n      case 2:\n        change(state, to_explicit, context(rx_directive, 3));\n        if (stream.match(/^python\\s*$/) || state.tmp_py) {\n          state.tmp_py = undefined; change(state, to_mode, {\n            mode: mode_python, local: CodeMirror.startState(mode_python)\n          });\n        }\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (phase(state) == rx_link || stream.match(rx_link, false)) {\n\n      switch (stage(state)) {\n      case 0:\n        change(state, to_explicit, context(rx_link, 1));\n        stream.match(rx_link_head);\n        stream.match(rx_link_name);\n        token = 'link';\n        break;\n      case 1:\n        change(state, to_explicit, context(rx_link, 2));\n        stream.match(rx_link_tail);\n        token = 'meta';\n        break;\n      default:\n        change(state, to_normal);\n      }\n    } else if (stream.match(rx_footnote)) {\n      change(state, to_normal);\n      token = 'quote';\n    } else if (stream.match(rx_citation)) {\n      change(state, to_normal);\n      token = 'quote';\n    }\n\n    else {\n      stream.eatSpace();\n      if (stream.eol()) {\n        change(state, to_normal);\n      } else {\n        stream.skipToEnd();\n        change(state, to_comment);\n        token = 'comment';\n      }\n    }\n\n    return token;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_comment(stream, state) {\n    return as_block(stream, state, 'comment');\n  }\n\n  function to_verbatim(stream, state) {\n    return as_block(stream, state, 'meta');\n  }\n\n  function as_block(stream, state, token) {\n    if (stream.eol() || stream.eatSpace()) {\n      stream.skipToEnd();\n      return token;\n    } else {\n      change(state, to_normal);\n      return null;\n    }\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function to_mode(stream, state) {\n\n    if (state.ctx.mode && state.ctx.local) {\n\n      if (stream.sol()) {\n        if (!stream.eatSpace()) change(state, to_normal);\n        return null;\n      }\n\n      return state.ctx.mode.token(stream, state.ctx.local);\n    }\n\n    change(state, to_normal);\n    return null;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  function context(phase, stage, mode, local) {\n    return {phase: phase, stage: stage, mode: mode, local: local};\n  }\n\n  function change(state, tok, ctx) {\n    state.tok = tok;\n    state.ctx = ctx || {};\n  }\n\n  function stage(state) {\n    return state.ctx.stage || 0;\n  }\n\n  function phase(state) {\n    return state.ctx.phase;\n  }\n\n  ///////////////////////////////////////////////////////////////////////////\n  ///////////////////////////////////////////////////////////////////////////\n\n  return {\n    startState: function () {\n      return {tok: to_normal, ctx: context(undefined, 0)};\n    },\n\n    copyState: function (state) {\n      var ctx = state.ctx, tmp = state.tmp;\n      if (ctx.local)\n        ctx = {mode: ctx.mode, local: CodeMirror.copyState(ctx.mode, ctx.local)};\n      if (tmp)\n        tmp = {mode: tmp.mode, local: CodeMirror.copyState(tmp.mode, tmp.local)};\n      return {tok: state.tok, ctx: ctx, tmp: tmp};\n    },\n\n    innerMode: function (state) {\n      return state.tmp      ? {state: state.tmp.local, mode: state.tmp.mode}\n      : state.ctx.mode ? {state: state.ctx.local, mode: state.ctx.mode}\n      : null;\n    },\n\n    token: function (stream, state) {\n      return state.tok(stream, state);\n    }\n  };\n}, 'python', 'stex');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\nCodeMirror.defineMIME('text/x-rst', 'rst');\n\n///////////////////////////////////////////////////////////////////////////////\n///////////////////////////////////////////////////////////////////////////////\n\n});\n"]},"metadata":{},"sourceType":"script"}