{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LazyBrush } from \"lazy-brush\";\nimport { Catenary } from \"catenary-curve\";\nimport ResizeObserver from \"resize-observer-polyfill\";\nimport drawImage from \"./drawImage\";\n\nfunction midPointBtw(p1, p2) {\n  return {\n    x: p1.x + (p2.x - p1.x) / 2,\n    y: p1.y + (p2.y - p1.y) / 2\n  };\n}\n\nvar canvasStyle = {\n  display: \"block\",\n  position: \"absolute\"\n};\nvar canvasTypes = [{\n  name: \"interface\",\n  zIndex: 15\n}, {\n  name: \"drawing\",\n  zIndex: 11\n}, {\n  name: \"temp\",\n  zIndex: 12\n}, {\n  name: \"grid\",\n  zIndex: 10\n}];\nvar dimensionsPropTypes = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\n\nvar _default = (_temp = _class = function (_PureComponent) {\n  _inherits(_default, _PureComponent);\n\n  function _default(props) {\n    _classCallCheck(this, _default);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this.componentWillUnmount = function () {\n      _this.canvasObserver.unobserve(_this.canvasContainer);\n    };\n\n    _this.drawImage = function () {\n      if (!_this.props.imgSrc) return; // Load the image\n\n      _this.image = new Image(); // Prevent SecurityError \"Tainted canvases may not be exported.\" #70\n\n      _this.image.crossOrigin = \"anonymous\"; // Draw the image once loaded\n\n      _this.image.onload = function () {\n        return drawImage({\n          ctx: _this.ctx.grid,\n          img: _this.image\n        });\n      };\n\n      _this.image.src = _this.props.imgSrc;\n    };\n\n    _this.undo = function () {\n      var lines = _this.lines.slice(0, -1);\n\n      _this.clear();\n\n      _this.simulateDrawingLines({\n        lines: lines,\n        immediate: true\n      });\n\n      _this.triggerOnChange();\n    };\n\n    _this.getSaveData = function () {\n      // Construct and return the stringified saveData object\n      return JSON.stringify({\n        lines: _this.lines,\n        width: _this.props.canvasWidth,\n        height: _this.props.canvasHeight\n      });\n    };\n\n    _this.loadSaveData = function (saveData) {\n      var immediate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.immediateLoading;\n\n      if (typeof saveData !== \"string\") {\n        throw new Error(\"saveData needs to be of type string!\");\n      }\n\n      var _JSON$parse = JSON.parse(saveData),\n          lines = _JSON$parse.lines,\n          width = _JSON$parse.width,\n          height = _JSON$parse.height;\n\n      if (!lines || typeof lines.push !== \"function\") {\n        throw new Error(\"saveData.lines needs to be an array!\");\n      }\n\n      _this.clear();\n\n      if (width === _this.props.canvasWidth && height === _this.props.canvasHeight) {\n        _this.simulateDrawingLines({\n          lines: lines,\n          immediate: immediate\n        });\n      } else {\n        // we need to rescale the lines based on saved & current dimensions\n        var scaleX = _this.props.canvasWidth / width;\n        var scaleY = _this.props.canvasHeight / height;\n        var scaleAvg = (scaleX + scaleY) / 2;\n\n        _this.simulateDrawingLines({\n          lines: lines.map(function (line) {\n            return _extends({}, line, {\n              points: line.points.map(function (p) {\n                return {\n                  x: p.x * scaleX,\n                  y: p.y * scaleY\n                };\n              }),\n              brushRadius: line.brushRadius * scaleAvg\n            });\n          }),\n          immediate: immediate\n        });\n      }\n    };\n\n    _this.simulateDrawingLines = function (_ref) {\n      var lines = _ref.lines,\n          immediate = _ref.immediate; // Simulate live-drawing of the loaded lines\n      // TODO use a generator\n\n      var curTime = 0;\n      var timeoutGap = immediate ? 0 : _this.props.loadTimeOffset;\n      lines.forEach(function (line) {\n        var points = line.points,\n            brushColor = line.brushColor,\n            brushRadius = line.brushRadius; // Draw all at once if immediate flag is set, instead of using setTimeout\n\n        if (immediate) {\n          // Draw the points\n          _this.drawPoints({\n            points: points,\n            brushColor: brushColor,\n            brushRadius: brushRadius\n          }); // Save line with the drawn points\n\n\n          _this.points = points;\n\n          _this.saveLine({\n            brushColor: brushColor,\n            brushRadius: brushRadius\n          });\n\n          return;\n        } // Use timeout to draw\n\n\n        var _loop = function _loop(i) {\n          curTime += timeoutGap;\n          window.setTimeout(function () {\n            _this.drawPoints({\n              points: points.slice(0, i + 1),\n              brushColor: brushColor,\n              brushRadius: brushRadius\n            });\n          }, curTime);\n        };\n\n        for (var i = 1; i < points.length; i++) {\n          _loop(i);\n        }\n\n        curTime += timeoutGap;\n        window.setTimeout(function () {\n          // Save this line with its props instead of this.props\n          _this.points = points;\n\n          _this.saveLine({\n            brushColor: brushColor,\n            brushRadius: brushRadius\n          });\n        }, curTime);\n      });\n    };\n\n    _this.handleDrawStart = function (e) {\n      e.preventDefault(); // Start drawing\n\n      _this.isPressing = true;\n\n      var _this$getPointerPos = _this.getPointerPos(e),\n          x = _this$getPointerPos.x,\n          y = _this$getPointerPos.y;\n\n      if (e.touches && e.touches.length > 0) {\n        // on touch, set catenary position to touch pos\n        _this.lazy.update({\n          x: x,\n          y: y\n        }, {\n          both: true\n        });\n      } // Ensure the initial down position gets added to our line\n\n\n      _this.handlePointerMove(x, y);\n    };\n\n    _this.handleDrawMove = function (e) {\n      e.preventDefault();\n\n      var _this$getPointerPos2 = _this.getPointerPos(e),\n          x = _this$getPointerPos2.x,\n          y = _this$getPointerPos2.y;\n\n      _this.handlePointerMove(x, y);\n    };\n\n    _this.handleDrawEnd = function (e) {\n      e.preventDefault(); // Draw to this end pos\n\n      _this.handleDrawMove(e); // Stop drawing & save the drawn line\n\n\n      _this.isDrawing = false;\n      _this.isPressing = false;\n\n      _this.saveLine();\n    };\n\n    _this.handleCanvasResize = function (entries, observer) {\n      var saveData = _this.getSaveData();\n\n      for (var _iterator = entries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref2 = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref2 = _i.value;\n        }\n\n        var entry = _ref2;\n        var _entry$contentRect = entry.contentRect,\n            width = _entry$contentRect.width,\n            height = _entry$contentRect.height;\n\n        _this.setCanvasSize(_this.canvas.interface, width, height);\n\n        _this.setCanvasSize(_this.canvas.drawing, width, height);\n\n        _this.setCanvasSize(_this.canvas.temp, width, height);\n\n        _this.setCanvasSize(_this.canvas.grid, width, height);\n\n        _this.drawGrid(_this.ctx.grid);\n\n        _this.drawImage();\n\n        _this.loop({\n          once: true\n        });\n      }\n\n      _this.loadSaveData(saveData, true);\n    };\n\n    _this.setCanvasSize = function (canvas, width, height) {\n      canvas.width = width;\n      canvas.height = height;\n      canvas.style.width = width;\n      canvas.style.height = height;\n    };\n\n    _this.getPointerPos = function (e) {\n      var rect = _this.canvas.interface.getBoundingClientRect(); // use cursor pos as default\n\n\n      var clientX = e.clientX;\n      var clientY = e.clientY; // use first touch if available\n\n      if (e.changedTouches && e.changedTouches.length > 0) {\n        clientX = e.changedTouches[0].clientX;\n        clientY = e.changedTouches[0].clientY;\n      } // return mouse/touch position inside canvas\n\n\n      return {\n        x: clientX - rect.left,\n        y: clientY - rect.top\n      };\n    };\n\n    _this.handlePointerMove = function (x, y) {\n      if (_this.props.disabled) return;\n\n      _this.lazy.update({\n        x: x,\n        y: y\n      });\n\n      var isDisabled = !_this.lazy.isEnabled();\n\n      if (_this.isPressing && !_this.isDrawing || isDisabled && _this.isPressing) {\n        // Start drawing and add point\n        _this.isDrawing = true;\n\n        _this.points.push(_this.lazy.brush.toObject());\n      }\n\n      if (_this.isDrawing) {\n        // Add new point\n        _this.points.push(_this.lazy.brush.toObject()); // Draw current points\n\n\n        _this.drawPoints({\n          points: _this.points,\n          brushColor: _this.props.brushColor,\n          brushRadius: _this.props.brushRadius\n        });\n      }\n\n      _this.mouseHasMoved = true;\n    };\n\n    _this.drawPoints = function (_ref3) {\n      var points = _ref3.points,\n          brushColor = _ref3.brushColor,\n          brushRadius = _ref3.brushRadius;\n      _this.ctx.temp.lineJoin = \"round\";\n      _this.ctx.temp.lineCap = \"round\";\n      _this.ctx.temp.strokeStyle = brushColor;\n\n      _this.ctx.temp.clearRect(0, 0, _this.ctx.temp.canvas.width, _this.ctx.temp.canvas.height);\n\n      _this.ctx.temp.lineWidth = brushRadius * 2;\n      var p1 = points[0];\n      var p2 = points[1];\n\n      _this.ctx.temp.moveTo(p2.x, p2.y);\n\n      _this.ctx.temp.beginPath();\n\n      for (var i = 1, len = points.length; i < len; i++) {\n        // we pick the point between pi+1 & pi+2 as the\n        // end point and p1 as our control point\n        var midPoint = midPointBtw(p1, p2);\n\n        _this.ctx.temp.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n\n        p1 = points[i];\n        p2 = points[i + 1];\n      } // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n\n\n      _this.ctx.temp.lineTo(p1.x, p1.y);\n\n      _this.ctx.temp.stroke();\n    };\n\n    _this.saveLine = function () {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          brushColor = _ref4.brushColor,\n          brushRadius = _ref4.brushRadius;\n\n      if (_this.points.length < 2) return; // Save as new line\n\n      _this.lines.push({\n        points: [].concat(_this.points),\n        brushColor: brushColor || _this.props.brushColor,\n        brushRadius: brushRadius || _this.props.brushRadius\n      }); // Reset points array\n\n\n      _this.points.length = 0;\n      var width = _this.canvas.temp.width;\n      var height = _this.canvas.temp.height; // Copy the line to the drawing canvas\n\n      _this.ctx.drawing.drawImage(_this.canvas.temp, 0, 0, width, height); // Clear the temporary line-drawing canvas\n\n\n      _this.ctx.temp.clearRect(0, 0, width, height);\n\n      _this.triggerOnChange();\n    };\n\n    _this.triggerOnChange = function () {\n      _this.props.onChange && _this.props.onChange(_this);\n    };\n\n    _this.clear = function () {\n      _this.lines = [];\n      _this.valuesChanged = true;\n\n      _this.ctx.drawing.clearRect(0, 0, _this.canvas.drawing.width, _this.canvas.drawing.height);\n\n      _this.ctx.temp.clearRect(0, 0, _this.canvas.temp.width, _this.canvas.temp.height);\n    };\n\n    _this.loop = function () {\n      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref5$once = _ref5.once,\n          once = _ref5$once === undefined ? false : _ref5$once;\n\n      if (_this.mouseHasMoved || _this.valuesChanged) {\n        var pointer = _this.lazy.getPointerCoordinates();\n\n        var brush = _this.lazy.getBrushCoordinates();\n\n        _this.drawInterface(_this.ctx.interface, pointer, brush);\n\n        _this.mouseHasMoved = false;\n        _this.valuesChanged = false;\n      }\n\n      if (!once) {\n        window.requestAnimationFrame(function () {\n          _this.loop();\n        });\n      }\n    };\n\n    _this.drawGrid = function (ctx) {\n      if (_this.props.hideGrid) return;\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n      ctx.beginPath();\n      ctx.setLineDash([5, 1]);\n      ctx.setLineDash([]);\n      ctx.strokeStyle = _this.props.gridColor;\n      ctx.lineWidth = 0.5;\n      var gridSize = 25;\n      var countX = 0;\n\n      while (countX < ctx.canvas.width) {\n        countX += gridSize;\n        ctx.moveTo(countX, 0);\n        ctx.lineTo(countX, ctx.canvas.height);\n      }\n\n      ctx.stroke();\n      var countY = 0;\n\n      while (countY < ctx.canvas.height) {\n        countY += gridSize;\n        ctx.moveTo(0, countY);\n        ctx.lineTo(ctx.canvas.width, countY);\n      }\n\n      ctx.stroke();\n    };\n\n    _this.drawInterface = function (ctx, pointer, brush) {\n      if (_this.props.hideInterface) return;\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height); // Draw brush preview\n\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.brushColor;\n      ctx.arc(brush.x, brush.y, _this.props.brushRadius, 0, Math.PI * 2, true);\n      ctx.fill(); // Draw mouse point (the one directly at the cursor)\n\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.catenaryColor;\n      ctx.arc(pointer.x, pointer.y, 4, 0, Math.PI * 2, true);\n      ctx.fill(); // Draw catenary\n\n      if (_this.lazy.isEnabled()) {\n        ctx.beginPath();\n        ctx.lineWidth = 2;\n        ctx.lineCap = \"round\";\n        ctx.setLineDash([2, 4]);\n        ctx.strokeStyle = _this.props.catenaryColor;\n\n        _this.catenary.drawToCanvas(_this.ctx.interface, brush, pointer, _this.chainLength);\n\n        ctx.stroke();\n      } // Draw brush point (the one in the middle of the brush preview)\n\n\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.catenaryColor;\n      ctx.arc(brush.x, brush.y, 2, 0, Math.PI * 2, true);\n      ctx.fill();\n    };\n\n    _this.canvas = {};\n    _this.ctx = {};\n    _this.catenary = new Catenary();\n    _this.points = [];\n    _this.lines = [];\n    _this.mouseHasMoved = true;\n    _this.valuesChanged = true;\n    _this.isDrawing = false;\n    _this.isPressing = false;\n    return _this;\n  }\n\n  _default.prototype.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this.lazy = new LazyBrush({\n      radius: this.props.lazyRadius * window.devicePixelRatio,\n      enabled: true,\n      initialPoint: {\n        x: window.innerWidth / 2,\n        y: window.innerHeight / 2\n      }\n    });\n    this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n    this.canvasObserver = new ResizeObserver(function (entries, observer) {\n      return _this2.handleCanvasResize(entries, observer);\n    });\n    this.canvasObserver.observe(this.canvasContainer);\n    this.drawImage();\n    this.loop();\n    window.setTimeout(function () {\n      var initX = window.innerWidth / 2;\n      var initY = window.innerHeight / 2;\n\n      _this2.lazy.update({\n        x: initX - _this2.chainLength / 4,\n        y: initY\n      }, {\n        both: true\n      });\n\n      _this2.lazy.update({\n        x: initX + _this2.chainLength / 4,\n        y: initY\n      }, {\n        both: false\n      });\n\n      _this2.mouseHasMoved = true;\n      _this2.valuesChanged = true;\n\n      _this2.clear(); // Load saveData from prop if it exists\n\n\n      if (_this2.props.saveData) {\n        _this2.loadSaveData(_this2.props.saveData);\n      }\n    }, 100);\n  };\n\n  _default.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.lazyRadius !== this.props.lazyRadius) {\n      // Set new lazyRadius values\n      this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n      this.lazy.setRadius(this.props.lazyRadius * window.devicePixelRatio);\n    }\n\n    if (prevProps.saveData !== this.props.saveData) {\n      this.loadSaveData(this.props.saveData);\n    }\n\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      // Signal this.loop function that values changed\n      this.valuesChanged = true;\n    }\n  };\n\n  _default.prototype.render = function render() {\n    var _this3 = this;\n\n    return React.createElement(\"div\", {\n      className: this.props.className,\n      style: _extends({\n        display: \"block\",\n        background: this.props.backgroundColor,\n        touchAction: \"none\",\n        width: this.props.canvasWidth,\n        height: this.props.canvasHeight\n      }, this.props.style),\n      ref: function ref(container) {\n        if (container) {\n          _this3.canvasContainer = container;\n        }\n      }\n    }, canvasTypes.map(function (_ref6) {\n      var name = _ref6.name,\n          zIndex = _ref6.zIndex;\n      var isInterface = name === \"interface\";\n      return React.createElement(\"canvas\", {\n        key: name,\n        ref: function ref(canvas) {\n          if (canvas) {\n            _this3.canvas[name] = canvas;\n            _this3.ctx[name] = canvas.getContext(\"2d\");\n          }\n        },\n        style: _extends({}, canvasStyle, {\n          zIndex: zIndex\n        }),\n        onMouseDown: isInterface ? _this3.handleDrawStart : undefined,\n        onMouseMove: isInterface ? _this3.handleDrawMove : undefined,\n        onMouseUp: isInterface ? _this3.handleDrawEnd : undefined,\n        onMouseOut: isInterface ? _this3.handleDrawEnd : undefined,\n        onTouchStart: isInterface ? _this3.handleDrawStart : undefined,\n        onTouchMove: isInterface ? _this3.handleDrawMove : undefined,\n        onTouchEnd: isInterface ? _this3.handleDrawEnd : undefined,\n        onTouchCancel: isInterface ? _this3.handleDrawEnd : undefined\n      });\n    }));\n  };\n\n  return _default;\n}(PureComponent), _class.propTypes = {\n  onChange: PropTypes.func,\n  loadTimeOffset: PropTypes.number,\n  lazyRadius: PropTypes.number,\n  brushRadius: PropTypes.number,\n  brushColor: PropTypes.string,\n  catenaryColor: PropTypes.string,\n  gridColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  hideGrid: PropTypes.bool,\n  canvasWidth: dimensionsPropTypes,\n  canvasHeight: dimensionsPropTypes,\n  disabled: PropTypes.bool,\n  imgSrc: PropTypes.string,\n  saveData: PropTypes.string,\n  immediateLoading: PropTypes.bool,\n  hideInterface: PropTypes.bool\n}, _class.defaultProps = {\n  onChange: null,\n  loadTimeOffset: 5,\n  lazyRadius: 12,\n  brushRadius: 10,\n  brushColor: \"#444\",\n  catenaryColor: \"#0a0302\",\n  gridColor: \"rgba(150,150,150,0.17)\",\n  backgroundColor: \"#FFF\",\n  hideGrid: false,\n  canvasWidth: 400,\n  canvasHeight: 400,\n  disabled: false,\n  imgSrc: \"\",\n  saveData: \"\",\n  immediateLoading: false,\n  hideInterface: false\n}, _temp);\n\nexport { _default as default };","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw-server/client/node_modules/react-canvas-draw/es/index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_class","_temp","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","value","enumerable","writable","configurable","setPrototypeOf","__proto__","React","PureComponent","PropTypes","LazyBrush","Catenary","ResizeObserver","drawImage","midPointBtw","p1","p2","x","y","canvasStyle","display","position","canvasTypes","name","zIndex","dimensionsPropTypes","oneOfType","number","string","_default","_PureComponent","props","_this","componentWillUnmount","canvasObserver","unobserve","canvasContainer","imgSrc","image","Image","crossOrigin","onload","ctx","grid","img","src","undo","lines","slice","clear","simulateDrawingLines","immediate","triggerOnChange","getSaveData","JSON","stringify","width","canvasWidth","height","canvasHeight","loadSaveData","saveData","undefined","immediateLoading","Error","_JSON$parse","parse","push","scaleX","scaleY","scaleAvg","map","line","points","p","brushRadius","_ref","curTime","timeoutGap","loadTimeOffset","forEach","brushColor","drawPoints","saveLine","_loop","window","setTimeout","handleDrawStart","e","preventDefault","isPressing","_this$getPointerPos","getPointerPos","touches","lazy","update","both","handlePointerMove","handleDrawMove","_this$getPointerPos2","handleDrawEnd","isDrawing","handleCanvasResize","entries","observer","_iterator","_isArray","Array","isArray","_i","Symbol","iterator","_ref2","next","done","entry","_entry$contentRect","contentRect","setCanvasSize","canvas","interface","drawing","temp","drawGrid","loop","once","style","rect","getBoundingClientRect","clientX","clientY","changedTouches","left","top","disabled","isDisabled","isEnabled","brush","toObject","mouseHasMoved","_ref3","lineJoin","lineCap","strokeStyle","clearRect","lineWidth","moveTo","beginPath","len","midPoint","quadraticCurveTo","lineTo","stroke","_ref4","concat","onChange","valuesChanged","_ref5","_ref5$once","pointer","getPointerCoordinates","getBrushCoordinates","drawInterface","requestAnimationFrame","hideGrid","setLineDash","gridColor","gridSize","countX","countY","hideInterface","fillStyle","arc","Math","PI","fill","catenaryColor","catenary","drawToCanvas","chainLength","componentDidMount","_this2","radius","lazyRadius","devicePixelRatio","enabled","initialPoint","innerWidth","innerHeight","observe","initX","initY","componentDidUpdate","prevProps","setRadius","render","_this3","createElement","className","background","backgroundColor","touchAction","ref","container","_ref6","isInterface","getContext","onMouseDown","onMouseMove","onMouseUp","onMouseOut","onTouchStart","onTouchMove","onTouchEnd","onTouchCancel","propTypes","func","bool","defaultProps","default"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _class, _temp;\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { PureComponent } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { LazyBrush } from \"lazy-brush\";\nimport { Catenary } from \"catenary-curve\";\n\nimport ResizeObserver from \"resize-observer-polyfill\";\n\nimport drawImage from \"./drawImage\";\n\nfunction midPointBtw(p1, p2) {\n  return {\n    x: p1.x + (p2.x - p1.x) / 2,\n    y: p1.y + (p2.y - p1.y) / 2\n  };\n}\n\nvar canvasStyle = {\n  display: \"block\",\n  position: \"absolute\"\n};\n\nvar canvasTypes = [{\n  name: \"interface\",\n  zIndex: 15\n}, {\n  name: \"drawing\",\n  zIndex: 11\n}, {\n  name: \"temp\",\n  zIndex: 12\n}, {\n  name: \"grid\",\n  zIndex: 10\n}];\n\nvar dimensionsPropTypes = PropTypes.oneOfType([PropTypes.number, PropTypes.string]);\n\nvar _default = (_temp = _class = function (_PureComponent) {\n  _inherits(_default, _PureComponent);\n\n  function _default(props) {\n    _classCallCheck(this, _default);\n\n    var _this = _possibleConstructorReturn(this, _PureComponent.call(this, props));\n\n    _this.componentWillUnmount = function () {\n      _this.canvasObserver.unobserve(_this.canvasContainer);\n    };\n\n    _this.drawImage = function () {\n      if (!_this.props.imgSrc) return;\n\n      // Load the image\n      _this.image = new Image();\n\n      // Prevent SecurityError \"Tainted canvases may not be exported.\" #70\n      _this.image.crossOrigin = \"anonymous\";\n\n      // Draw the image once loaded\n      _this.image.onload = function () {\n        return drawImage({ ctx: _this.ctx.grid, img: _this.image });\n      };\n      _this.image.src = _this.props.imgSrc;\n    };\n\n    _this.undo = function () {\n      var lines = _this.lines.slice(0, -1);\n      _this.clear();\n      _this.simulateDrawingLines({ lines: lines, immediate: true });\n      _this.triggerOnChange();\n    };\n\n    _this.getSaveData = function () {\n      // Construct and return the stringified saveData object\n      return JSON.stringify({\n        lines: _this.lines,\n        width: _this.props.canvasWidth,\n        height: _this.props.canvasHeight\n      });\n    };\n\n    _this.loadSaveData = function (saveData) {\n      var immediate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _this.props.immediateLoading;\n\n      if (typeof saveData !== \"string\") {\n        throw new Error(\"saveData needs to be of type string!\");\n      }\n\n      var _JSON$parse = JSON.parse(saveData),\n          lines = _JSON$parse.lines,\n          width = _JSON$parse.width,\n          height = _JSON$parse.height;\n\n      if (!lines || typeof lines.push !== \"function\") {\n        throw new Error(\"saveData.lines needs to be an array!\");\n      }\n\n      _this.clear();\n\n      if (width === _this.props.canvasWidth && height === _this.props.canvasHeight) {\n        _this.simulateDrawingLines({\n          lines: lines,\n          immediate: immediate\n        });\n      } else {\n        // we need to rescale the lines based on saved & current dimensions\n        var scaleX = _this.props.canvasWidth / width;\n        var scaleY = _this.props.canvasHeight / height;\n        var scaleAvg = (scaleX + scaleY) / 2;\n\n        _this.simulateDrawingLines({\n          lines: lines.map(function (line) {\n            return _extends({}, line, {\n              points: line.points.map(function (p) {\n                return {\n                  x: p.x * scaleX,\n                  y: p.y * scaleY\n                };\n              }),\n              brushRadius: line.brushRadius * scaleAvg\n            });\n          }),\n          immediate: immediate\n        });\n      }\n    };\n\n    _this.simulateDrawingLines = function (_ref) {\n      var lines = _ref.lines,\n          immediate = _ref.immediate;\n\n      // Simulate live-drawing of the loaded lines\n      // TODO use a generator\n      var curTime = 0;\n      var timeoutGap = immediate ? 0 : _this.props.loadTimeOffset;\n\n      lines.forEach(function (line) {\n        var points = line.points,\n            brushColor = line.brushColor,\n            brushRadius = line.brushRadius;\n\n        // Draw all at once if immediate flag is set, instead of using setTimeout\n\n        if (immediate) {\n          // Draw the points\n          _this.drawPoints({\n            points: points,\n            brushColor: brushColor,\n            brushRadius: brushRadius\n          });\n\n          // Save line with the drawn points\n          _this.points = points;\n          _this.saveLine({ brushColor: brushColor, brushRadius: brushRadius });\n          return;\n        }\n\n        // Use timeout to draw\n\n        var _loop = function _loop(i) {\n          curTime += timeoutGap;\n          window.setTimeout(function () {\n            _this.drawPoints({\n              points: points.slice(0, i + 1),\n              brushColor: brushColor,\n              brushRadius: brushRadius\n            });\n          }, curTime);\n        };\n\n        for (var i = 1; i < points.length; i++) {\n          _loop(i);\n        }\n\n        curTime += timeoutGap;\n        window.setTimeout(function () {\n          // Save this line with its props instead of this.props\n          _this.points = points;\n          _this.saveLine({ brushColor: brushColor, brushRadius: brushRadius });\n        }, curTime);\n      });\n    };\n\n    _this.handleDrawStart = function (e) {\n      e.preventDefault();\n\n      // Start drawing\n      _this.isPressing = true;\n\n      var _this$getPointerPos = _this.getPointerPos(e),\n          x = _this$getPointerPos.x,\n          y = _this$getPointerPos.y;\n\n      if (e.touches && e.touches.length > 0) {\n        // on touch, set catenary position to touch pos\n        _this.lazy.update({ x: x, y: y }, { both: true });\n      }\n\n      // Ensure the initial down position gets added to our line\n      _this.handlePointerMove(x, y);\n    };\n\n    _this.handleDrawMove = function (e) {\n      e.preventDefault();\n\n      var _this$getPointerPos2 = _this.getPointerPos(e),\n          x = _this$getPointerPos2.x,\n          y = _this$getPointerPos2.y;\n\n      _this.handlePointerMove(x, y);\n    };\n\n    _this.handleDrawEnd = function (e) {\n      e.preventDefault();\n\n      // Draw to this end pos\n      _this.handleDrawMove(e);\n\n      // Stop drawing & save the drawn line\n      _this.isDrawing = false;\n      _this.isPressing = false;\n      _this.saveLine();\n    };\n\n    _this.handleCanvasResize = function (entries, observer) {\n      var saveData = _this.getSaveData();\n      for (var _iterator = entries, _isArray = Array.isArray(_iterator), _i = 0, _iterator = _isArray ? _iterator : _iterator[Symbol.iterator]();;) {\n        var _ref2;\n\n        if (_isArray) {\n          if (_i >= _iterator.length) break;\n          _ref2 = _iterator[_i++];\n        } else {\n          _i = _iterator.next();\n          if (_i.done) break;\n          _ref2 = _i.value;\n        }\n\n        var entry = _ref2;\n        var _entry$contentRect = entry.contentRect,\n            width = _entry$contentRect.width,\n            height = _entry$contentRect.height;\n\n        _this.setCanvasSize(_this.canvas.interface, width, height);\n        _this.setCanvasSize(_this.canvas.drawing, width, height);\n        _this.setCanvasSize(_this.canvas.temp, width, height);\n        _this.setCanvasSize(_this.canvas.grid, width, height);\n\n        _this.drawGrid(_this.ctx.grid);\n        _this.drawImage();\n        _this.loop({ once: true });\n      }\n      _this.loadSaveData(saveData, true);\n    };\n\n    _this.setCanvasSize = function (canvas, width, height) {\n      canvas.width = width;\n      canvas.height = height;\n      canvas.style.width = width;\n      canvas.style.height = height;\n    };\n\n    _this.getPointerPos = function (e) {\n      var rect = _this.canvas.interface.getBoundingClientRect();\n\n      // use cursor pos as default\n      var clientX = e.clientX;\n      var clientY = e.clientY;\n\n      // use first touch if available\n      if (e.changedTouches && e.changedTouches.length > 0) {\n        clientX = e.changedTouches[0].clientX;\n        clientY = e.changedTouches[0].clientY;\n      }\n\n      // return mouse/touch position inside canvas\n      return {\n        x: clientX - rect.left,\n        y: clientY - rect.top\n      };\n    };\n\n    _this.handlePointerMove = function (x, y) {\n      if (_this.props.disabled) return;\n\n      _this.lazy.update({ x: x, y: y });\n      var isDisabled = !_this.lazy.isEnabled();\n\n      if (_this.isPressing && !_this.isDrawing || isDisabled && _this.isPressing) {\n        // Start drawing and add point\n        _this.isDrawing = true;\n        _this.points.push(_this.lazy.brush.toObject());\n      }\n\n      if (_this.isDrawing) {\n        // Add new point\n        _this.points.push(_this.lazy.brush.toObject());\n\n        // Draw current points\n        _this.drawPoints({\n          points: _this.points,\n          brushColor: _this.props.brushColor,\n          brushRadius: _this.props.brushRadius\n        });\n      }\n\n      _this.mouseHasMoved = true;\n    };\n\n    _this.drawPoints = function (_ref3) {\n      var points = _ref3.points,\n          brushColor = _ref3.brushColor,\n          brushRadius = _ref3.brushRadius;\n\n      _this.ctx.temp.lineJoin = \"round\";\n      _this.ctx.temp.lineCap = \"round\";\n      _this.ctx.temp.strokeStyle = brushColor;\n\n      _this.ctx.temp.clearRect(0, 0, _this.ctx.temp.canvas.width, _this.ctx.temp.canvas.height);\n      _this.ctx.temp.lineWidth = brushRadius * 2;\n\n      var p1 = points[0];\n      var p2 = points[1];\n\n      _this.ctx.temp.moveTo(p2.x, p2.y);\n      _this.ctx.temp.beginPath();\n\n      for (var i = 1, len = points.length; i < len; i++) {\n        // we pick the point between pi+1 & pi+2 as the\n        // end point and p1 as our control point\n        var midPoint = midPointBtw(p1, p2);\n        _this.ctx.temp.quadraticCurveTo(p1.x, p1.y, midPoint.x, midPoint.y);\n        p1 = points[i];\n        p2 = points[i + 1];\n      }\n      // Draw last line as a straight line while\n      // we wait for the next point to be able to calculate\n      // the bezier control point\n      _this.ctx.temp.lineTo(p1.x, p1.y);\n      _this.ctx.temp.stroke();\n    };\n\n    _this.saveLine = function () {\n      var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          brushColor = _ref4.brushColor,\n          brushRadius = _ref4.brushRadius;\n\n      if (_this.points.length < 2) return;\n\n      // Save as new line\n      _this.lines.push({\n        points: [].concat(_this.points),\n        brushColor: brushColor || _this.props.brushColor,\n        brushRadius: brushRadius || _this.props.brushRadius\n      });\n\n      // Reset points array\n      _this.points.length = 0;\n\n      var width = _this.canvas.temp.width;\n      var height = _this.canvas.temp.height;\n\n      // Copy the line to the drawing canvas\n      _this.ctx.drawing.drawImage(_this.canvas.temp, 0, 0, width, height);\n\n      // Clear the temporary line-drawing canvas\n      _this.ctx.temp.clearRect(0, 0, width, height);\n\n      _this.triggerOnChange();\n    };\n\n    _this.triggerOnChange = function () {\n      _this.props.onChange && _this.props.onChange(_this);\n    };\n\n    _this.clear = function () {\n      _this.lines = [];\n      _this.valuesChanged = true;\n      _this.ctx.drawing.clearRect(0, 0, _this.canvas.drawing.width, _this.canvas.drawing.height);\n      _this.ctx.temp.clearRect(0, 0, _this.canvas.temp.width, _this.canvas.temp.height);\n    };\n\n    _this.loop = function () {\n      var _ref5 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n          _ref5$once = _ref5.once,\n          once = _ref5$once === undefined ? false : _ref5$once;\n\n      if (_this.mouseHasMoved || _this.valuesChanged) {\n        var pointer = _this.lazy.getPointerCoordinates();\n        var brush = _this.lazy.getBrushCoordinates();\n\n        _this.drawInterface(_this.ctx.interface, pointer, brush);\n        _this.mouseHasMoved = false;\n        _this.valuesChanged = false;\n      }\n\n      if (!once) {\n        window.requestAnimationFrame(function () {\n          _this.loop();\n        });\n      }\n    };\n\n    _this.drawGrid = function (ctx) {\n      if (_this.props.hideGrid) return;\n\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n      ctx.beginPath();\n      ctx.setLineDash([5, 1]);\n      ctx.setLineDash([]);\n      ctx.strokeStyle = _this.props.gridColor;\n      ctx.lineWidth = 0.5;\n\n      var gridSize = 25;\n\n      var countX = 0;\n      while (countX < ctx.canvas.width) {\n        countX += gridSize;\n        ctx.moveTo(countX, 0);\n        ctx.lineTo(countX, ctx.canvas.height);\n      }\n      ctx.stroke();\n\n      var countY = 0;\n      while (countY < ctx.canvas.height) {\n        countY += gridSize;\n        ctx.moveTo(0, countY);\n        ctx.lineTo(ctx.canvas.width, countY);\n      }\n      ctx.stroke();\n    };\n\n    _this.drawInterface = function (ctx, pointer, brush) {\n      if (_this.props.hideInterface) return;\n\n      ctx.clearRect(0, 0, ctx.canvas.width, ctx.canvas.height);\n\n      // Draw brush preview\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.brushColor;\n      ctx.arc(brush.x, brush.y, _this.props.brushRadius, 0, Math.PI * 2, true);\n      ctx.fill();\n\n      // Draw mouse point (the one directly at the cursor)\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.catenaryColor;\n      ctx.arc(pointer.x, pointer.y, 4, 0, Math.PI * 2, true);\n      ctx.fill();\n\n      // Draw catenary\n      if (_this.lazy.isEnabled()) {\n        ctx.beginPath();\n        ctx.lineWidth = 2;\n        ctx.lineCap = \"round\";\n        ctx.setLineDash([2, 4]);\n        ctx.strokeStyle = _this.props.catenaryColor;\n        _this.catenary.drawToCanvas(_this.ctx.interface, brush, pointer, _this.chainLength);\n        ctx.stroke();\n      }\n\n      // Draw brush point (the one in the middle of the brush preview)\n      ctx.beginPath();\n      ctx.fillStyle = _this.props.catenaryColor;\n      ctx.arc(brush.x, brush.y, 2, 0, Math.PI * 2, true);\n      ctx.fill();\n    };\n\n    _this.canvas = {};\n    _this.ctx = {};\n\n    _this.catenary = new Catenary();\n\n    _this.points = [];\n    _this.lines = [];\n\n    _this.mouseHasMoved = true;\n    _this.valuesChanged = true;\n    _this.isDrawing = false;\n    _this.isPressing = false;\n    return _this;\n  }\n\n  _default.prototype.componentDidMount = function componentDidMount() {\n    var _this2 = this;\n\n    this.lazy = new LazyBrush({\n      radius: this.props.lazyRadius * window.devicePixelRatio,\n      enabled: true,\n      initialPoint: {\n        x: window.innerWidth / 2,\n        y: window.innerHeight / 2\n      }\n    });\n    this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n\n    this.canvasObserver = new ResizeObserver(function (entries, observer) {\n      return _this2.handleCanvasResize(entries, observer);\n    });\n    this.canvasObserver.observe(this.canvasContainer);\n\n    this.drawImage();\n    this.loop();\n\n    window.setTimeout(function () {\n      var initX = window.innerWidth / 2;\n      var initY = window.innerHeight / 2;\n      _this2.lazy.update({ x: initX - _this2.chainLength / 4, y: initY }, { both: true });\n      _this2.lazy.update({ x: initX + _this2.chainLength / 4, y: initY }, { both: false });\n      _this2.mouseHasMoved = true;\n      _this2.valuesChanged = true;\n      _this2.clear();\n\n      // Load saveData from prop if it exists\n      if (_this2.props.saveData) {\n        _this2.loadSaveData(_this2.props.saveData);\n      }\n    }, 100);\n  };\n\n  _default.prototype.componentDidUpdate = function componentDidUpdate(prevProps) {\n    if (prevProps.lazyRadius !== this.props.lazyRadius) {\n      // Set new lazyRadius values\n      this.chainLength = this.props.lazyRadius * window.devicePixelRatio;\n      this.lazy.setRadius(this.props.lazyRadius * window.devicePixelRatio);\n    }\n\n    if (prevProps.saveData !== this.props.saveData) {\n      this.loadSaveData(this.props.saveData);\n    }\n\n    if (JSON.stringify(prevProps) !== JSON.stringify(this.props)) {\n      // Signal this.loop function that values changed\n      this.valuesChanged = true;\n    }\n  };\n\n  _default.prototype.render = function render() {\n    var _this3 = this;\n\n    return React.createElement(\n      \"div\",\n      {\n        className: this.props.className,\n        style: _extends({\n          display: \"block\",\n          background: this.props.backgroundColor,\n          touchAction: \"none\",\n          width: this.props.canvasWidth,\n          height: this.props.canvasHeight\n        }, this.props.style),\n        ref: function ref(container) {\n          if (container) {\n            _this3.canvasContainer = container;\n          }\n        }\n      },\n      canvasTypes.map(function (_ref6) {\n        var name = _ref6.name,\n            zIndex = _ref6.zIndex;\n\n        var isInterface = name === \"interface\";\n        return React.createElement(\"canvas\", {\n          key: name,\n          ref: function ref(canvas) {\n            if (canvas) {\n              _this3.canvas[name] = canvas;\n              _this3.ctx[name] = canvas.getContext(\"2d\");\n            }\n          },\n          style: _extends({}, canvasStyle, { zIndex: zIndex }),\n          onMouseDown: isInterface ? _this3.handleDrawStart : undefined,\n          onMouseMove: isInterface ? _this3.handleDrawMove : undefined,\n          onMouseUp: isInterface ? _this3.handleDrawEnd : undefined,\n          onMouseOut: isInterface ? _this3.handleDrawEnd : undefined,\n          onTouchStart: isInterface ? _this3.handleDrawStart : undefined,\n          onTouchMove: isInterface ? _this3.handleDrawMove : undefined,\n          onTouchEnd: isInterface ? _this3.handleDrawEnd : undefined,\n          onTouchCancel: isInterface ? _this3.handleDrawEnd : undefined\n        });\n      })\n    );\n  };\n\n  return _default;\n}(PureComponent), _class.propTypes = {\n  onChange: PropTypes.func,\n  loadTimeOffset: PropTypes.number,\n  lazyRadius: PropTypes.number,\n  brushRadius: PropTypes.number,\n  brushColor: PropTypes.string,\n  catenaryColor: PropTypes.string,\n  gridColor: PropTypes.string,\n  backgroundColor: PropTypes.string,\n  hideGrid: PropTypes.bool,\n  canvasWidth: dimensionsPropTypes,\n  canvasHeight: dimensionsPropTypes,\n  disabled: PropTypes.bool,\n  imgSrc: PropTypes.string,\n  saveData: PropTypes.string,\n  immediateLoading: PropTypes.bool,\n  hideInterface: PropTypes.bool\n}, _class.defaultProps = {\n  onChange: null,\n  loadTimeOffset: 5,\n  lazyRadius: 12,\n  brushRadius: 10,\n  brushColor: \"#444\",\n  catenaryColor: \"#0a0302\",\n  gridColor: \"rgba(150,150,150,0.17)\",\n  backgroundColor: \"#FFF\",\n  hideGrid: false,\n  canvasWidth: 400,\n  canvasHeight: 400,\n  disabled: false,\n  imgSrc: \"\",\n  saveData: \"\",\n  immediateLoading: false,\n  hideInterface: false\n}, _temp);\n\nexport { _default as default };"]},"metadata":{},"sourceType":"module"}