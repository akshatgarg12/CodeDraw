{"ast":null,"code":"// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n(function (mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../javascript/javascript\"), require(\"../css/css\"), require(\"../htmlmixed/htmlmixed\"));else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../javascript/javascript\", \"../css/css\", \"../htmlmixed/htmlmixed\"], mod);else // Plain browser env\n    mod(CodeMirror);\n})(function (CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineMode(\"pug\", function (config) {\n    // token types\n    var KEYWORD = 'keyword';\n    var DOCTYPE = 'meta';\n    var ID = 'builtin';\n    var CLASS = 'qualifier';\n    var ATTRS_NEST = {\n      '{': '}',\n      '(': ')',\n      '[': ']'\n    };\n    var jsMode = CodeMirror.getMode(config, 'javascript');\n\n    function State() {\n      this.javaScriptLine = false;\n      this.javaScriptLineExcludesColon = false;\n      this.javaScriptArguments = false;\n      this.javaScriptArgumentsDepth = 0;\n      this.isInterpolating = false;\n      this.interpolationNesting = 0;\n      this.jsState = CodeMirror.startState(jsMode);\n      this.restOfLine = '';\n      this.isIncludeFiltered = false;\n      this.isEach = false;\n      this.lastTag = '';\n      this.scriptType = ''; // Attributes Mode\n\n      this.isAttrs = false;\n      this.attrsNest = [];\n      this.inAttributeName = true;\n      this.attributeIsType = false;\n      this.attrValue = ''; // Indented Mode\n\n      this.indentOf = Infinity;\n      this.indentToken = '';\n      this.innerMode = null;\n      this.innerState = null;\n      this.innerModeForLine = false;\n    }\n    /**\n     * Safely copy a state\n     *\n     * @return {State}\n     */\n\n\n    State.prototype.copy = function () {\n      var res = new State();\n      res.javaScriptLine = this.javaScriptLine;\n      res.javaScriptLineExcludesColon = this.javaScriptLineExcludesColon;\n      res.javaScriptArguments = this.javaScriptArguments;\n      res.javaScriptArgumentsDepth = this.javaScriptArgumentsDepth;\n      res.isInterpolating = this.isInterpolating;\n      res.interpolationNesting = this.interpolationNesting;\n      res.jsState = CodeMirror.copyState(jsMode, this.jsState);\n      res.innerMode = this.innerMode;\n\n      if (this.innerMode && this.innerState) {\n        res.innerState = CodeMirror.copyState(this.innerMode, this.innerState);\n      }\n\n      res.restOfLine = this.restOfLine;\n      res.isIncludeFiltered = this.isIncludeFiltered;\n      res.isEach = this.isEach;\n      res.lastTag = this.lastTag;\n      res.scriptType = this.scriptType;\n      res.isAttrs = this.isAttrs;\n      res.attrsNest = this.attrsNest.slice();\n      res.inAttributeName = this.inAttributeName;\n      res.attributeIsType = this.attributeIsType;\n      res.attrValue = this.attrValue;\n      res.indentOf = this.indentOf;\n      res.indentToken = this.indentToken;\n      res.innerModeForLine = this.innerModeForLine;\n      return res;\n    };\n\n    function javaScript(stream, state) {\n      if (stream.sol()) {\n        // if javaScriptLine was set at end of line, ignore it\n        state.javaScriptLine = false;\n        state.javaScriptLineExcludesColon = false;\n      }\n\n      if (state.javaScriptLine) {\n        if (state.javaScriptLineExcludesColon && stream.peek() === ':') {\n          state.javaScriptLine = false;\n          state.javaScriptLineExcludesColon = false;\n          return;\n        }\n\n        var tok = jsMode.token(stream, state.jsState);\n        if (stream.eol()) state.javaScriptLine = false;\n        return tok || true;\n      }\n    }\n\n    function javaScriptArguments(stream, state) {\n      if (state.javaScriptArguments) {\n        if (state.javaScriptArgumentsDepth === 0 && stream.peek() !== '(') {\n          state.javaScriptArguments = false;\n          return;\n        }\n\n        if (stream.peek() === '(') {\n          state.javaScriptArgumentsDepth++;\n        } else if (stream.peek() === ')') {\n          state.javaScriptArgumentsDepth--;\n        }\n\n        if (state.javaScriptArgumentsDepth === 0) {\n          state.javaScriptArguments = false;\n          return;\n        }\n\n        var tok = jsMode.token(stream, state.jsState);\n        return tok || true;\n      }\n    }\n\n    function yieldStatement(stream) {\n      if (stream.match(/^yield\\b/)) {\n        return 'keyword';\n      }\n    }\n\n    function doctype(stream) {\n      if (stream.match(/^(?:doctype) *([^\\n]+)?/)) {\n        return DOCTYPE;\n      }\n    }\n\n    function interpolation(stream, state) {\n      if (stream.match('#{')) {\n        state.isInterpolating = true;\n        state.interpolationNesting = 0;\n        return 'punctuation';\n      }\n    }\n\n    function interpolationContinued(stream, state) {\n      if (state.isInterpolating) {\n        if (stream.peek() === '}') {\n          state.interpolationNesting--;\n\n          if (state.interpolationNesting < 0) {\n            stream.next();\n            state.isInterpolating = false;\n            return 'punctuation';\n          }\n        } else if (stream.peek() === '{') {\n          state.interpolationNesting++;\n        }\n\n        return jsMode.token(stream, state.jsState) || true;\n      }\n    }\n\n    function caseStatement(stream, state) {\n      if (stream.match(/^case\\b/)) {\n        state.javaScriptLine = true;\n        return KEYWORD;\n      }\n    }\n\n    function when(stream, state) {\n      if (stream.match(/^when\\b/)) {\n        state.javaScriptLine = true;\n        state.javaScriptLineExcludesColon = true;\n        return KEYWORD;\n      }\n    }\n\n    function defaultStatement(stream) {\n      if (stream.match(/^default\\b/)) {\n        return KEYWORD;\n      }\n    }\n\n    function extendsStatement(stream, state) {\n      if (stream.match(/^extends?\\b/)) {\n        state.restOfLine = 'string';\n        return KEYWORD;\n      }\n    }\n\n    function append(stream, state) {\n      if (stream.match(/^append\\b/)) {\n        state.restOfLine = 'variable';\n        return KEYWORD;\n      }\n    }\n\n    function prepend(stream, state) {\n      if (stream.match(/^prepend\\b/)) {\n        state.restOfLine = 'variable';\n        return KEYWORD;\n      }\n    }\n\n    function block(stream, state) {\n      if (stream.match(/^block\\b *(?:(prepend|append)\\b)?/)) {\n        state.restOfLine = 'variable';\n        return KEYWORD;\n      }\n    }\n\n    function include(stream, state) {\n      if (stream.match(/^include\\b/)) {\n        state.restOfLine = 'string';\n        return KEYWORD;\n      }\n    }\n\n    function includeFiltered(stream, state) {\n      if (stream.match(/^include:([a-zA-Z0-9\\-]+)/, false) && stream.match('include')) {\n        state.isIncludeFiltered = true;\n        return KEYWORD;\n      }\n    }\n\n    function includeFilteredContinued(stream, state) {\n      if (state.isIncludeFiltered) {\n        var tok = filter(stream, state);\n        state.isIncludeFiltered = false;\n        state.restOfLine = 'string';\n        return tok;\n      }\n    }\n\n    function mixin(stream, state) {\n      if (stream.match(/^mixin\\b/)) {\n        state.javaScriptLine = true;\n        return KEYWORD;\n      }\n    }\n\n    function call(stream, state) {\n      if (stream.match(/^\\+([-\\w]+)/)) {\n        if (!stream.match(/^\\( *[-\\w]+ *=/, false)) {\n          state.javaScriptArguments = true;\n          state.javaScriptArgumentsDepth = 0;\n        }\n\n        return 'variable';\n      }\n\n      if (stream.match(/^\\+#{/, false)) {\n        stream.next();\n        state.mixinCallAfter = true;\n        return interpolation(stream, state);\n      }\n    }\n\n    function callArguments(stream, state) {\n      if (state.mixinCallAfter) {\n        state.mixinCallAfter = false;\n\n        if (!stream.match(/^\\( *[-\\w]+ *=/, false)) {\n          state.javaScriptArguments = true;\n          state.javaScriptArgumentsDepth = 0;\n        }\n\n        return true;\n      }\n    }\n\n    function conditional(stream, state) {\n      if (stream.match(/^(if|unless|else if|else)\\b/)) {\n        state.javaScriptLine = true;\n        return KEYWORD;\n      }\n    }\n\n    function each(stream, state) {\n      if (stream.match(/^(- *)?(each|for)\\b/)) {\n        state.isEach = true;\n        return KEYWORD;\n      }\n    }\n\n    function eachContinued(stream, state) {\n      if (state.isEach) {\n        if (stream.match(/^ in\\b/)) {\n          state.javaScriptLine = true;\n          state.isEach = false;\n          return KEYWORD;\n        } else if (stream.sol() || stream.eol()) {\n          state.isEach = false;\n        } else if (stream.next()) {\n          while (!stream.match(/^ in\\b/, false) && stream.next());\n\n          return 'variable';\n        }\n      }\n    }\n\n    function whileStatement(stream, state) {\n      if (stream.match(/^while\\b/)) {\n        state.javaScriptLine = true;\n        return KEYWORD;\n      }\n    }\n\n    function tag(stream, state) {\n      var captures;\n\n      if (captures = stream.match(/^(\\w(?:[-:\\w]*\\w)?)\\/?/)) {\n        state.lastTag = captures[1].toLowerCase();\n\n        if (state.lastTag === 'script') {\n          state.scriptType = 'application/javascript';\n        }\n\n        return 'tag';\n      }\n    }\n\n    function filter(stream, state) {\n      if (stream.match(/^:([\\w\\-]+)/)) {\n        var innerMode;\n\n        if (config && config.innerModes) {\n          innerMode = config.innerModes(stream.current().substring(1));\n        }\n\n        if (!innerMode) {\n          innerMode = stream.current().substring(1);\n        }\n\n        if (typeof innerMode === 'string') {\n          innerMode = CodeMirror.getMode(config, innerMode);\n        }\n\n        setInnerMode(stream, state, innerMode);\n        return 'atom';\n      }\n    }\n\n    function code(stream, state) {\n      if (stream.match(/^(!?=|-)/)) {\n        state.javaScriptLine = true;\n        return 'punctuation';\n      }\n    }\n\n    function id(stream) {\n      if (stream.match(/^#([\\w-]+)/)) {\n        return ID;\n      }\n    }\n\n    function className(stream) {\n      if (stream.match(/^\\.([\\w-]+)/)) {\n        return CLASS;\n      }\n    }\n\n    function attrs(stream, state) {\n      if (stream.peek() == '(') {\n        stream.next();\n        state.isAttrs = true;\n        state.attrsNest = [];\n        state.inAttributeName = true;\n        state.attrValue = '';\n        state.attributeIsType = false;\n        return 'punctuation';\n      }\n    }\n\n    function attrsContinued(stream, state) {\n      if (state.isAttrs) {\n        if (ATTRS_NEST[stream.peek()]) {\n          state.attrsNest.push(ATTRS_NEST[stream.peek()]);\n        }\n\n        if (state.attrsNest[state.attrsNest.length - 1] === stream.peek()) {\n          state.attrsNest.pop();\n        } else if (stream.eat(')')) {\n          state.isAttrs = false;\n          return 'punctuation';\n        }\n\n        if (state.inAttributeName && stream.match(/^[^=,\\)!]+/)) {\n          if (stream.peek() === '=' || stream.peek() === '!') {\n            state.inAttributeName = false;\n            state.jsState = CodeMirror.startState(jsMode);\n\n            if (state.lastTag === 'script' && stream.current().trim().toLowerCase() === 'type') {\n              state.attributeIsType = true;\n            } else {\n              state.attributeIsType = false;\n            }\n          }\n\n          return 'attribute';\n        }\n\n        var tok = jsMode.token(stream, state.jsState);\n\n        if (state.attributeIsType && tok === 'string') {\n          state.scriptType = stream.current().toString();\n        }\n\n        if (state.attrsNest.length === 0 && (tok === 'string' || tok === 'variable' || tok === 'keyword')) {\n          try {\n            Function('', 'var x ' + state.attrValue.replace(/,\\s*$/, '').replace(/^!/, ''));\n            state.inAttributeName = true;\n            state.attrValue = '';\n            stream.backUp(stream.current().length);\n            return attrsContinued(stream, state);\n          } catch (ex) {//not the end of an attribute\n          }\n        }\n\n        state.attrValue += stream.current();\n        return tok || true;\n      }\n    }\n\n    function attributesBlock(stream, state) {\n      if (stream.match(/^&attributes\\b/)) {\n        state.javaScriptArguments = true;\n        state.javaScriptArgumentsDepth = 0;\n        return 'keyword';\n      }\n    }\n\n    function indent(stream) {\n      if (stream.sol() && stream.eatSpace()) {\n        return 'indent';\n      }\n    }\n\n    function comment(stream, state) {\n      if (stream.match(/^ *\\/\\/(-)?([^\\n]*)/)) {\n        state.indentOf = stream.indentation();\n        state.indentToken = 'comment';\n        return 'comment';\n      }\n    }\n\n    function colon(stream) {\n      if (stream.match(/^: */)) {\n        return 'colon';\n      }\n    }\n\n    function text(stream, state) {\n      if (stream.match(/^(?:\\| ?| )([^\\n]+)/)) {\n        return 'string';\n      }\n\n      if (stream.match(/^(<[^\\n]*)/, false)) {\n        // html string\n        setInnerMode(stream, state, 'htmlmixed');\n        state.innerModeForLine = true;\n        return innerMode(stream, state, true);\n      }\n    }\n\n    function dot(stream, state) {\n      if (stream.eat('.')) {\n        var innerMode = null;\n\n        if (state.lastTag === 'script' && state.scriptType.toLowerCase().indexOf('javascript') != -1) {\n          innerMode = state.scriptType.toLowerCase().replace(/\"|'/g, '');\n        } else if (state.lastTag === 'style') {\n          innerMode = 'css';\n        }\n\n        setInnerMode(stream, state, innerMode);\n        return 'dot';\n      }\n    }\n\n    function fail(stream) {\n      stream.next();\n      return null;\n    }\n\n    function setInnerMode(stream, state, mode) {\n      mode = CodeMirror.mimeModes[mode] || mode;\n      mode = config.innerModes ? config.innerModes(mode) || mode : mode;\n      mode = CodeMirror.mimeModes[mode] || mode;\n      mode = CodeMirror.getMode(config, mode);\n      state.indentOf = stream.indentation();\n\n      if (mode && mode.name !== 'null') {\n        state.innerMode = mode;\n      } else {\n        state.indentToken = 'string';\n      }\n    }\n\n    function innerMode(stream, state, force) {\n      if (stream.indentation() > state.indentOf || state.innerModeForLine && !stream.sol() || force) {\n        if (state.innerMode) {\n          if (!state.innerState) {\n            state.innerState = state.innerMode.startState ? CodeMirror.startState(state.innerMode, stream.indentation()) : {};\n          }\n\n          return stream.hideFirstChars(state.indentOf + 2, function () {\n            return state.innerMode.token(stream, state.innerState) || true;\n          });\n        } else {\n          stream.skipToEnd();\n          return state.indentToken;\n        }\n      } else if (stream.sol()) {\n        state.indentOf = Infinity;\n        state.indentToken = null;\n        state.innerMode = null;\n        state.innerState = null;\n      }\n    }\n\n    function restOfLine(stream, state) {\n      if (stream.sol()) {\n        // if restOfLine was set at end of line, ignore it\n        state.restOfLine = '';\n      }\n\n      if (state.restOfLine) {\n        stream.skipToEnd();\n        var tok = state.restOfLine;\n        state.restOfLine = '';\n        return tok;\n      }\n    }\n\n    function startState() {\n      return new State();\n    }\n\n    function copyState(state) {\n      return state.copy();\n    }\n    /**\n     * Get the next token in the stream\n     *\n     * @param {Stream} stream\n     * @param {State} state\n     */\n\n\n    function nextToken(stream, state) {\n      var tok = innerMode(stream, state) || restOfLine(stream, state) || interpolationContinued(stream, state) || includeFilteredContinued(stream, state) || eachContinued(stream, state) || attrsContinued(stream, state) || javaScript(stream, state) || javaScriptArguments(stream, state) || callArguments(stream, state) || yieldStatement(stream) || doctype(stream) || interpolation(stream, state) || caseStatement(stream, state) || when(stream, state) || defaultStatement(stream) || extendsStatement(stream, state) || append(stream, state) || prepend(stream, state) || block(stream, state) || include(stream, state) || includeFiltered(stream, state) || mixin(stream, state) || call(stream, state) || conditional(stream, state) || each(stream, state) || whileStatement(stream, state) || tag(stream, state) || filter(stream, state) || code(stream, state) || id(stream) || className(stream) || attrs(stream, state) || attributesBlock(stream, state) || indent(stream) || text(stream, state) || comment(stream, state) || colon(stream) || dot(stream, state) || fail(stream);\n      return tok === true ? null : tok;\n    }\n\n    return {\n      startState: startState,\n      copyState: copyState,\n      token: nextToken\n    };\n  }, 'javascript', 'css', 'htmlmixed');\n  CodeMirror.defineMIME('text/x-pug', 'pug');\n  CodeMirror.defineMIME('text/x-jade', 'pug');\n});","map":{"version":3,"sources":["/Users/akshatgarg/Documents/codedraw-server/client/node_modules/@uiw/react-codemirror/node_modules/codemirror/mode/pug/pug.js"],"names":["mod","exports","module","require","define","amd","CodeMirror","defineMode","config","KEYWORD","DOCTYPE","ID","CLASS","ATTRS_NEST","jsMode","getMode","State","javaScriptLine","javaScriptLineExcludesColon","javaScriptArguments","javaScriptArgumentsDepth","isInterpolating","interpolationNesting","jsState","startState","restOfLine","isIncludeFiltered","isEach","lastTag","scriptType","isAttrs","attrsNest","inAttributeName","attributeIsType","attrValue","indentOf","Infinity","indentToken","innerMode","innerState","innerModeForLine","prototype","copy","res","copyState","slice","javaScript","stream","state","sol","peek","tok","token","eol","yieldStatement","match","doctype","interpolation","interpolationContinued","next","caseStatement","when","defaultStatement","extendsStatement","append","prepend","block","include","includeFiltered","includeFilteredContinued","filter","mixin","call","mixinCallAfter","callArguments","conditional","each","eachContinued","whileStatement","tag","captures","toLowerCase","innerModes","current","substring","setInnerMode","code","id","className","attrs","attrsContinued","push","length","pop","eat","trim","toString","Function","replace","backUp","ex","attributesBlock","indent","eatSpace","comment","indentation","colon","text","dot","indexOf","fail","mode","mimeModes","name","force","hideFirstChars","skipToEnd","nextToken","defineMIME"],"mappings":"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","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../javascript/javascript\"), require(\"../css/css\"), require(\"../htmlmixed/htmlmixed\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../javascript/javascript\", \"../css/css\", \"../htmlmixed/htmlmixed\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"pug\", function (config) {\n  // token types\n  var KEYWORD = 'keyword';\n  var DOCTYPE = 'meta';\n  var ID = 'builtin';\n  var CLASS = 'qualifier';\n\n  var ATTRS_NEST = {\n    '{': '}',\n    '(': ')',\n    '[': ']'\n  };\n\n  var jsMode = CodeMirror.getMode(config, 'javascript');\n\n  function State() {\n    this.javaScriptLine = false;\n    this.javaScriptLineExcludesColon = false;\n\n    this.javaScriptArguments = false;\n    this.javaScriptArgumentsDepth = 0;\n\n    this.isInterpolating = false;\n    this.interpolationNesting = 0;\n\n    this.jsState = CodeMirror.startState(jsMode);\n\n    this.restOfLine = '';\n\n    this.isIncludeFiltered = false;\n    this.isEach = false;\n\n    this.lastTag = '';\n    this.scriptType = '';\n\n    // Attributes Mode\n    this.isAttrs = false;\n    this.attrsNest = [];\n    this.inAttributeName = true;\n    this.attributeIsType = false;\n    this.attrValue = '';\n\n    // Indented Mode\n    this.indentOf = Infinity;\n    this.indentToken = '';\n\n    this.innerMode = null;\n    this.innerState = null;\n\n    this.innerModeForLine = false;\n  }\n  /**\n   * Safely copy a state\n   *\n   * @return {State}\n   */\n  State.prototype.copy = function () {\n    var res = new State();\n    res.javaScriptLine = this.javaScriptLine;\n    res.javaScriptLineExcludesColon = this.javaScriptLineExcludesColon;\n    res.javaScriptArguments = this.javaScriptArguments;\n    res.javaScriptArgumentsDepth = this.javaScriptArgumentsDepth;\n    res.isInterpolating = this.isInterpolating;\n    res.interpolationNesting = this.interpolationNesting;\n\n    res.jsState = CodeMirror.copyState(jsMode, this.jsState);\n\n    res.innerMode = this.innerMode;\n    if (this.innerMode && this.innerState) {\n      res.innerState = CodeMirror.copyState(this.innerMode, this.innerState);\n    }\n\n    res.restOfLine = this.restOfLine;\n\n    res.isIncludeFiltered = this.isIncludeFiltered;\n    res.isEach = this.isEach;\n    res.lastTag = this.lastTag;\n    res.scriptType = this.scriptType;\n    res.isAttrs = this.isAttrs;\n    res.attrsNest = this.attrsNest.slice();\n    res.inAttributeName = this.inAttributeName;\n    res.attributeIsType = this.attributeIsType;\n    res.attrValue = this.attrValue;\n    res.indentOf = this.indentOf;\n    res.indentToken = this.indentToken;\n\n    res.innerModeForLine = this.innerModeForLine;\n\n    return res;\n  };\n\n  function javaScript(stream, state) {\n    if (stream.sol()) {\n      // if javaScriptLine was set at end of line, ignore it\n      state.javaScriptLine = false;\n      state.javaScriptLineExcludesColon = false;\n    }\n    if (state.javaScriptLine) {\n      if (state.javaScriptLineExcludesColon && stream.peek() === ':') {\n        state.javaScriptLine = false;\n        state.javaScriptLineExcludesColon = false;\n        return;\n      }\n      var tok = jsMode.token(stream, state.jsState);\n      if (stream.eol()) state.javaScriptLine = false;\n      return tok || true;\n    }\n  }\n  function javaScriptArguments(stream, state) {\n    if (state.javaScriptArguments) {\n      if (state.javaScriptArgumentsDepth === 0 && stream.peek() !== '(') {\n        state.javaScriptArguments = false;\n        return;\n      }\n      if (stream.peek() === '(') {\n        state.javaScriptArgumentsDepth++;\n      } else if (stream.peek() === ')') {\n        state.javaScriptArgumentsDepth--;\n      }\n      if (state.javaScriptArgumentsDepth === 0) {\n        state.javaScriptArguments = false;\n        return;\n      }\n\n      var tok = jsMode.token(stream, state.jsState);\n      return tok || true;\n    }\n  }\n\n  function yieldStatement(stream) {\n    if (stream.match(/^yield\\b/)) {\n        return 'keyword';\n    }\n  }\n\n  function doctype(stream) {\n    if (stream.match(/^(?:doctype) *([^\\n]+)?/)) {\n        return DOCTYPE;\n    }\n  }\n\n  function interpolation(stream, state) {\n    if (stream.match('#{')) {\n      state.isInterpolating = true;\n      state.interpolationNesting = 0;\n      return 'punctuation';\n    }\n  }\n\n  function interpolationContinued(stream, state) {\n    if (state.isInterpolating) {\n      if (stream.peek() === '}') {\n        state.interpolationNesting--;\n        if (state.interpolationNesting < 0) {\n          stream.next();\n          state.isInterpolating = false;\n          return 'punctuation';\n        }\n      } else if (stream.peek() === '{') {\n        state.interpolationNesting++;\n      }\n      return jsMode.token(stream, state.jsState) || true;\n    }\n  }\n\n  function caseStatement(stream, state) {\n    if (stream.match(/^case\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function when(stream, state) {\n    if (stream.match(/^when\\b/)) {\n      state.javaScriptLine = true;\n      state.javaScriptLineExcludesColon = true;\n      return KEYWORD;\n    }\n  }\n\n  function defaultStatement(stream) {\n    if (stream.match(/^default\\b/)) {\n      return KEYWORD;\n    }\n  }\n\n  function extendsStatement(stream, state) {\n    if (stream.match(/^extends?\\b/)) {\n      state.restOfLine = 'string';\n      return KEYWORD;\n    }\n  }\n\n  function append(stream, state) {\n    if (stream.match(/^append\\b/)) {\n      state.restOfLine = 'variable';\n      return KEYWORD;\n    }\n  }\n  function prepend(stream, state) {\n    if (stream.match(/^prepend\\b/)) {\n      state.restOfLine = 'variable';\n      return KEYWORD;\n    }\n  }\n  function block(stream, state) {\n    if (stream.match(/^block\\b *(?:(prepend|append)\\b)?/)) {\n      state.restOfLine = 'variable';\n      return KEYWORD;\n    }\n  }\n\n  function include(stream, state) {\n    if (stream.match(/^include\\b/)) {\n      state.restOfLine = 'string';\n      return KEYWORD;\n    }\n  }\n\n  function includeFiltered(stream, state) {\n    if (stream.match(/^include:([a-zA-Z0-9\\-]+)/, false) && stream.match('include')) {\n      state.isIncludeFiltered = true;\n      return KEYWORD;\n    }\n  }\n\n  function includeFilteredContinued(stream, state) {\n    if (state.isIncludeFiltered) {\n      var tok = filter(stream, state);\n      state.isIncludeFiltered = false;\n      state.restOfLine = 'string';\n      return tok;\n    }\n  }\n\n  function mixin(stream, state) {\n    if (stream.match(/^mixin\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function call(stream, state) {\n    if (stream.match(/^\\+([-\\w]+)/)) {\n      if (!stream.match(/^\\( *[-\\w]+ *=/, false)) {\n        state.javaScriptArguments = true;\n        state.javaScriptArgumentsDepth = 0;\n      }\n      return 'variable';\n    }\n    if (stream.match(/^\\+#{/, false)) {\n      stream.next();\n      state.mixinCallAfter = true;\n      return interpolation(stream, state);\n    }\n  }\n  function callArguments(stream, state) {\n    if (state.mixinCallAfter) {\n      state.mixinCallAfter = false;\n      if (!stream.match(/^\\( *[-\\w]+ *=/, false)) {\n        state.javaScriptArguments = true;\n        state.javaScriptArgumentsDepth = 0;\n      }\n      return true;\n    }\n  }\n\n  function conditional(stream, state) {\n    if (stream.match(/^(if|unless|else if|else)\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function each(stream, state) {\n    if (stream.match(/^(- *)?(each|for)\\b/)) {\n      state.isEach = true;\n      return KEYWORD;\n    }\n  }\n  function eachContinued(stream, state) {\n    if (state.isEach) {\n      if (stream.match(/^ in\\b/)) {\n        state.javaScriptLine = true;\n        state.isEach = false;\n        return KEYWORD;\n      } else if (stream.sol() || stream.eol()) {\n        state.isEach = false;\n      } else if (stream.next()) {\n        while (!stream.match(/^ in\\b/, false) && stream.next());\n        return 'variable';\n      }\n    }\n  }\n\n  function whileStatement(stream, state) {\n    if (stream.match(/^while\\b/)) {\n      state.javaScriptLine = true;\n      return KEYWORD;\n    }\n  }\n\n  function tag(stream, state) {\n    var captures;\n    if (captures = stream.match(/^(\\w(?:[-:\\w]*\\w)?)\\/?/)) {\n      state.lastTag = captures[1].toLowerCase();\n      if (state.lastTag === 'script') {\n        state.scriptType = 'application/javascript';\n      }\n      return 'tag';\n    }\n  }\n\n  function filter(stream, state) {\n    if (stream.match(/^:([\\w\\-]+)/)) {\n      var innerMode;\n      if (config && config.innerModes) {\n        innerMode = config.innerModes(stream.current().substring(1));\n      }\n      if (!innerMode) {\n        innerMode = stream.current().substring(1);\n      }\n      if (typeof innerMode === 'string') {\n        innerMode = CodeMirror.getMode(config, innerMode);\n      }\n      setInnerMode(stream, state, innerMode);\n      return 'atom';\n    }\n  }\n\n  function code(stream, state) {\n    if (stream.match(/^(!?=|-)/)) {\n      state.javaScriptLine = true;\n      return 'punctuation';\n    }\n  }\n\n  function id(stream) {\n    if (stream.match(/^#([\\w-]+)/)) {\n      return ID;\n    }\n  }\n\n  function className(stream) {\n    if (stream.match(/^\\.([\\w-]+)/)) {\n      return CLASS;\n    }\n  }\n\n  function attrs(stream, state) {\n    if (stream.peek() == '(') {\n      stream.next();\n      state.isAttrs = true;\n      state.attrsNest = [];\n      state.inAttributeName = true;\n      state.attrValue = '';\n      state.attributeIsType = false;\n      return 'punctuation';\n    }\n  }\n\n  function attrsContinued(stream, state) {\n    if (state.isAttrs) {\n      if (ATTRS_NEST[stream.peek()]) {\n        state.attrsNest.push(ATTRS_NEST[stream.peek()]);\n      }\n      if (state.attrsNest[state.attrsNest.length - 1] === stream.peek()) {\n        state.attrsNest.pop();\n      } else  if (stream.eat(')')) {\n        state.isAttrs = false;\n        return 'punctuation';\n      }\n      if (state.inAttributeName && stream.match(/^[^=,\\)!]+/)) {\n        if (stream.peek() === '=' || stream.peek() === '!') {\n          state.inAttributeName = false;\n          state.jsState = CodeMirror.startState(jsMode);\n          if (state.lastTag === 'script' && stream.current().trim().toLowerCase() === 'type') {\n            state.attributeIsType = true;\n          } else {\n            state.attributeIsType = false;\n          }\n        }\n        return 'attribute';\n      }\n\n      var tok = jsMode.token(stream, state.jsState);\n      if (state.attributeIsType && tok === 'string') {\n        state.scriptType = stream.current().toString();\n      }\n      if (state.attrsNest.length === 0 && (tok === 'string' || tok === 'variable' || tok === 'keyword')) {\n        try {\n          Function('', 'var x ' + state.attrValue.replace(/,\\s*$/, '').replace(/^!/, ''));\n          state.inAttributeName = true;\n          state.attrValue = '';\n          stream.backUp(stream.current().length);\n          return attrsContinued(stream, state);\n        } catch (ex) {\n          //not the end of an attribute\n        }\n      }\n      state.attrValue += stream.current();\n      return tok || true;\n    }\n  }\n\n  function attributesBlock(stream, state) {\n    if (stream.match(/^&attributes\\b/)) {\n      state.javaScriptArguments = true;\n      state.javaScriptArgumentsDepth = 0;\n      return 'keyword';\n    }\n  }\n\n  function indent(stream) {\n    if (stream.sol() && stream.eatSpace()) {\n      return 'indent';\n    }\n  }\n\n  function comment(stream, state) {\n    if (stream.match(/^ *\\/\\/(-)?([^\\n]*)/)) {\n      state.indentOf = stream.indentation();\n      state.indentToken = 'comment';\n      return 'comment';\n    }\n  }\n\n  function colon(stream) {\n    if (stream.match(/^: */)) {\n      return 'colon';\n    }\n  }\n\n  function text(stream, state) {\n    if (stream.match(/^(?:\\| ?| )([^\\n]+)/)) {\n      return 'string';\n    }\n    if (stream.match(/^(<[^\\n]*)/, false)) {\n      // html string\n      setInnerMode(stream, state, 'htmlmixed');\n      state.innerModeForLine = true;\n      return innerMode(stream, state, true);\n    }\n  }\n\n  function dot(stream, state) {\n    if (stream.eat('.')) {\n      var innerMode = null;\n      if (state.lastTag === 'script' && state.scriptType.toLowerCase().indexOf('javascript') != -1) {\n        innerMode = state.scriptType.toLowerCase().replace(/\"|'/g, '');\n      } else if (state.lastTag === 'style') {\n        innerMode = 'css';\n      }\n      setInnerMode(stream, state, innerMode);\n      return 'dot';\n    }\n  }\n\n  function fail(stream) {\n    stream.next();\n    return null;\n  }\n\n\n  function setInnerMode(stream, state, mode) {\n    mode = CodeMirror.mimeModes[mode] || mode;\n    mode = config.innerModes ? config.innerModes(mode) || mode : mode;\n    mode = CodeMirror.mimeModes[mode] || mode;\n    mode = CodeMirror.getMode(config, mode);\n    state.indentOf = stream.indentation();\n\n    if (mode && mode.name !== 'null') {\n      state.innerMode = mode;\n    } else {\n      state.indentToken = 'string';\n    }\n  }\n  function innerMode(stream, state, force) {\n    if (stream.indentation() > state.indentOf || (state.innerModeForLine && !stream.sol()) || force) {\n      if (state.innerMode) {\n        if (!state.innerState) {\n          state.innerState = state.innerMode.startState ? CodeMirror.startState(state.innerMode, stream.indentation()) : {};\n        }\n        return stream.hideFirstChars(state.indentOf + 2, function () {\n          return state.innerMode.token(stream, state.innerState) || true;\n        });\n      } else {\n        stream.skipToEnd();\n        return state.indentToken;\n      }\n    } else if (stream.sol()) {\n      state.indentOf = Infinity;\n      state.indentToken = null;\n      state.innerMode = null;\n      state.innerState = null;\n    }\n  }\n  function restOfLine(stream, state) {\n    if (stream.sol()) {\n      // if restOfLine was set at end of line, ignore it\n      state.restOfLine = '';\n    }\n    if (state.restOfLine) {\n      stream.skipToEnd();\n      var tok = state.restOfLine;\n      state.restOfLine = '';\n      return tok;\n    }\n  }\n\n\n  function startState() {\n    return new State();\n  }\n  function copyState(state) {\n    return state.copy();\n  }\n  /**\n   * Get the next token in the stream\n   *\n   * @param {Stream} stream\n   * @param {State} state\n   */\n  function nextToken(stream, state) {\n    var tok = innerMode(stream, state)\n      || restOfLine(stream, state)\n      || interpolationContinued(stream, state)\n      || includeFilteredContinued(stream, state)\n      || eachContinued(stream, state)\n      || attrsContinued(stream, state)\n      || javaScript(stream, state)\n      || javaScriptArguments(stream, state)\n      || callArguments(stream, state)\n\n      || yieldStatement(stream)\n      || doctype(stream)\n      || interpolation(stream, state)\n      || caseStatement(stream, state)\n      || when(stream, state)\n      || defaultStatement(stream)\n      || extendsStatement(stream, state)\n      || append(stream, state)\n      || prepend(stream, state)\n      || block(stream, state)\n      || include(stream, state)\n      || includeFiltered(stream, state)\n      || mixin(stream, state)\n      || call(stream, state)\n      || conditional(stream, state)\n      || each(stream, state)\n      || whileStatement(stream, state)\n      || tag(stream, state)\n      || filter(stream, state)\n      || code(stream, state)\n      || id(stream)\n      || className(stream)\n      || attrs(stream, state)\n      || attributesBlock(stream, state)\n      || indent(stream)\n      || text(stream, state)\n      || comment(stream, state)\n      || colon(stream)\n      || dot(stream, state)\n      || fail(stream);\n\n    return tok === true ? null : tok;\n  }\n  return {\n    startState: startState,\n    copyState: copyState,\n    token: nextToken\n  };\n}, 'javascript', 'css', 'htmlmixed');\n\nCodeMirror.defineMIME('text/x-pug', 'pug');\nCodeMirror.defineMIME('text/x-jade', 'pug');\n\n});\n"]},"metadata":{},"sourceType":"script"}